<% if @operative_note.read_attribute(:power_inventory).present? %>
  <% power_inventory = @operative_note.read_attribute(:power_inventory) %>
<% else %>
  <% power_inventory = '' %>
<% end %>

<div class="row mb20" style="margin-top:20px;">
  <div class="col-md-12" style="text-decoration: underline">
    CONSUMABLES
  </div>
</div>
<div class="row mb20">
  <div class="col-md-2 ">
    Irrigation Solution :
  </div>
  <div class="col-md-4">
    <%= f.text_field :irrigation_solution, class: 'form-control', value: @operative_note.read_attribute(:irrigation_solution) %>
  </div>
  <div class="col-md-2">
    <%= f.text_field :irrigation_solution_batch_no, class: 'form-control', placeholder: 'Batch No.', value: @operative_note.read_attribute(:irrigation_solution_batch_no) %>
  </div>
</div>

<div class="row mb20">
  <div class="col-md-2 ">
    Sutures :
  </div>
  <div class="col-md-4">
    <%= f.text_field :sutures, class: 'form-control', value: @operative_note.read_attribute(:sutures) %>
  </div>
  <div class="col-md-2">
    <%= f.text_field :sutures_batch_no, class: 'form-control', placeholder: 'Batch No.', value: @operative_note.read_attribute(:sutures_batch_no) %>
  </div>
</div>

<div class="row mb20">
  <div class="col-md-2 ">
    Viscoelastic :
  </div>
  <div class="col-md-4">
    <%= f.text_field :viscoelastic, class: 'form-control', value: @operative_note.read_attribute(:viscoelastic) %>
  </div>
  <div class="col-md-2">
    <%= f.text_field :viscoelastic_batch_no, class: 'form-control', placeholder: 'Batch No.', value: @operative_note.read_attribute(:viscoelastic_batch_no) %>
  </div>
</div>
<div class="row mb20">
  <div class="col-md-2 ">
    Trypan Blue :
  </div>
  <div class="col-md-4">
    <%= f.text_field :trypan_blue, {class: "form-control",:value => @operative_note.read_attribute(:trypan_blue)} %>
  </div>
  <div class="col-md-2">
    <%= f.text_field :trypan_blue_batch_no, {class: "form-control", placeholder: "Batch No.",:value => @operative_note.read_attribute(:trypan_blue_batch_no)} %>
  </div>
</div>
<div class="row mb20">
  <div class="col-md-2 ">
    Other Consumables :
  </div>
  <div class="col-md-4">
    <%= f.text_field :other_consumables, class: 'form-control', value: @operative_note.read_attribute(:other_consumables) %>
  </div>
</div>

<div class="row resize_button mb20">
  <div class="col-md-2 ">
    Implants :
  </div>
  <div class="col-md-2">
    <% if false %>
      <%= f.select :implants, options_for_select([['Monofocal', 'Monofocal'], ['Multifocal', 'Multifocal'], ['Toric', 'Toric'], ['Multifocal Toric', 'Multifocal Toric'], ['Phakic', 'Phakic'], ['Iris Claw', 'Iris Claw'], ['SFIOL', 'SFIOL'], ['ACIOL', 'ACIOL'], ['Piggy Back', 'Piggy Back'], ['Accomodating', 'Accomodating']], selected: @operative_note.read_attribute(:implants)), {}, class: 'implants form-control', style: 'width:125%;' %>
    <% end %>
    <%= f.text_field :implants, class: 'form-control', value: @operative_note.read_attribute(:implants) %>
  </div>
  <div class="col-md-offset-1 col-md-2 ">
    Power :
  </div>
  <div class="col-md-3">
    <button class="btn btn-primary btn-xs subtract_power" style="padding: 0 5px;"><i class="fa fa-minus"></i> </button>
    <%= f.number_field :power_inventory, value: power_inventory, class: 'power_inventory text-center' %>
    <button class="btn btn-primary btn-xs add_power" style="padding: 0 5px;"><i class="fa fa-plus"></i> </button>
  </div>
</div>


<style type="text/css">
  .resize_button .custom-radio-button {
    padding: 2px 15px;
    font-size: 14px;
  }
  div.inline { float:left; }
</style>

<script type="text/javascript">

  $(".subtract_power").on('click', function(e){
    power_inventory_value(e)
    add_value = add_value - 0.5
    $(".power_inventory").attr('value', add_value)
  })

  $(".add_power").on('click', function(e){
    e.preventDefault();
    power_inventory_value(e)
    add_value = add_value + 0.5
    $(".power_inventory").attr('value', add_value)
  })

  function power_inventory_value(e){
    e.preventDefault();
    var field_value = $(".power_inventory").val()
    field_value = parseFloat(field_value)

    if((parseFloat(field_value) == "") || (isNaN(field_value) == true) ) {
      add_value = 0
    } else {
      add_value = parseFloat($(".power_inventory").val())
    }
  }
  $( "input" ).on('change', function(){
    if(($(this).prop('checked'))){
      $(this).parent().parent().next(".hidden_checkbox").css("display", "block");
    }else{
      $(this).parent().parent().next(".hidden_checkbox").css("display", "none");
      $(this).parent().parent().next(".hidden_checkbox").find('input[type=checkbox]:checked').prop('checked', false);
    }
  });
  $(document).ready(function() {
    if ($(".intracameral_medicine").is(':checked')){
      $(".intracameral_medicine").parent().parent().next(".hidden_checkbox").css("display", "block");
    }});

</script>
