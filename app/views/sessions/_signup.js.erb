// Overwrite body overflow
$(document).ready(function(){
  $('body').css("overflow","visible")
  $('.signin').css('overflow-x', 'hidden')
})

var window_height = $(window).height() - 115;
$(".onbooarding-instruction").css('height',window_height)
$(".form-signup").css('height',window_height)

// Set Window Height on Resize
$(window).resize(function() {
  var window_height = $(window).height() - 115;
  $(".onbooarding-instruction").css('height',window_height)
  $(".form-signup").css('height',window_height)
})

// IntroJS
function signUpIntro(){
  $(".btn-print-preview").hide();
  var intro = introJs();
  intro.setOptions({
    showBullets: false,
    showStepNumbers: false,
    showProgress: true,
    keyboardNavigation: false,
    steps: [
      {
        element: document.querySelector('.onbooarding-instruction'),
        intro: "<p style='margin:0px;'>Welcome to <b>FOSS</b>!</p><p style='margin:0px;'>Please take a short tour before we start.</p>"
      },
      {
        element: document.querySelector('.roles-supported'),
        intro: "Different Roles supported in our product."
      },
      {
        element: document.querySelector('.organisation-setup-type'),
        intro: "Setup Type based on the size of Organisation."
      },
      {
        element: document.querySelector('.appointment-type'),
        intro: "Default Appointment Types."
      },
      {
        element: document.querySelector('.print-setting'),
        intro: "Default Print Customization."
      },
      {
        element: document.querySelector('.contact-info'),
        intro: "For any queries contact us."
      },
      {
        element: document.querySelector('.final-steps'),
        intro: "Works best with Chrome.<br/>Also available on Play Store."
      }
    ]
  })
  intro.start();
}
signUpIntro()

$(".introjs-skipbutton").on('click', function(){
  $(".btn-print-preview").show();
})
$(".introjs-donebutton").on('click', function(){
  $(".btn-print-preview").show();
})

// Print Preview for LHS Print Instructions
$(".btn-print-preview").on('click', function(e){
  e.preventDefault();
  $("#signup-modal").html("<%= escape_javascript(render 'print_preview.html.erb') %>")
  $("#signup-modal").modal('show')
})

// Force Lowercase Username
function forceLower(strInput){
  strInput.value = strInput.value.toLowerCase();
}

// User DOB Datepicker
var datepicker_options = {
  maxDate: -((18*365) + 5), // For Age >= 18
  dateFormat: "dd/mm/yy",
  changeMonth: true,
  changeYear: true,
  yearRange: "-100:+0",
}
$("#user_dob").datepicker(datepicker_options)

// Set Age on DOB Change
$("#user_dob").on('change', function(){
  var patientdobday, patientdobmonth, patientdobyear
  if ($("#user_dob").val().length > 9) {
    patientdobday = "0" + moment($("#user_dob").val(), "DD/MM/YYYY").date()
    patientdobmonth = "0" + moment($("#user_dob").val(), "DD/MM/YYYY").month()
    patientdobyear = moment($("#user_dob").val(), "DD/MM/YYYY").year()
    var todaydate = new Date()
    var birthdate = new Date(patientdobyear, patientdobmonth, patientdobday)
    var age = (todaydate - birthdate) / (365.25 * 24 * 60 * 60 * 1000)
    var computed_age = Math.floor(age)
    $("#user_age").val(computed_age)
  }
})

// Update user_selected_url on change role
$("#user_role_ids").on('change', function(){
  if(($(this).val() == "160943002") || ($(this).val() == "6868009")){
    $("#user_user_selected_url").val('/dashboard')
    // $("#user_specialty_ids").attr('disabled', true).val("")
  } else {
    // $("#user_specialty_ids").attr('disabled', false)
    $("#user_user_selected_url").val('/outpatients/appointment_management')
  }
})

// Organisation - Facility Workflow
$(".setup_type_field").on('change', function(){
  if($(this).val() != 'single_user'){
    $("#facility_clinical_workflow").val(true)
  } else {
    $("#facility_clinical_workflow").val(false)
  }
})

// Asset Image View Refresh
function readURL(input) {
  $(".clear-organisation-asset").show()
  if (input.files && input.files[0]) {
    var reader = new FileReader();
    reader.onload = function (e) {
      $(input).parent().find(".thumb").attr('src', e.target.result);
    }
    reader.readAsDataURL(input.files[0]);
  }
}

// Clear Asset
$(".clear-organisation-asset").on('click', function(e){
  e.preventDefault()
  $(".btn-organisation-asset").html('<img class="thumb this-image" style="max-width: 250px; min-height: 100px; max-height: 100px; line-height: 20px;" src="/assets/set_organisation_logo.png" alt="Organisation logo">')
  $(".this-image").on('click', function(){
    $('#upload-organisation-picture').trigger('click');
  })
  $(this).hide()
})


$('.facility_country').select2();
$('.zones-dropdown').select2();
$('.facility_currency_id').select2();

var country = $('.facility_country').val()
if (country == 'VN_254') {
  $('.vietnam_organisation').show();
  $('.other_organisation').hide();
  $('.cambodia_organisation').hide();
} else if(country == 'KH_039') {
  $('.cambodia_organisation').show();
  $('.vietnam_organisation').hide();
  $('.other_organisation').hide();
} else {
  $('.vietnam_organisation').hide();
  $('.cambodia_organisation').hide();
  $('.other_organisation').show();
}

// Change Timezone based on Country
$(".facility_country").on('change', function(){
  var country_id = $('option:selected', this).attr('value');
  autocomplete_check(country_id)
  $(".pincode").prop('readonly',false).val("")
  $(".state").prop('readonly', false).val("")
  $(".city").prop('readonly', false).val("")
  $(".district").prop('readonly',false).val("")
  $(".commune").prop('readonly', false).val("")
  $('.signin').css('overflow-x', 'hidden')

  $.ajax({
    type: 'GET',
    dataType: 'json',
    data: { country_id: country_id },
    url: '/countries/populate_country_timezones',
    success: function(response){
      var currency_id = response.currency._id
      var currency_symbol = response.currency.symbol
      var currency_name = response.currency.name + "-" + response.currency.code

      $('#facility_currency_id').html($("<option></option>").attr("value", currency_id).attr("data-symbol", currency_symbol).text(currency_name));
      $("#facility_currency_id").trigger('change')

      $('.zones-dropdown').children().remove();
      $.each(response.zone_array, function(key, value) {
        $('.zones-dropdown').append($("<option></option>").attr("value",value[1]).text(value[0]));
      });
      if (response.zone_array.length > 0) {
        $('.zones-dropdown').trigger('change');
      } else {
        $("#select2-facility_time_zone-container").html("")
        $("#organisation_acceptance_date").val("")
      }
    }
  })
  if (country_id == 'VN_254') {
    $('.vietnam_organisation').show();
    $('.other_organisation').hide();
    $('.cambodia_organisation').hide();
  } else if(country_id == 'KH_039') {
    $('.cambodia_organisation').show();
    $('.vietnam_organisation').hide();
    $('.other_organisation').hide();
  } else {
    $('.vietnam_organisation').hide();
    $('.cambodia_organisation').hide();
    $('.other_organisation').show();
  }
  $('.state').val('');
  $('.pincode').val('');
  $('.district').val('');
  $('.commune').val('');
  $('.city').val('');
}) //.trigger('change');

// Change Time based on Timezone
$('.zones-dropdown').on('change', function() {
  var time_zone = $('option:selected', this).attr('value');
  if (time_zone.length > 0) {
    $.ajax({
      type: 'GET',
      dataType: 'json',
      data: { time_zone: time_zone },
      url: '/countries/get_time_zone_time',
      success: function(response){
        $('.acceptance_date').attr('value', response.date_time)
      }
    })
  }
});

$("#facility_currency_id").on('change', function(){
  var symbol = $(this).find('option:selected').attr("data-symbol")
  $("#facility_currency_symbol").val(symbol)
})

// Validate Referral Code
$(".btn-check-referral").on('click', function(e){
  e.preventDefault()
  var code = $(".referral_code").val()
  if(code.length > 0){
    $.ajax({
      type: 'get',
      dataType: 'JSON',
      data: {
        code: code
      },
      url: '/referral_codes/validate_code',
      success: function(response) {
        if(response['expiry'] != null){
          $("#organisation_account_expiry_date").val(response['expiry'])
          $("#organisation_referral_code").val(code)
          $(".referral-message").html("<b style='color:" + response['color'] + "'>" + response['message'] + "</b>").show()
        } else {
          $("#organisation_account_expiry_date").val('<%= (Date.current + 30.days).strftime("%d/%m/%Y") %>')
          $("#organisation_referral_code").val("")
          $(".referral-message").html("<b style='color:#d9534f'>Invalid Code.</b>").show()
        }
      },
    });
  } else {
    $(".referral-message").html("<b style='color:#d9534f'>Invalid Referral Code.</b>").show()
  }
})

//Search For India and other starts//
$('#search_state_other').autocomplete({
  minLength: 3,
  source: function(request, response) {
    var country_id = jQuery('#facility_country_id').val();
    jQuery.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_state',
      data: {q: request.term, country_id: country_id, remote: "true" },
      success: function(data) {
          response(data);
      },
      error: function(data) {
      }
    });
  },
  select: function( event, ui ) {
    state = ui.item["state"]
    setTimeout(function() {
      jQuery(".state").val(state)
      jQuery('.state').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.state  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
    };
  }
});

$('#search_city_other').autocomplete({
  minLength: 3,
  source: function(request,response){
    var state = jQuery('#search_state_other').val();
    var country_id = jQuery('#facility_country_id').val();
    jQuery.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_city',
      data: {q: request.term, state: state, country_id: country_id, remote: "true"},
      success: function(data){
        response(data);
      },
      error: function(data){

      }
    });
  },
  select: function( event, ui ) {
    city  = ui.item["city"]
    state = ui.item["state"]
    setTimeout(function() {
      jQuery(".city").val(city)
      jQuery(".state").val(state)
      jQuery('.city').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.city  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
    };
  }
});

$('#search_pincode_other').autocomplete({
  minLength: 3,
  source: function(request,response){
    var country_id = $("#facility_country_id").val()
    var state = $('#search_state_other').val();
    var city = $('#search_city_other').val();
    $.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_pincode',
      data: {q: request.term, country_id: country_id, state: state, city: city, remote: "true"},
      success: function(data){
        response(data);
      },
      error: function(data){
      }
    });
  },
  select: function( event, ui ) {
    pincode = ui.item["pincode"]
    city  = ui.item["city"]
    state = ui.item["state"]
    setTimeout(function() {
      $(".pincode").prop('readonly',true).val(pincode)
      $(".state").prop('readonly', true).val(state)
      $(".city").prop('readonly', true).val(city)
      $(".clear-pincode").show()
      $('.pincode').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
    return $('<li>')
      .append('<a style=\"color:#000;text-shadow: 2px; text-align: center;\">' + item.pincode  + '&nbsp; &nbsp; &nbsp;' + '</a>')
      .appendTo(ul);
    };
  }
});
//Search For India and other ends//

//Search For Vietnam starts//
$('#search_district_vietnam').autocomplete({
  minLength: 2,
  source: function(request,response) {
    var country_id = jQuery('#facility_country_id').val()
    var city = jQuery('#search_city_vietnam').val();
    jQuery.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_district',
      data: {q: request.term, city: city, country_id: country_id, remote: "true"},
      success: function(data){
        response(data);
      },
      error: function(data){
      }
    });
  },
  select: function( event, ui ) {
    district = ui.item["district"]
    city  = ui.item["city"]
    setTimeout(function() {
      jQuery(".district").val(district)
      jQuery(".city").val(city)
      jQuery('.district').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
        .append('<a style=\"color:#000;text-shadow: 2px\">' + item.district  + '&nbsp; &nbsp; &nbsp;' + '</a>')
        .appendTo(ul);
    };
  }
});

$('#search_city_vietnam').autocomplete({
  minLength: 3,
  source: function(request,response){
    var country_id = jQuery('#facility_country_id').val();
    jQuery.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_city',
      data: {q: request.term, country_id: country_id, remote: "true"},
      success: function(data){
        response(data);
      },
      error: function(data){

      }
    });
  },
  select: function( event, ui ) {
    city  = ui.item["city"]
    setTimeout(function() {
      jQuery(".city").val(city)
      jQuery('.city').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.city  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
    };
  }
});

$('#search_commune_vietnam').autocomplete({
  minLength: 2,
  source: function(request,response) {
    var country_id = jQuery('#facility_country_id').val()
    var city = jQuery('#search_city_vietnam').val();
    var district = jQuery('#search_district_vietnam').val();
    jQuery.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_commune',
      data: {q: request.term, city: city, district: district, country_id: country_id, remote: "true"},
      success: function(data){
        response(data);
      },
      error: function(data){

      }
    });
  },
  select: function( event, ui ) {
    commune = ui.item["commune"]
    district  = ui.item["district"]
    city = ui.item["city"]
    setTimeout(function() {
      jQuery(".commune").prop('readonly',true).val(commune)
      jQuery(".city").prop('readonly', true).val(city)
      jQuery(".district").prop('readonly', true).val(district)
      jQuery(".clear-commune").show()
      jQuery('.commune').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
        .append('<a style=\"color:#000;text-shadow: 2px; text-align: center;\">' + item.commune + ' (' + item.district + ')' + '&nbsp; &nbsp; &nbsp;' + '</a>')
        .appendTo(ul);
    };
  }
});
//Search For Vietnam ends//

//Search For Cambodia starts//
$('#search_pincode_cambodia').autocomplete({
  minLength: 3,
  source: function(request,response){
    var country_id = $("#facility_country_id").val()
    var state = $('#search_state_cambodia').val();
    var district = $('#search_district_cambodia').val();
    var commune = $('#search_commune_cambodia').val();
    $.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_pincode',
      data: {q: request.term, country_id: country_id, state: state, district: district, commune: commune, remote: "true"},
      success: function(data){
        response(data);
      },
      error: function(data){
      }
    });
  },
  select: function( event, ui ) {
    pincode = ui.item["pincode"]
    state = ui.item["state"]
    district = ui.item["district"]
    commune = ui.item["commune"]
    setTimeout(function() {
      $(".pincode").prop('readonly',true).val(pincode)
      $(".state").prop('readonly', true).val(state)
      $(".district").prop('readonly', true).val(district)
      $(".commune").prop('readonly', true).val(commune)
      $(".clear-pincode").show()
      $('.pincode').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
    return $('<li>')
      .append('<a style=\"color:#000;text-shadow: 2px; text-align: center;\">' + item.pincode  + '&nbsp; &nbsp; &nbsp;' + '</a>')
      .appendTo(ul);
    };
  }
});

$('#search_state_cambodia').autocomplete({
  minLength: 3,
  source: function(request, response) {
    var country_id = jQuery('#facility_country_id').val();
    jQuery.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_state',
      data: {q: request.term, country_id: country_id, remote: "true" },
      success: function(data) {
          response(data);
      },
      error: function(data) {
      }
    });
  },
  select: function( event, ui ) {
    state = ui.item["state"]
    setTimeout(function() {
      jQuery(".state").val(state)
      jQuery('.state').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.state  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
    };
  }
});

$('#search_district_cambodia').autocomplete({
  minLength: 2,
  source: function(request,response) {
    var country_id = jQuery('#facility_country_id').val()
    var state = jQuery('#search_state_cambodia').val();
    jQuery.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_district',
      data: {q: request.term, state: state, country_id: country_id, remote: "true"},
      success: function(data){
        response(data);
      },
      error: function(data){
      }
    });
  },
  select: function( event, ui ) {
    district = ui.item["district"]
    state  = ui.item["state"]
    setTimeout(function() {
      jQuery(".district").val(district)
      jQuery(".state").val(state)
      jQuery('.district').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
        .append('<a style=\"color:#000;text-shadow: 2px\">' + item.district  + '&nbsp; &nbsp; &nbsp;' + '</a>')
        .appendTo(ul);
    };
  }
});

$('#search_commune_cambodia').autocomplete({
  minLength: 2,
  source: function(request,response) {
    var country_id = jQuery('#facility_country_id').val()
    var state = jQuery('#search_state_cambodia').val();
    var district = jQuery('#search_district_cambodia').val();
    jQuery.ajax({
      dataType: "json",
      type : 'get',
      url: '/locations/search_commune',
      data: {q: request.term, state: state, district: district, country_id: country_id, remote: "true"},
      success: function(data){
        response(data);
      },
      error: function(data){

      }
    });
  },
  select: function( event, ui ) {
    commune = ui.item["commune"]
    district  = ui.item["district"]
    state = ui.item["state"]
    setTimeout(function() {
      jQuery(".commune").prop('readonly',true).val(commune)
      jQuery(".state").prop('readonly', true).val(state)
      jQuery(".district").prop('readonly', true).val(district)
      jQuery(".clear-commune").show()
      jQuery('.commune').blur()
    }, 20);
  },
  create: function () {
    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
        .append('<a style=\"color:#000;text-shadow: 2px; text-align: center;\">' + item.commune + ' (' + item.district + ')' + '&nbsp; &nbsp; &nbsp;' + '</a>')
        .appendTo(ul);
    };
  }
});
//Search For Cambodia ends//

// Clear pincode
$(".clear-pincode").on('click', function(e){
  e.preventDefault()
  $(".pincode").prop('readonly',false).val("")
  $(".state").prop('readonly', false).val("")
  $(".city").prop('readonly', false).val("")
  $(".district").prop('readonly',false).val("")
  $(".commune").prop('readonly', false).val("")
  $(".clear-pincode").hide()
});

// Clear pincode
$(".clear-commune").on('click', function(e){
  e.preventDefault()
  $(".commune").prop('readonly',false).val("")
  $(".district").prop('readonly', false).val("")
  $(".city").prop('readonly', false).val("")
  $(".state").prop('readonly', false).val("")
  $(".pincode").prop('readonly',false).val("")
  $(".clear-commune").hide()
});

// Enable Autocomplete only if country India
function autocomplete_check(country_id){
  if (country_id == 'IN_108') {
    $('#search_state_other').autocomplete("enable");
    $('#search_city_other').autocomplete("enable");
    $('#search_pincode_other').autocomplete("enable");
  } else if (country_id == 'VN_254') {
    $('#search_district_vietnam').autocomplete("enable");
    $('#search_city_vietnam').autocomplete("enable");
    $('#search_commune_vietnam').autocomplete("enable");
  } else if (country_id == 'KH_039') {
    $('#search_pincode_cambodia').autocomplete("enable");
    $('#search_state_cambodia').autocomplete("enable");
    $('#search_district_cambodia').autocomplete("enable");
    $('#search_commune_cambodia').autocomplete("enable");
  } else {
    $('#search_state_other').autocomplete("disable");
    $('#search_city_other').autocomplete("disable");
    $('#search_pincode_other').autocomplete("disable");
    $('#search_district_vietnam').autocomplete("disable");
    $('#search_city_vietnam').autocomplete("disable");
    $('#search_commune_vietnam').autocomplete("disable");
    $('#search_pincode_cambodia').autocomplete("disable");
    $('#search_state_cambodia').autocomplete("disable");
    $('#search_district_cambodia').autocomplete("disable");
    $('#search_commune_cambodia').autocomplete("disable");
  }
}
var country_id = $('.facility_country option:selected').attr('value');
autocomplete_check(country_id)

// Validations
function new_organisation() {
  $('#new-signup-form').validate({
    rules: {
      "user[fullname]": {
        required: true
      },
      "user[email]": {
        required: true,
        remote: "/users/validate_user"
      },
      "user[username]": {
        required: true,
        remote: "/users/validate_user"
      },
      "user[gender]": {
        required: true
      },
      "user[dob]": {
        required: true
      },
      "user[role_ids]": {
        required: true
      },
      "organisation[name]": {
        required: true
      },
      "organisation[terms]": {
        required: true
      },
      "organisation[address1]": {
        required: true
      },
      "organisation[address2]": {
        required: true
      },
      "organisation[city]": {
        required: true,
        minlength: 3,
        "remote":  {
          url: '/locations/check_city',
          type: "get",
          data: { country_id: function(){ return $('.facility_country option:selected').attr('value') } }
        }
      },
      "organisation[state]": {
        required: true,
        minlength: 3,
        "remote":  {
          url: '/locations/check_state',
          type: "get",
          data: { country_id: function(){ return $('.facility_country option:selected').attr('value') } }
        }
      },
      "organisation[pincode]": {
        required: true,
        minlength: 3,
        "remote":  {
          url: '/locations/check_pincode',
          type: "get",
          data: { country_id: function(){ return $('.facility_country option:selected').attr('value') } }
        }
      },
      "organisation[district]": {
        required: true,
        minlength: 2,
        "remote":  {
          url: '/locations/check_district',
          type: "get",
          data: { country_id: function(){ return $('.facility_country option:selected').attr('value') } }
        }
      },
      "organisation[commune]": {
        required: true,
        minlength: 2,
        "remote":  {
          url: '/locations/check_commune',
          type: "get",
          data: { country_id: function(){ return $('.facility_country option:selected').attr('value') } }
        }
      },
      "organisation[telephone]": {
        required: true
      },
      "organisation[referral_code]": {
        required: true
      },
      "facility[country_id]": {
       required: true,
     },
      "facility[specialty_ids][]": {
        required: true
      },
      "facility[time_zone]": {
       required: true,
     },

    },
    messages: {
      "user[fullname]": {
        required: "Name Required"
      },
      "user[email]": {
        required: "Email Required",
        remote: "Email already taken",
      },
      "user[username]": {
        required: "Username Required",
        remote: "Username already taken",
      },
      "user[gender]": {
        required: "Gender Required"
      },
      "user[dob]": {
        required: "Birth Date Required"
      },
      "user[role_ids]": {
        required: "Designation Required"
      },
      "organisation[name]": {
        required: "Organisation Name Required"
      },
      "organisation[terms]": {
        required: "Terms should be Checked."
      },
      "organisation[address1]": {
        required: "Address1 Required"
      },
      "organisation[address2]": {
        required: "Address2 Required"
      },
      "organisation[city]": {
        required: "City Required",
        remote: "Search and Select"
      },
      "organisation[state]": {
        required: "State Required",
        remote: "Search and Select"
      },
      "organisation[pincode]": {
        required: "Pincode Required",
        remote: "Search and Select"
      },
      "organisation[district]": {
        required: "District Required",
        remote: "Search and Select"
      },
      "organisation[commune]": {
        required: "Commune Required",
        remote: "Search and Select"
      },
      "organisation[telephone]": {
        required: "Mobile Required"
      },
      "organisation[referral_code]": {
        required: "Required"
      },
      "facility[country_id]": {
       required: "Please select Country",
      },
      "facility[specialty_ids][]": {
        required: "Specialty Required"
      },
      "facility[time_zone]": {
       required: "Please select Time Zone",
     }
    },
    errorPlacement: function (error, element) {
      name = $(element).attr('name')
      if(name == "organisation[terms]"){
        error.appendTo($("#organisation_terms_error"));
      } else if($(element).hasClass("select2-hidden-accessible")) {
        element = $("#select2-" + $(element).attr("id") + "-container").parent();
        error.insertAfter(element);
      } else if (name == "organisation[referral_code]"){
        $(".referral-message").html("<b style='color:#d9534f'>Enter Referral Code provided to you and click 'Apply' , if you dont have one? Contact us.</b>").show()
      } else {
        error.insertAfter(element);
      }
    }
  });
}
new_organisation()

$.validator.addMethod("acceptancy_name", $.validator.methods.required, "Acceptee's name required");
$.validator.addClassRules("acceptancy_name", { acceptancy_name: true});

$.validator.addMethod("username", function(value, element) {
  if(/[^a-zA-Z0-9_.\-\/]/.test(value)) {
    return false;
  } else {
    return true;
  }
}, "No Special Characters allowed.");

$()


