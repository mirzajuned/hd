<div class="row">
  <div class="col-md-4">
    <div class="col-md-5">Admission Date :</div>
    <div class="col-md-7">
      <%= f.input :admissiondate, :label => false, :required => false, :input_html => {:class => "form-control set-height-field", :name => "ipdrecord[admissiondate]", :size => "11", :maxlength => "11", :value => ipdrecord.read_attribute(:admissiondate) } %>
    </div>
  </div>

  <div class="col-md-4">
    <div class="col-md-5">Surgery Date :</div>
    <div class="col-md-7">
      <%= f.input :surgerydate, :label => false, :required => false, :input_html => {:class => "form-control set-height-field", :name => "ipdrecord[surgerydate]", :size => "11", :maxlength => "11", :value => ipdrecord.read_attribute(:surgerydate) } %>
    </div>
  </div>

  <div class="col-md-4">
    <div class="col-md-5">Discharge Date :</div>
    <div class="col-md-7">
      <%= f.input :dischargedate, :label => false, :required => false, :input_html => {:class => "form-control set-height-field", :name => "ipdrecord[dischargedate]", :size => "11", :maxlength => "11", :value => ipdrecord.read_attribute(:dischargedate) } %>
    </div>
  </div>
</div>

<br>
<br>

<div class="row">
  <div class="col-md-6">
    <div class="col-md-3">Assessment :</div>
    <div class="col-md-9">
      <%= f.input :assessment, :label => false, :required => false, :input_html => {:class => "form-control set-width", :name => "ipdrecord[assessment]", :size => "80", :maxlength => "100", :value => ipdrecord.read_attribute(:assessment) } %>
    </div>
  </div>

  <div class="col-md-6">
    <div class="col-md-2">Diagnosis :</div>
    <div class="col-md-10">
    <% if @find_diagnosis_path === "new" %>
      <% if @opd.size == 0 %>
        <%= f.input :diagnosis, :label => false, :required => false, :input_html => {:class => "form-control set-width", :name => "ipdrecord[diagnosis]", :size => "80", :maxlength => "100", :value => ipdrecord.read_attribute(:diagnosis) } %>
      <% else %>
        
        <%= render partial: "templates/ipd/ipd_partials/diagnosis_opd" , locals: { f: f } %>
        
      <% end %>
    <% else %>
      <%= f.input :diagnosis, :label => false, :required => false, :input_html => {:class => "form-control set-width", :name => "ipdrecord[diagnosis]", :size => "80", :maxlength => "100", :value => ipdrecord.read_attribute(:diagnosis) } %>
    <% end %>
    </div>
  </div>
</div>

<br>
<br>
<%= f.text_field :department,{:type => "hidden",:value=> @ipdrecord.specialty_id, :id=> "#ipdrecord_specalityid" } %>



<div class="row">

  <% if @ipdrecord.specialty_id == "309988001" %>

    <%= render partial: 'templates/ipd/ipd_partials/dischargenote_form_ophthalmology' , locals: {ipdrecord: @ipdrecord} %>

  <% else %>

    <%= render partial: 'templates/ipd/ipd_partials/dischargenote_form_orthopedics' , locals: {ipdrecord: @ipdrecord} %>

  <% end %>



  <div class="col-md-2">
    <div class="btn btn-success save-medication-kit-btn mb10" style="width: 100%;"><i class="fa fa-hand-o-left"></i> Save Medication Set</div>
    <!-- medication set dropdown -->
    <div class="medication_set_dropdown_wrapper">
      <input type="hidden" name="opd_ipd" value="[440654001,0]" id="find_in_set_type" class="find_in_set_type">
      <input type="hidden" class="selected_specialty" value="<%= @specalityid %>">
      <%= render partial: "templates/shared/medication_set_dropdown" %>
    </div>
    <div class="mb5" style="border-bottom: solid"></div>
    <label for="medicationsets-label">Medication Sets</label>
    <div class="medication_kit_refresh">
      <%= f.input :medicationsets, collection: MedicationKit.where(:user_id => current_user.id,:set_type.in => [440654001, 0], :organisation_id => current_user.organisation.id, level: "user"), input_html: { multiple: true, :size => '13', :style => 'height: 100%; width:100%', :class => 'form-control option_remover'}, as: :select,  :label => false,  :item_wrapper_class => 'form-control', :required => false %>
    </div>
  </div>

</div>

<br>
<div class="row">

  <div class="col-md-6">

    <label for="comments-textarealabel">Medication Comments (free text)</label>
    <%= f.input :medicationcomments, as: :text,  :label => false, :required => false, :input_html => {:class => 'form-control', :rows => 2, :cols => 70, :required => false, :name => "ipdrecord[medicationcomments]", :value => ipdrecord.read_attribute(:medicationcomments) } %>

  </div>

  <div class="col-md-6">

    <label for="comments-textarealabel">Advice on Discharge (free text)</label>
    <%= f.input :adviceondischarge, as: :text,  :label => false, :required => false, :input_html => {:class => 'form-control', :rows => 2, :cols => 70, :required => false, :name => "ipdrecord[adviceondischarge]", :value => ipdrecord.read_attribute(:adviceondischarge) } %>

  </div>

</div>


<style type="text/css">

  .set-height-field {
    height: 20px;
  }

  .set-width {
    width: 100% !important;
  }


  
</style>

<script>
  jQuery(document).ready(function(){
    _add_button_at_last()

    jQuery(".save-medication-kit-btn").on('click', function(event) {
      event.preventDefault();
      jQuery(".save-medication-kit-btn").addClass("disabled");
//    jQuery(".clear-procedure-note-button").addClass("disabled");
      if (jQuery('.popover-save-medication-set').length) {
        jQuery('.popover-save-medication-set').popover('destroy');
      }
//    var i = jQuery(this);
//    var params = { proceduretext: jQuery('#ipdrecord_procedurenote').code() };
      var specialty_id= parseInt($("#ipdrecord_specalityid").val())
      jQuery(this).popover({
        placement : 'left',
        title : 'New Medication Set',
        html : true,
        content : function(){
          jQuery.ajax({
            type: "GET",
            url: "/medication_kits/new_medication_kits_popup",
            data: {specialty_id: specialty_id, remote: "true" }
          }).done(function( data ) {
            jQuery('.popover.in .popover-content').empty();
            jQuery(".popover.in .popover-content").html(data);
            jQuery(".popover.in").css("top","-50px")
          });
        },
        template : '<div class="popover popover-save-medication-set" role="tooltip" style="width: 700px"><div class="arrow"></div><h5 class="popover-title"></h5><div class="popover-content"></div></div>'
      }).popover('show');
    });

    jQuery('tbody').on('click', "a[name*='addnewmedicationbutton']", function() {
      var fieldcounter;
      if (jQuery(".medication-table-body-added > .treatmentmedications").length == 0){
        fieldcounter = 0;
      } else {
        fieldcounter = jQuery(".medication-table-body-added > .treatmentmedications").length;
      }
      var params = { counter: fieldcounter };
      jQuery.ajax({
        type: "GET",
        dataType: "script",
        url: "/inpatient/ipd_records/ipdaddmedication",
        data: {ajax: params, remote: "true" },
        async: false,
        success: function(){
          taper_form();
        }
      });
      _renumber_id_after_remove("tbody.medication-table-body-added", "div.medication-table-body-removed");
      medi_autocomplete_bind()
    })

    jQuery('.medication-table-body-added').on('click', "a[name*='removemedicationbutton']", function() {
      event.preventDefault();
      var medications_removed_tr_html;
      var fieldcounter;
      fieldcounter = jQuery(this).attr('id').slice(-1);
      var medications_tr_array = jQuery(this).parents('.treatmentmedications').find(".id");
      if (medications_tr_array.length > 0) {
        jQuery(this).parents('.treatmentmedications').find("input[name*='_destroy']").val("1");
        medications_removed_tr_html = jQuery(this).parents('.treatmentmedications').wrap('<p/>').parent().html();
        jQuery(this).parents('.treatmentmedications').unwrap();
        jQuery('.medication-table-body-removed').append(medications_removed_tr_html);
        jQuery(this).parents('.treatmentmedications').remove();
        _renumber_id_after_remove("tbody.medication-table-body-added", "div.medication-table-body-removed");
      } else {
        jQuery(this).parents('.treatmentmedications').remove();
        _renumber_id_after_remove("tbody.medication-table-body-added", "div.medication-table-body-removed");
      }
    });

    function _add_button_at_last() {
      var row_count = jQuery("[id^='addnewmedicationbutton']").parents('.treatmentmedications:visible').length
      jQuery("[id^='addnewmedicationbutton']:lt("+(row_count-1)+")").addClass("hidden")
      jQuery("[id^='addnewmedicationbutton']:eq("+(row_count-1)+")").removeClass("hidden")
    }

    function _renumber_id_after_remove(added, removed) {
      var counter = 0;
      jQuery(added).find("tr").each(function() {
        jQuery(this).find("input").each(function(index, element) {
          var nameattr, idattr;
          nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
          idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
          jQuery(this).attr('name', nameattr);
          jQuery(this).attr('id', idattr);
        });
        jQuery(this).find("select").each(function(index, element) {
          var nameattr, idattr;
          nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
          idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
          jQuery(this).attr('name', nameattr);
          jQuery(this).attr('id', idattr);
        });
        jQuery(this).find("a").each(function(index, element) {
          var idattr;
          idattr = element.id.replace(/[0-9]/g, counter);
          jQuery(this).attr('id', idattr);
        });
        counter++;
      });
      jQuery(removed).find("tr").each(function() {
        jQuery(this).find("input").each(function(index, element) {
          var nameattr, idattr;
          nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
          idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
          jQuery(this).attr('name', nameattr);
          jQuery(this).attr('id', idattr);
        });
        jQuery(this).find("select").each(function(index, element) {
          var nameattr, idattr;
          nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
          idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
          jQuery(this).attr('name', nameattr);
          jQuery(this).attr('id', idattr);
        });
        jQuery(this).find("a").each(function(index, element) {
          var idattr;
          idattr = element.id.replace(/[0-9]/g, counter);
          jQuery(this).attr('id', idattr);
        });
        counter++;
      });
      _add_button_at_last()
    }

    medi_autocomplete_bind()
    })
    function medi_autocomplete_bind(){
      x = []
      medication_type = []
      jQuery(".medicinename").autocomplete({
        minLength: 3,
        source: function(request, response) {
          jQuery.ajax({
            dataType: "json",
            type : 'get',
            url: '/icdtree/getitems',
            //data: {searchpatient: params, remote: "true" },
            data: {q: request.term, remote: "true" },
            success: function(data) {
              //jQuery('#searchpatientkeyword').removeClass('ui-autocomplete-loading')
              items = [];
              for(i = 0; i < data.length; i++){
                if(data[i].dosage){
                  x[data[i].description + " " + data[i].dosage + ""] = data[i].item_id;
                  items.push(data[i].description + " " + data[i].dosage + "")
                  medication_type[data[i].item_id] = data[i].med_type

                } else {
                  items.push(data[i].description)
                  x[data[i].description] = data[i].item_id
                  medication_type[data[i].item_id] = data[i].med_type
                }

              }
              //Find Unique items from array
              //http://stackoverflow.com/questions/1960473/unique-values-in-an-array
              function onlyUnique(value, index, self) {
                return self.indexOf(value) === index;
              }
              unique = items.filter( onlyUnique );
              response(unique);
            },
            error: function(data) {
            }
          });
        },
        focus: function(event, ui) {
          //return false;
        },
        select: function( event, ui ) {
          var itemname = ui.item.value;
          jQuery(this).val(itemname);



          name = $(this).attr('name').replace('medicinename', 'pharmacy_item_id', 'medicinetype');
          $('<input>').attr({
            type: 'hidden',
            // id: 'foo',
            name: name,
            value: x[itemname]
          }).appendTo($(this).parent());

          jQuery(this).closest('.medicinetype').val(itemname);
          $(this).closest(".treatmentmedications").find('.medicinetype').val(medication_type[x[itemname]])
          // jQuery(this).val(dosage);
          jQuery(this).closest('div').next().find('textarea').val(itemname);
          //                jQuery(this).val(medicinemame);
          //                jQuery(this).closest('div').next().find('textarea').val(presentation);
          //            }

          return false;
        }
      });
      jQuery(".medicinename").autocomplete( "option", "appendTo", ".form-inline" );
      // jQuery(".medication_group").on('click',"[id^=remove_medication_item_]",function(e){

      //     var id = e.currentTarget.id

      //     jQuery("#"+id).parent().parent().remove()
      // })



      jQuery('#inpatient_ipd_record_medicationsets').on('click', function() {
        var params = { medicationkitid: this.value };

          jQuery.ajax({
            type: "GET",
            url: "/opd_records/fill_ipd_medication_data",
            data: {ajax: params, remote: "true"}
          });

//        _jquery_ajax_get_params_no_data_return("/opd_records/fill_medication_data", params);
      });

    }
</script>