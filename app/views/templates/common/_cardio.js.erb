 $(document).ready(function(){

        $('#slider-min').slider({
            range: 'min',
            max: 110,
            min:92,
            value: 92,
            slide: function(event,ui){
                $( "#temp" ).html( ui.value );
            }
        });
        $("#temp").val($("#slider-min").slider("value"));


        $('#spo2-slider').slider({
            range: 'min',
            max: 100,
            min:40,
            value: 40,
            slide: function(event,ui){
                $( "#spo2" ).html( ui.value );
            }
        });
        $("#spo2").val($("#spo2-slider").slider("value"));
    });


      $('.constitutionalcontent').hide();
      $('.cardiovascularcontent').hide();
      $('.respiratorycontent').hide();
      $('.gastrointestinalcontent').hide();
      $('.chestpaincontent').hide();
      $('.dyspneacontent').hide();
      $('.hypertensioncontent').hide();
      $('.palpitationscontent').hide();
      $('.hemoptysiscontent').hide();
      $('.oedemacontent').hide();
      $('.pasthistorycontent').hide();
      $('.drughistorycontent').hide();
      $('.familyhistorycontent').hide();
      $('.surgicalhistorycontent').hide();
      $('.physicalexaminationcontent').hide();
      $('.cardiovascularexaminationcontent').hide();
      $('.bpposition').hide();
      $('.drughistorydetails').hide();
      $('.prodromalsymptomscontent').hide();
      $('.provocativesymptomscontent').hide();
      $('.surgicaltextbox').hide();
      $('.syncopecontent').hide();
      $('.questionsforpalpation').hide();
      $('.questionsforthrill').hide();
    $('.questionsfors1').hide();
    $('.questionsfors2').hide();
    $('.questionsfors3').hide();
    $('.questionsfors4').hide();
    $('.questionsforinspection').hide();
    $('.questionsforausculation').hide();
    $('.questionsforgastrointestinalinspection').hide();
    $('.questionsforgastrointestinalpalpation').hide();
    $('.questionsforgastrointestinalausculation').hide();
    $('.questionsforextrasounds').hide();
    $('.questionsfordiastolicshock').hide();
    $('.questionsforpalpables3').hide();
    $('.questionsforparasternalheave').hide();
      $('#witnessedbycontent').hide();
    $('.questionsfornervoussystemfundoscopy').hide();
    $('.questionsfornervoussystemmentalfunctions').hide();




    $('#cardio_fundoscopy').on('change',function(){
        var cc=$(this).val();

        var val=cc.toLowerCase();
        var value=val.replace(/\s/g, "");

        $('#nervousfundoscopyvalue').text(cc);
        if(cc!='Normal' && cc.empty())
            $(".questionsfornervoussystemfundoscopy").slideToggle();

    });


    $('#cardio_highermentalfunctions').on('change',function(){
        var cc=$(this).val();

        var val=cc.toLowerCase();
        var value=val.replace(/\s/g, "");

        $('#nervousmentalfunctionsvalue').text(cc );
        if(cc!='Normal')
            $(".questionsfornervoussystemmentalfunctions").slideToggle();

    });





    $('#cardio_gastroinspection').on('change',function(){
        var cc=$(this).val();

        var val=cc.toLowerCase();
        var value=val.replace(/\s/g, "");

        $('#gastroinspectionvalue').text(cc );
        $(".questionsforgastrointestinalinspection").slideToggle();

    });


    $('#cardio_gastropalpation').on('change',function(){
        var cc=$(this).val();

        var val=cc.toLowerCase();
        var value=val.replace(/\s/g, "");

        $('#gastropalpationvalue').text(cc );
        $(".questionsforgastrointestinalpalpation").slideToggle();

    });

    $('#cardio_gastroausculation').on('change',function(){
        var cc=$(this).val();

        var val=cc.toLowerCase();
        var value=val.replace(/\s/g, "");

        $('#gastroausculationvalue').text(cc );
        $(".questionsforgastrointestinalausculation").slideToggle();

    });





    $('#cardio_ausculation').on('change',function(e){
        var cc=$(this).val();


        var val=cc.toLowerCase();
        var value=val.replace(/\s/g, "");

        $('#ausculationvalue').text(cc );
        if(cc!='Normal' &&(cc!="" ||typeof $(this).data("oldValue")!='undefined'&& $(this).data("oldValue")!="Normal" ) )
        $(".questionsforausculation").slideToggle();
        else

        $(this).data("oldValue", cc);
    });


    $('#cardio_inspection').on('change',function(){
        var cc=$(this).val();

        var val=cc.toLowerCase();
        var value=val.replace(/\s/g, "");

        $('#inspectionvalue').text(cc );
        $(".questionsforinspection").slideToggle();

    });


    $('#cardio_extrasounds').on('change',function(){
        var cc=$(this).val();
        if(cc=='Present')
            $(".questionsforextrasounds").slideDown();
        else
            $(".questionsforextrasounds").slideUp();

    });


    $('#cardio_otherfindings').on('change',function(){
        var cc=$(this).val();

        var val=cc.toLowerCase();
        var value=val.replace(/\s/g, "");


            $(".questionsfor"+value).slideToggle();

    });




    $('#cardio_heartsounds').on('change',function(){
        var cc=$(this).val();

        var val=cc.toLowerCase();


        $(".questionsfor"+val).slideToggle();

    });


    $('.cardiotemp').click(function(){
          var cc=$(this).attr("data-value");
          $("."+cc+"content").toggle();

      });


    $('#cardio_palpation').on('change',function(){
        var cc=$(this).val();
        if(cc=='Palpable')
            $(".questionsforpalpation").slideDown();
        else
            $(".questionsforpalpation").slideUp();

    });

    $('#cardio_witnessed').on('change',function(){
        var cc=$(this).val();
        if(cc=='Yes')
          $("#witnessedbycontent").show();
        else
          $("#witnessedbycontent").hide();

    });



    $('#prodromalsymptoms').click(function(){
        $('.prodromalsymptomscontent').slideToggle();
    });

    $('#provocativesymptoms').click(function(){
        $('.provocativesymptomscontent').slideToggle();
    });

      $('.bp').click(function(){
         $('.bpposition').slideToggle();
      });


      $('.drug').click(function(){
          $('.drughistorydetails').slideToggle();

      });

      $('.surgical').click(function(){
          $('.surgicaltextbox').slideToggle();
      });



      (function (root, factory) {

          root.TreeDataSource = factory();

      }(this, function () {

          var DataSourceTree = function (options) {
              this._data = options.data;
              this._delay = options.delay;
          };

          DataSourceTree.prototype = {

              data: function (options, callback) {
                  var self = this;

                  setTimeout(function () {
                      var data = $.extend(true, [], self._data);

                      callback({ data: data });

                  }, this._delay)
              }

          };

          return DataSourceTree;
      }));

      (function (root, factory) {

          root.RadiologyTreeDataSource = factory();

      }(this, function () {

          var RadiologyDataSourceTree = function (options) {
              this._data = options.data;
              this._delay = options.delay;
          };

          RadiologyDataSourceTree.prototype = {

              data: function (options, callback) {
                  var self = this;

                  setTimeout(function () {
                      var data = $.extend(true, [], self._data);

                      callback({ data: data });

                  }, this._delay)
              }

          };

          return RadiologyDataSourceTree;
      }));

      (function (root, factory) {

          root.RadiologyCTTreeDataSource = factory();

      }(this, function () {

          var RadiologyCTTreeDataSource = function (options) {
              this._data = options.data;
              this._delay = options.delay;
          };

          RadiologyCTTreeDataSource.prototype = {

              data: function (options, callback) {
                  var self = this;

                  setTimeout(function () {
                      var data = $.extend(true, [], self._data);

                      callback({ data: data });

                  }, this._delay)
              }

          };

          return RadiologyCTTreeDataSource;
      }));

      (function (root, factory) {

          root.RadiologyMRITreeDataSource = factory();

      }(this, function () {

          var RadiologyMRITreeDataSource = function (options) {
              this._data = options.data;
              this._delay = options.delay;
          };

          RadiologyMRITreeDataSource.prototype = {

              data: function (options, callback) {
                  var self = this;

                  setTimeout(function () {
                      var data = $.extend(true, [], self._data);

                      callback({ data: data });

                  }, this._delay)
              }

          };

          return RadiologyMRITreeDataSource;
      }));

      (function (root, factory) {

          root.RadiologyUSGOTHERSTreeDataSource = factory();

      }(this, function () {

          var RadiologyUSGOTHERSTreeDataSource = function (options) {
              this._data = options.data;
              this._delay = options.delay;
          };

          RadiologyUSGOTHERSTreeDataSource.prototype = {

              data: function (options, callback) {
                  var self = this;

                  setTimeout(function () {
                      var data = $.extend(true, [], self._data);

                      callback({ data: data });

                  }, this._delay)
              }

          };

          return RadiologyUSGOTHERSTreeDataSource;
      }));

      var children = { data: [] };
      var radiologychildren = { data: [] };
      var radiologyctchildren = { data: [] };
      var radiologymrichildren = { data: [] };
      var radiologyusgotherschildren = { data: [] };

      var Tree = function (element, options) {
          this.$element = $(element);
          this.options = $.extend({}, $.fn.tree.defaults, options);

          this.$element.on('click', '.tree-item', $.proxy(function (ev) { this.selectItem(ev.currentTarget); }, this));
          this.$element.on('click', '.tree-folder-header', $.proxy(function (ev) { this.selectFolder(ev.currentTarget); }, this));

          this.render();
      };

      Tree.prototype = {
          constructor: Tree,

          render: function () {
              this.populate(this.$element);
          },

          populate: function ($el) {
              var self = this;
              var loader = $el.parent().find('.tree-loader:eq(0)');
              loader.show();
              this.options.dataSource.data($el.data(), function (items) {
                  if (children.data.length > 0) items = children;
                  loader.hide();
                  $.each(items.data, function(index, value) {
                      var $entity;

                      if (value.type === "folder") {
                          $entity = self.$element.find('.tree-folder:eq(0)').clone().show();
                          $entity.find('.tree-folder-name').html(value.name);
                          $entity.find('.tree-loader').html(self.options.loadingHTML);
                          $entity.find('.tree-folder-header').data(value);
                      } else if (value.type === "item") {
                          $entity = self.$element.find('.tree-item:eq(0)').clone().show();
                          $entity.find('.tree-item-name').html(value.name);
                          $entity.data(value);
                      }

                      if ($el.hasClass('tree-folder-header')) {
                          $el.parent().find('.tree-folder-content:eq(0)').append($entity);
                      } else {
                          $el.append($entity);
                      }
                  });

                  self.$element.trigger('loaded');
                  var treeItems = document.getElementsByClassName('tree-item-name');
                  for (var i = 0; i < treeItems.length; i++) {
                      $(treeItems[i]).parent().height($(treeItems[i]).height());
                  }
              });
              $('.loadingPlaceholder').hide();

          },

          selectItem: function (el) {
              var $el = $(el);
              var $all = this.$element.find('.tree-selected');
              var data = [];

              if (this.options.multiSelect) {
                  $.each($all, function (index, value) {
                      var $val = $(value);
                      if ($val[0] !== $el[0]) {
                          data.push($(value).data());
                      }
                  });
              } else if ($all[0] !== $el[0]) {
                  $all.removeClass('tree-selected')
                          .find('i').removeClass('icon-ok').addClass('tree-dot');
                  data.push($el.data());
              }

              if ($el.hasClass('tree-selected')) {
                  $el.removeClass('tree-selected');
                  $el.find('i').removeClass('icon-ok').addClass('tree-dot');
              } else {
                  $el.addClass('tree-selected');
                  $el.find('i').removeClass('tree-dot').addClass('icon-ok');
                  if (this.options.multiSelect) {
                      data.push($el.data());
                  }
              }

              if (data.length) {
                  this.$element.trigger('selected', { info: data });
              }

          },

          selectFolder: function (el) {
              currentLoadComplete = false;
              var $el = $(el);
              var $par = $el.parent();

              if ($el.find('.icon-folder-close').length) {
                  if ($par.find('.tree-folder-content').children().length) {
                      $par.find('.tree-folder-content:eq(0)').show();
                  } else {
                      this.populate($el);
                  }

                  $par.find('.icon-folder-close:eq(0)')
                          .removeClass('icon-folder-close')
                          .addClass('glyphicon glyphicon-folder-open icon-folder-open');

                  this.$element.trigger('opened', $el.data());
              } else {
                  if (this.options.cacheItems) {
                      $par.find('.tree-folder-content:eq(0)').hide();
                  } else {
                      $par.find('.tree-folder-content:eq(0)').empty();
                  }

                  $par.find('.icon-folder-open:eq(0)')
                          .removeClass('icon-folder-open')
                          .addClass('glyphicon glyphicon-folder-close icon-folder-close');

                  this.$element.trigger('closed', $el.data());
              }
          },

          selectedItems: function () {
              var $sel = this.$element.find('.tree-selected');
              var data = [];

              $.each($sel, function (index, value) {
                  data.push($(value).data());
              });
              return data;
          }
      };

      var RadiologyTree = function (element, options) {
          this.$element = $(element);
          this.options = $.extend({}, $.fn.radiologytree.defaults, options);

          this.$element.on('click', '.tree-item', $.proxy(function (ev) { this.selectItem(ev.currentTarget); }, this));
          this.$element.on('click', '.tree-folder-header', $.proxy(function (ev) { this.selectFolder(ev.currentTarget); }, this));

          this.render();
      };

      RadiologyTree.prototype = {
          constructor: RadiologyTree,

          render: function () {
              this.populate(this.$element);
          },

          populate: function ($el) {
              var self = this;
              var loader = $el.parent().find('.tree-loader:eq(0)');
              loader.show();
              this.options.dataSource.data($el.data(), function (items) {
                  if (radiologychildren.data.length > 0) items = radiologychildren;
                  loader.hide();
                  $.each(items.data, function(index, value) {
                      var $entity;

                      if (value.type === "folder") {
                          $entity = self.$element.find('.tree-folder:eq(0)').clone().show();
                          $entity.find('.tree-folder-name').html(value.name);

                          $entity.find('.tree-loader').html(self.options.loadingHTML);
                          $entity.find('.tree-folder-header').data(value);
                      } else if (value.type === "item") {
                          $entity = self.$element.find('.tree-item:eq(0)').clone().show();
                          $entity.find('.tree-item-name').html(value.name);
                          $entity.data(value);
                      }

                      if ($el.hasClass('tree-folder-header')) {
                          $el.parent().find('.tree-folder-content:eq(0)').append($entity);
                      } else {
                          $el.append($entity);
                      }
                  });

                  self.$element.trigger('loaded');
                  var treeItems = document.getElementsByClassName('tree-item-name');
                  for (var i = 0; i < treeItems.length; i++) {
                      $(treeItems[i]).parent().height($(treeItems[i]).height());
                  }
              });
              $('.loadingPlaceholder').hide();

          },

          selectItem: function (el) {
              var $el = $(el);
              var $all = this.$element.find('.tree-selected');
              var data = [];

              if (this.options.multiSelect) {
                  $.each($all, function (index, value) {
                      var $val = $(value);
                      if ($val[0] !== $el[0]) {
                          data.push($(value).data());
                      }
                  });
              } else if ($all[0] !== $el[0]) {
                  $all.removeClass('tree-selected')
                          .find('i').removeClass('icon-ok').addClass('tree-dot');
                  data.push($el.data());
              }

              if ($el.hasClass('tree-selected')) {
                  $el.removeClass('tree-selected');
                  $el.find('i').removeClass('icon-ok').addClass('tree-dot');
              } else {
                  $el.addClass('tree-selected');
                  $el.find('i').removeClass('tree-dot').addClass('icon-ok');
                  if (this.options.multiSelect) {
                      data.push($el.data());
                  }
              }

              if (data.length) {
                  this.$element.trigger('selected', { info: data });
              }

          },

          selectFolder: function (el) {
              currentLoadComplete = false;
              var $el = $(el);
              var $par = $el.parent();

              if ($el.find('.icon-folder-close').length) {
                  if ($par.find('.tree-folder-content').children().length) {
                      $par.find('.tree-folder-content:eq(0)').show();
                  } else {
                      this.populate($el);
                  }

                  $par.find('.icon-folder-close:eq(0)')
                          .removeClass('icon-folder-close')
                          .addClass('glyphicon glyphicon-folder-open icon-folder-open');

                  this.$element.trigger('opened', $el.data());
              } else {
                  if (this.options.cacheItems) {
                      $par.find('.tree-folder-content:eq(0)').hide();
                  } else {
                      $par.find('.tree-folder-content:eq(0)').empty();
                  }

                  $par.find('.icon-folder-open:eq(0)')
                          .removeClass('icon-folder-open')
                          .addClass('glyphicon glyphicon-folder-close icon-folder-close');

                  this.$element.trigger('closed', $el.data());
              }
          },

          selectedItems: function () {
              var $sel = this.$element.find('.tree-selected');
              var data = [];

              $.each($sel, function (index, value) {
                  data.push($(value).data());
              });
              return data;
          }
      };

      var RadiologyCTTree = function (element, options) {
          this.$element = $(element);
          this.options = $.extend({}, $.fn.radiologycttree.defaults, options);

          this.$element.on('click', '.tree-item', $.proxy(function (ev) { this.selectItem(ev.currentTarget); }, this));
          this.$element.on('click', '.tree-folder-header', $.proxy(function (ev) { this.selectFolder(ev.currentTarget); }, this));

          this.render();
      };

      RadiologyCTTree.prototype = {
          constructor: RadiologyCTTree,

          render: function () {
              this.populate(this.$element);
          },

          populate: function ($el) {
              var self = this;
              var loader = $el.parent().find('.tree-loader:eq(0)');
              loader.show();
              this.options.dataSource.data($el.data(), function (items) {
                  if (radiologyctchildren.data.length > 0) items = radiologyctchildren;
                  loader.hide();
                  $.each(items.data, function(index, value) {
                      var $entity;

                      if (value.type === "folder") {
                          $entity = self.$element.find('.tree-folder:eq(0)').clone().show();
                          $entity.find('.tree-folder-name').html(value.name);

                          $entity.find('.tree-loader').html(self.options.loadingHTML);
                          $entity.find('.tree-folder-header').data(value);
                      } else if (value.type === "item") {
                          $entity = self.$element.find('.tree-item:eq(0)').clone().show();
                          $entity.find('.tree-item-name').html(value.name);
                          $entity.data(value);
                      }

                      if ($el.hasClass('tree-folder-header')) {
                          $el.parent().find('.tree-folder-content:eq(0)').append($entity);
                      } else {
                          $el.append($entity);
                      }
                  });

                  self.$element.trigger('loaded');
                  var treeItems = document.getElementsByClassName('tree-item-name');
                  for (var i = 0; i < treeItems.length; i++) {
                      $(treeItems[i]).parent().height($(treeItems[i]).height());
                  }
              });
              $('.loadingPlaceholder').hide();

          },

          selectItem: function (el) {
              var $el = $(el);
              var $all = this.$element.find('.tree-selected');
              var data = [];

              if (this.options.multiSelect) {
                  $.each($all, function (index, value) {
                      var $val = $(value);
                      if ($val[0] !== $el[0]) {
                          data.push($(value).data());
                      }
                  });
              } else if ($all[0] !== $el[0]) {
                  $all.removeClass('tree-selected')
                          .find('i').removeClass('icon-ok').addClass('tree-dot');
                  data.push($el.data());
              }

              if ($el.hasClass('tree-selected')) {
                  $el.removeClass('tree-selected');
                  $el.find('i').removeClass('icon-ok').addClass('tree-dot');
              } else {
                  $el.addClass('tree-selected');
                  $el.find('i').removeClass('tree-dot').addClass('icon-ok');
                  if (this.options.multiSelect) {
                      data.push($el.data());
                  }
              }

              if (data.length) {
                  this.$element.trigger('selected', { info: data });
              }

          },

          selectFolder: function (el) {
              currentLoadComplete = false;
              var $el = $(el);
              var $par = $el.parent();

              if ($el.find('.icon-folder-close').length) {
                  if ($par.find('.tree-folder-content').children().length) {
                      $par.find('.tree-folder-content:eq(0)').show();
                  } else {
                      this.populate($el);
                  }

                  $par.find('.icon-folder-close:eq(0)')
                          .removeClass('icon-folder-close')
                          .addClass('glyphicon glyphicon-folder-open icon-folder-open');

                  this.$element.trigger('opened', $el.data());
              } else {
                  if (this.options.cacheItems) {
                      $par.find('.tree-folder-content:eq(0)').hide();
                  } else {
                      $par.find('.tree-folder-content:eq(0)').empty();
                  }

                  $par.find('.icon-folder-open:eq(0)')
                          .removeClass('icon-folder-open')
                          .addClass('glyphicon glyphicon-folder-close icon-folder-close');

                  this.$element.trigger('closed', $el.data());
              }
          },

          selectedItems: function () {
              var $sel = this.$element.find('.tree-selected');
              var data = [];

              $.each($sel, function (index, value) {
                  data.push($(value).data());
              });
              return data;
          }
      };

      var RadiologyMRITree = function (element, options) {
          this.$element = $(element);
          this.options = $.extend({}, $.fn.radiologymritree.defaults, options);

          this.$element.on('click', '.tree-item', $.proxy(function (ev) { this.selectItem(ev.currentTarget); }, this));
          this.$element.on('click', '.tree-folder-header', $.proxy(function (ev) { this.selectFolder(ev.currentTarget); }, this));

          this.render();
      };

      RadiologyMRITree.prototype = {
          constructor: RadiologyMRITree,

          render: function () {
              this.populate(this.$element);
          },

          populate: function ($el) {
              var self = this;
              var loader = $el.parent().find('.tree-loader:eq(0)');
              loader.show();
              this.options.dataSource.data($el.data(), function (items) {
                  if (radiologymrichildren.data.length > 0) items = radiologymrichildren;
                  loader.hide();
                  $.each(items.data, function(index, value) {
                      var $entity;

                      if (value.type === "folder") {
                          $entity = self.$element.find('.tree-folder:eq(0)').clone().show();
                          $entity.find('.tree-folder-name').html(value.name);

                          $entity.find('.tree-loader').html(self.options.loadingHTML);
                          $entity.find('.tree-folder-header').data(value);
                      } else if (value.type === "item") {
                          $entity = self.$element.find('.tree-item:eq(0)').clone().show();
                          $entity.find('.tree-item-name').html(value.name);
                          $entity.data(value);
                      }

                      if ($el.hasClass('tree-folder-header')) {
                          $el.parent().find('.tree-folder-content:eq(0)').append($entity);
                      } else {
                          $el.append($entity);
                      }
                  });

                  self.$element.trigger('loaded');
                  var treeItems = document.getElementsByClassName('tree-item-name');
                  for (var i = 0; i < treeItems.length; i++) {
                      $(treeItems[i]).parent().height($(treeItems[i]).height());
                  }
              });
              $('.loadingPlaceholder').hide();

          },

          selectItem: function (el) {
              var $el = $(el);
              var $all = this.$element.find('.tree-selected');
              var data = [];

              if (this.options.multiSelect) {
                  $.each($all, function (index, value) {
                      var $val = $(value);
                      if ($val[0] !== $el[0]) {
                          data.push($(value).data());
                      }
                  });
              } else if ($all[0] !== $el[0]) {
                  $all.removeClass('tree-selected')
                          .find('i').removeClass('icon-ok').addClass('tree-dot');
                  data.push($el.data());
              }

              if ($el.hasClass('tree-selected')) {
                  $el.removeClass('tree-selected');
                  $el.find('i').removeClass('icon-ok').addClass('tree-dot');
              } else {
                  $el.addClass('tree-selected');
                  $el.find('i').removeClass('tree-dot').addClass('icon-ok');
                  if (this.options.multiSelect) {
                      data.push($el.data());
                  }
              }

              if (data.length) {
                  this.$element.trigger('selected', { info: data });
              }

          },

          selectFolder: function (el) {
              currentLoadComplete = false;
              var $el = $(el);
              var $par = $el.parent();

              if ($el.find('.icon-folder-close').length) {
                  if ($par.find('.tree-folder-content').children().length) {
                      $par.find('.tree-folder-content:eq(0)').show();
                  } else {
                      this.populate($el);
                  }

                  $par.find('.icon-folder-close:eq(0)')
                          .removeClass('icon-folder-close')
                          .addClass('glyphicon glyphicon-folder-open icon-folder-open');

                  this.$element.trigger('opened', $el.data());
              } else {
                  if (this.options.cacheItems) {
                      $par.find('.tree-folder-content:eq(0)').hide();
                  } else {
                      $par.find('.tree-folder-content:eq(0)').empty();
                  }

                  $par.find('.icon-folder-open:eq(0)')
                          .removeClass('icon-folder-open')
                          .addClass('glyphicon glyphicon-folder-close icon-folder-close');

                  this.$element.trigger('closed', $el.data());
              }
          },

          selectedItems: function () {
              var $sel = this.$element.find('.tree-selected');
              var data = [];

              $.each($sel, function (index, value) {
                  data.push($(value).data());
              });
              return data;
          }
      };

      var RadiologyUSGOTHERSTree = function (element, options) {
          this.$element = $(element);
          this.options = $.extend({}, $.fn.radiologyusgotherstree.defaults, options);

          this.$element.on('click', '.tree-item', $.proxy(function (ev) { this.selectItem(ev.currentTarget); }, this));
          this.$element.on('click', '.tree-folder-header', $.proxy(function (ev) { this.selectFolder(ev.currentTarget); }, this));

          this.render();
      };

      RadiologyUSGOTHERSTree.prototype = {
          constructor: RadiologyUSGOTHERSTree,

          render: function () {
              this.populate(this.$element);
          },

          populate: function ($el) {
              var self = this;
              var loader = $el.parent().find('.tree-loader:eq(0)');
              loader.show();
              this.options.dataSource.data($el.data(), function (items) {
                  if (radiologyusgotherschildren.data.length > 0) items = radiologyusgotherschildren;
                  loader.hide();
                  $.each(items.data, function(index, value) {
                      var $entity;

                      if (value.type === "folder") {
                          $entity = self.$element.find('.tree-folder:eq(0)').clone().show();
                          $entity.find('.tree-folder-name').html(value.name);

                          $entity.find('.tree-loader').html(self.options.loadingHTML);
                          $entity.find('.tree-folder-header').data(value);
                      } else if (value.type === "item") {
                          $entity = self.$element.find('.tree-item:eq(0)').clone().show();
                          $entity.find('.tree-item-name').html(value.name);
                          $entity.data(value);
                      }

                      if ($el.hasClass('tree-folder-header')) {
                          $el.parent().find('.tree-folder-content:eq(0)').append($entity);
                      } else {
                          $el.append($entity);
                      }
                  });

                  self.$element.trigger('loaded');
                  var treeItems = document.getElementsByClassName('tree-item-name');
                  for (var i = 0; i < treeItems.length; i++) {
                      $(treeItems[i]).parent().height($(treeItems[i]).height());
                  }
              });
              $('.loadingPlaceholder').hide();

          },

          selectItem: function (el) {
              var $el = $(el);
              var $all = this.$element.find('.tree-selected');
              var data = [];

              if (this.options.multiSelect) {
                  $.each($all, function (index, value) {
                      var $val = $(value);
                      if ($val[0] !== $el[0]) {
                          data.push($(value).data());
                      }
                  });
              } else if ($all[0] !== $el[0]) {
                  $all.removeClass('tree-selected')
                          .find('i').removeClass('icon-ok').addClass('tree-dot');
                  data.push($el.data());
              }

              if ($el.hasClass('tree-selected')) {
                  $el.removeClass('tree-selected');
                  $el.find('i').removeClass('icon-ok').addClass('tree-dot');
              } else {
                  $el.addClass('tree-selected');
                  $el.find('i').removeClass('tree-dot').addClass('icon-ok');
                  if (this.options.multiSelect) {
                      data.push($el.data());
                  }
              }

              if (data.length) {
                  this.$element.trigger('selected', { info: data });
              }

          },

          selectFolder: function (el) {
              currentLoadComplete = false;
              var $el = $(el);
              var $par = $el.parent();

              if ($el.find('.icon-folder-close').length) {
                  if ($par.find('.tree-folder-content').children().length) {
                      $par.find('.tree-folder-content:eq(0)').show();
                  } else {
                      this.populate($el);
                  }

                  $par.find('.icon-folder-close:eq(0)')
                          .removeClass('icon-folder-close')
                          .addClass('glyphicon glyphicon-folder-open icon-folder-open');

                  this.$element.trigger('opened', $el.data());
              } else {
                  if (this.options.cacheItems) {
                      $par.find('.tree-folder-content:eq(0)').hide();
                  } else {
                      $par.find('.tree-folder-content:eq(0)').empty();
                  }

                  $par.find('.icon-folder-open:eq(0)')
                          .removeClass('icon-folder-open')
                          .addClass('glyphicon glyphicon-folder-close icon-folder-close');

                  this.$element.trigger('closed', $el.data());
              }
          },

          selectedItems: function () {
              var $sel = this.$element.find('.tree-selected');
              var data = [];

              $.each($sel, function (index, value) {
                  data.push($(value).data());
              });
              return data;
          }
      };

      // Tree plugin definition

      $.fn.tree = function (option, value) {
          var methodReturn;

          var $set = this.each(function () {
              var $this = $(this);
              var data = $this.data('tree');
              var options = typeof option === 'object' && option;

              if (!data) $this.data('tree', (data = new Tree(this, options)));
              if (typeof option === 'string') methodReturn = data[option](value);
          });

          return (methodReturn === undefined) ? $set : methodReturn;
      };

      $.fn.radiologytree = function (option, value) {
          var methodReturn;

          var $set = this.each(function () {
              var $this = $(this);
              var data = $this.data('tree');
              var options = typeof option === 'object' && option;

              if (!data) $this.data('tree', (data = new RadiologyTree(this, options)));
              if (typeof option === 'string') methodReturn = data[option](value);
          });

          return (methodReturn === undefined) ? $set : methodReturn;
      };

      $.fn.radiologycttree = function (option, value) {
          var methodReturn;

          var $set = this.each(function () {
              var $this = $(this);
              var data = $this.data('tree');
              var options = typeof option === 'object' && option;

              if (!data) $this.data('tree', (data = new RadiologyCTTree(this, options)));
              if (typeof option === 'string') methodReturn = data[option](value);
          });

          return (methodReturn === undefined) ? $set : methodReturn;
      };

      $.fn.radiologymritree = function (option, value) {
          var methodReturn;

          var $set = this.each(function () {
              var $this = $(this);
              var data = $this.data('tree');
              var options = typeof option === 'object' && option;

              if (!data) $this.data('tree', (data = new RadiologyMRITree(this, options)));
              if (typeof option === 'string') methodReturn = data[option](value);
          });

          return (methodReturn === undefined) ? $set : methodReturn;
      };

      $.fn.radiologyusgotherstree = function (option, value) {
          var methodReturn;

          var $set = this.each(function () {
              var $this = $(this);
              var data = $this.data('tree');
              var options = typeof option === 'object' && option;

              if (!data) $this.data('tree', (data = new RadiologyUSGOTHERSTree(this, options)));
              if (typeof option === 'string') methodReturn = data[option](value);
          });

          return (methodReturn === undefined) ? $set : methodReturn;
      };

      $.fn.tree.defaults = {
          multiSelect: false,
          loadingHTML: '<div>Loading...</div>',
          cacheItems: false
      };

      $.fn.radiologytree.defaults = {
          multiSelect: false,
          loadingHTML: '<div>Loading...</div>',
          cacheItems: false
      };

      $.fn.radiologycttree.defaults = {
          multiSelect: false,
          loadingHTML: '<div>Loading...</div>',
          cacheItems: false
      };

      $.fn.radiologymritree.defaults = {
          multiSelect: false,
          loadingHTML: '<div>Loading...</div>',
          cacheItems: false
      };

      $.fn.radiologyusgotherstree.defaults = {
          multiSelect: false,
          loadingHTML: '<div>Loading...</div>',
          cacheItems: false
      };

      $.fn.tree.Constructor = Tree;

      $.fn.radiologytree.Constructor = RadiologyTree;

      $.fn.radiologycttree.Constructor = RadiologyCTTree;

      $.fn.radiologymritree.Constructor = RadiologyMRITree;

      $.fn.radiologyusgotherstree.Constructor = RadiologyUSGOTHERSTree;

      // Add child nodes

      function addChildren(label, type, id, level, levelstring, icdcode){

          children.data.push({
              name: label,
              type: type,
              icdcode: icdcode,
              additionalParameters: {
                  id: id, 'data-level': level, 'data-levelstring': levelstring
              }
          });
      }

      addChildren('Arthropathy', 'folder', '1.1', 'L1', 'R', "");
      addChildren('Meniscus/Ligament/Cartilage', 'folder', '2.1', 'L1', 'R', "");
      addChildren('Patella', 'folder', '3.1', 'L1', 'R');
      addChildren('Synovium/Bursa/Tendon', 'folder', '4.1', 'L1', 'R', "");
      addChildren('Trauma', 'folder', '5.1', 'L1', 'R', "");
      addChildren('Infection', 'folder', '6.1', 'L1', 'R', "");
      addChildren('Deformity', 'folder', '7.1', 'L1', 'R', "");
      addChildren('Joint Pain', 'folder', '8.1', 'L1', 'R', "");
      addChildren('Amputation', 'folder', '9.1', 'L1', 'R', "");
      addChildren('Mass', 'folder', '10.1', 'L1', 'R', "");
      addChildren('Medical Disorder', 'folder', '11.1', 'L1', 'R', "");
      addChildren('Bone Disorder', 'folder', '12.1', 'L1', 'R', "");
      addChildren('Connective Tissue Disease', 'folder', '13.1', 'L1', 'R', "");
      addChildren('Complications', 'folder', '14.1', 'L1', 'R', "");
      addChildren('Others', 'folder', '15.1', 'L1', 'R', "");


      function addRadiologyChildren(label, type, id, level, levelstring, treeid, radiologyid, radiologyobject){

          radiologychildren.data.push({
              name: label,
              type: type,
              additionalParameters: {
                  id: id, 'data-level': level, 'data-levelstring': levelstring, 'data-treeid': treeid,
                  'data-radiologyid': radiologyid, 'data-variables': radiologyobject
              }
          });
      }

      addRadiologyChildren('Knee', 'folder', '1', 'L1', 'R', '1.1.0', [], []);
      addRadiologyChildren('Femur with knee', 'folder', '2', 'L1', 'R', '2.0.0', [], []);
      addRadiologyChildren('Tibia with knee', 'folder', '3', 'L1', 'R', '3.0.0', [], []);
      addRadiologyChildren('Orthoradiogram-standing', 'folder', '4', 'L1', 'R', '4.0.0', [], []);
      addRadiologyChildren('Chest', 'folder', '5', 'L1', 'R', '5.0.0', [], []);


      function addRadiologyCTChildren(label, type, id, level, levelstring, treeid, radiologyid, radiologyobject){

          radiologyctchildren.data.push({
              name: label,
              type: type,
              additionalParameters: {
                  id: id, 'data-level': level, 'data-levelstring': levelstring, 'data-treeid': treeid,
                  'data-radiologyid': radiologyid, 'data-variables': radiologyobject
              }
          });
      }

      addRadiologyCTChildren('CT scan', 'folder', '6', 'L1', 'R', '6.0.0', [], []);
      addRadiologyCTChildren('CT angiogram', 'folder', '7', 'L1', 'R', '7.0.0', [], []);
      addRadiologyCTChildren('CT guided bone biopsy', 'folder', '8', 'L1', 'R', '8.0.0', [], []);
      addRadiologyCTChildren('Arthography', 'folder', '9', 'L1', 'R', '9.0.0', [], []);

      function addRadiologyMRIChildren(label, type, id, level, levelstring, treeid, radiologyid, radiologyobject){

          radiologymrichildren.data.push({
              name: label,
              type: type,
              additionalParameters: {
                  id: id, 'data-level': level, 'data-levelstring': levelstring, 'data-treeid': treeid,
                  'data-radiologyid': radiologyid, 'data-variables': radiologyobject
              }
          });
      }

      addRadiologyMRIChildren('MRI', 'folder', '10', 'L1', 'R', '10.0.0', [], []);
      addRadiologyMRIChildren('MRI Angiogram', 'folder', '11', 'L1', 'R', '11.0.0', [], []);
      addRadiologyMRIChildren('USG', 'folder', '12', 'L1', 'R', '12.0.0', [], []);
      addRadiologyMRIChildren('USG doppler', 'folder', '13', 'L1', 'R', '13.0.0', [], []);

      function addRadiologyUSGOTHERSChildren(label, type, id, level, levelstring, treeid, radiologyid, radiologyobject){

          radiologyusgotherschildren.data.push({
              name: label,
              type: type,
              additionalParameters: {
                  id: id, 'data-level': level, 'data-levelstring': levelstring, 'data-treeid': treeid,
                  'data-radiologyid': radiologyid, 'data-variables': radiologyobject
              }
          });
      }

      addRadiologyUSGOTHERSChildren('USG', 'folder', '9', 'L1', 'R', '9.0.0', [], []);
      addRadiologyUSGOTHERSChildren('USG extermity', 'folder', '10', 'L1', 'R', '10.0.0', [], []);
      addRadiologyUSGOTHERSChildren('USG doppler', 'folder', '11', 'L1', 'R', '11.0.0', [], []);
      addRadiologyUSGOTHERSChildren('Arthography', 'folder', '5', 'L1', 'R', '5.0.0', [], []);
      addRadiologyUSGOTHERSChildren('US guided aspiration', 'folder', '12', 'L1', 'R', '12.0.0', [], []);


      var treeDataSource = new TreeDataSource({
          data: children,
          delay: 400
      });

      var radiologytreeDataSource = new RadiologyTreeDataSource({
          data: radiologychildren,
          delay: 400
      });

      var radiologycttreeDataSource = new RadiologyCTTreeDataSource({
          data: radiologyctchildren,
          delay: 400
      });

      var radiologymritreeDataSource = new RadiologyMRITreeDataSource({
          data: radiologymrichildren,
          delay: 400
      });

      var radiologyusgotherstreeDataSource = new RadiologyUSGOTHERSTreeDataSource({
          data: radiologyusgotherschildren,
          delay: 400
      });

      $('#myTree').tree({ dataSource: treeDataSource });
      $('#radiologyTree').radiologytree({ dataSource: radiologytreeDataSource });
      $('#radiologyCTTree').radiologycttree({ dataSource: radiologycttreeDataSource });
      $('#radiologyMRITree').radiologymritree({ dataSource: radiologymritreeDataSource });
      //$('#radiologyUSGOTHERSTree').radiologyusgotherstree({ dataSource: radiologyusgotherstreeDataSource });


      function initialinvestigationlist(investigationname, sidesubjective) {

          var whitespaceinput = " ";
          var tropen = jQuery("<tr class=\"investigationlist\">");
          var tdopen0th = jQuery("<td>");
          var tdopen1st = jQuery("<td>");
          var tdopen2nd = jQuery("<td>");
          var tdopen3nd = jQuery("<td>");
          var tdopen4th = jQuery("<td>");
          var tddummy1 = jQuery("<td>");
          var tddummy2 = jQuery("<td>");
          var formgroup1 = jQuery("<div class=\"form-group\">");
          var formgroup2 = jQuery("<div class=\"form-group\">");
          var formgroup3 = jQuery("<div class=\"form-group\">");
          var formgroup4 = jQuery("<div class=\"form-group\">");
          var inputgroup1 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup2 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup3 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup4 = jQuery("<div class=\"input-group mb15\">");
          var intId = 0;
          if (jQuery(".investigationlist").length == 0){
              intId = 0;
          }
          else {
              intId = jQuery(".investigationlist").length;
          }

          var investigationlist_attributes_select = jQuery("<select class=\"form-control\" id=\"knee_investigationlist_attributes_" + intId + "_investigationside\"  name=\"knee[investigationlist_attributes][" + intId + "][investigationside]\">");
          var investigationlist_attributes_option1 = jQuery("<option value=\"\"></option><option value=\"R\">R</option>");
          var investigationlist_attributes_option2 = jQuery("<option value=\"L\">L</option>");
          var investigationlist_attributes_option3 = jQuery("<option value=\"B/L\">B/L</option>");
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option1);
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option2);
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option3);
          jQuery(tdopen0th).append(investigationlist_attributes_select);
          jQuery(tropen).append(tdopen0th);

          var investigationlist_investigationname_id = "#" + "knee_investigationlist_attributes_" + intId + "_investigationname";
          var investigationlist_investigationname = jQuery("<input class=\"string optional form-control\" id=\"knee_investigationlist_attributes_" + intId + "_investigationname\" maxlength=\"50\" name=\"knee[investigationlist_attributes][" + intId + "][investigationname]\" size=\"50\" type=\"text\">");
          jQuery(inputgroup1).append(investigationlist_investigationname);
          jQuery(formgroup1).append(inputgroup1);
          jQuery(tdopen1st).append(formgroup1);
          jQuery(tropen).append(tdopen1st);

          //td for the dummy
          jQuery(tropen).append(tddummy1);
          jQuery(tropen).append(tddummy2);

          var investigationlist_investigationdeletebutton = jQuery("<a id=\"investigationdeletebutton" + intId + "\" class=\"btn btn-sm btn-primary btn-danger\" href=\"javascript:;\" name=\"investigationdeletebutton\"><span class=\"glyphicon glyphicon-remove\"></span></a>");

          jQuery(formgroup4).append(investigationlist_investigationdeletebutton);
          jQuery(tdopen4th).append(formgroup4);
          jQuery(tropen).append(tdopen4th);

          if (jQuery(".investigationlist").length == 0){
              jQuery(".investigations").append(tropen);
              $(investigationlist_investigationname_id).val(investigationname);
          }
          else {
              jQuery(".investigationlist:last").after(tropen);
              $(investigationlist_investigationname_id).val(investigationname);
          }
          //set time out for value to be set.
          //setTimeout(200);
          //$("select[name*='investigationside']").val(sidesubjective).prop('selected', true);
          //$("select[name*='investigationside']").val(sidesubjective).attr("selected","selected");
          //$("select option[value='B']").attr("selected","selected");
          $("select[name*='investigationside'] option[value='" + sidesubjective + "']").attr("selected","selected");
          $("select[name*='investigationside'] option[value='" + sidesubjective + "']").prop("selected", true);
      }

      var itemCount = 1;
      $('#myTree').on('opened', function(event, element){
          children.data = [];

          if (element.type == 'folder') {

              if (element.additionalParameters["data-level"] == 'L1') {

                  var params = { datalevel: element.additionalParameters["data-level"], id: element.additionalParameters["id"], datalevelstring: element.additionalParameters["data-levelstring"], snomedid: "361291001"  };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/icdtreekneel2.json",
                      data: {icdvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col3'] == 'T') {

                              addChildren(data[i]['col10'], 'item', data[i]['col11'], data[i]['col1'], data[i]['col3'], data[i]['col8']);

                          }
                          else if (data[i]['col3'] == 'N') {

                              addChildren(data[i]['col10'], 'folder', data[i]['col11'], data[i]['col1'], data[i]['col3'], data[i]['col8']);

                          }

                      }
                  });
              }
              else if (element.additionalParameters["data-level"] == 'L2') {

                  var params = { datalevel: element.additionalParameters["data-level"], id: element.additionalParameters["id"], datalevelstring: element.additionalParameters["data-levelstring"], snomedid: "361291001"  };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/icdtreekneel3.json",
                      data: {icdvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col3'] == 'T') {

                              addChildren(data[i]['col10'], 'item', data[i]['col11'], data[i]['col1'], data[i]['col3'], data[i]['col8']);

                          }
                          else if (data[i]['col3'] == 'N') {

                              addChildren(data[i]['col10'], 'folder', data[i]['col11'], data[i]['col1'], data[i]['col3'], data[i]['col8']);

                          }

                      }
                  });
              }

          }
          else if (element.type == 'item') {
          }

      });

      $('#radiologyTree').on('opened', function(event, element){
          radiologychildren.data = [];
          if (element.type == 'folder') {

              if (element.additionalParameters["data-level"] == 'L1') {

                  var params = { radiologyvar1: element.additionalParameters["data-level"], radiologyvar2: element.additionalParameters["data-treeid"], snomedid: "361291001"  };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/radiologyl2.json",
                      data: {radiologyvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col4'] == 'T') {

                              addRadiologyChildren(data[i]['col7'], 'item', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], data[i]['col8'], data[i]['col9']);

                          }
                          else if (data[i]['col4'] == 'N') {

                              addRadiologyChildren(data[i]['col7'], 'folder', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], [], []);

                          }

                      }
                  });
              }
              else if (element.additionalParameters["data-level"] == 'L2') {

                  var params = { radiologyvar1: element.additionalParameters["data-level"], radiologyvar2: element.additionalParameters["data-treeid"], snomedid: "361291001"  };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/radiologyl3.json",
                      data: {radiologyvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col4'] == 'T') {

                              addRadiologyChildren(data[i]['col7'], 'item', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], data[i]['col8'], data[i]['col9']);

                          }
                          else if (data[i]['col4'] == 'N') {

                              addRadiologyChildren(data[i]['col7'], 'folder', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], [], []);

                          }

                      }
                  });
              }

          }
          else if (element.type == 'item') {
          }

      });

      $('#radiologyTree').on('selected', function (event, selected) {

          var whitespaceinput = " ";
          var tropen = jQuery("<tr class=\"investigationlist\">");
          var tdopen0th = jQuery("<td>");
          var tdopen1st = jQuery("<td>");
          var tdopen2nd = jQuery("<td>");
          var tdopen3nd = jQuery("<td>");
          var tdopen4th = jQuery("<td>");
          var tddummy1 = jQuery("<td>");
          var tddummy2 = jQuery("<td>");
          var formgroup1 = jQuery("<div class=\"form-group\">");
          var formgroup2 = jQuery("<div class=\"form-group\">");
          var formgroup3 = jQuery("<div class=\"form-group\">");
          var formgroup4 = jQuery("<div class=\"form-group\">");
          var inputgroup1 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup2 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup3 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup4 = jQuery("<div class=\"input-group mb15\">");
          var intId = 0;
          if (jQuery(".investigationlist").length == 0){
              intId = 0;
          }
          else {
              intId = jQuery(".investigationlist").length;
          }

          var investigationlist_attributes_select = jQuery("<select class=\"form-control\" id=\"knee_investigationlist_attributes_" + intId + "_investigationside\"  name=\"knee[investigationlist_attributes][" + intId + "][investigationside]\">");
          var investigationlist_attributes_option1 = jQuery("<option value=\"\"></option><option value=\"R\">R</option>");
          var investigationlist_attributes_option2 = jQuery("<option value=\"L\">L</option>");
          var investigationlist_attributes_option3 = jQuery("<option value=\"B/L\">B/L</option>");
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option1);
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option2);
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option3);
          jQuery(tdopen0th).append(investigationlist_attributes_select);
          jQuery(tropen).append(tdopen0th);

          var investigationlist_investigationname_id = "#" + "knee_investigationlist_attributes_" + intId + "_investigationname";
          var investigationlist_investigationname = jQuery("<input class=\"string optional form-control\" id=\"knee_investigationlist_attributes_" + intId + "_investigationname\" maxlength=\"50\" name=\"knee[investigationlist_attributes][" + intId + "][investigationname]\" size=\"50\" type=\"text\">");
          jQuery(inputgroup1).append(investigationlist_investigationname);
          jQuery(formgroup1).append(inputgroup1);
          jQuery(tdopen1st).append(formgroup1);
          jQuery(tropen).append(tdopen1st);

          //if (selected['info'][0].additionalParameters['data-radiologyid'] != null) {
          if (selected['info'][0].additionalParameters['data-radiologyid'] != null) {

              var dataradiologyid = selected['info'][0].additionalParameters['data-radiologyid'];
              dataradiologyid = dataradiologyid.replace('[', '');
              dataradiologyid = dataradiologyid.replace(']', '');
              //dataradiologyid = dataradiologyid.replace("'", '');
              //dataradiologyid = dataradiologyid.replace(' ', '');
              dataradiologyid = dataradiologyid.replace(/'/g, '');
              dataradiologyid = dataradiologyid.replace(/ /g, '');
              var dataradiologyidarray = dataradiologyid.split(',');
              var controlgroup1 = jQuery("<div class=\"control-group check_boxes optional knee_investigationlist_attributes_investigationoption1_collection\">");
              var controls1 = jQuery("<div class=\"controls\">");
              $.each( dataradiologyidarray, function( i, val ) {
                  var investigationlist_investigationoption1 = jQuery("<label class=\"checkbox\"><input class=\"check_boxes optional\" id=\"knee_investigationlist_attributes_" + intId + "_investigationoption1_collection_" + val + "\" name=\"knee[investigationlist_attributes][" + intId + "][investigationoption1_collection][]\" type=\"checkbox\" value=" + val + " >" + val + "</label>");
                  jQuery(controls1).append(investigationlist_investigationoption1);
                  jQuery(controls1).append(whitespaceinput);
              });
              var investigationlist_investigationoption1_checkboxhidden = jQuery("<input name=\"knee[investigationlist_attributes][" + intId + "][investigationoption1_collection][]\" type=\"hidden\" value=\"\">");
              jQuery(controls1).append(investigationlist_investigationoption1_checkboxhidden);
              jQuery(controlgroup1).append(controls1);
              jQuery(inputgroup2).append(controlgroup1);
              jQuery(formgroup2).append(inputgroup2);
              jQuery(tdopen2nd).append(formgroup2);
              jQuery(tropen).append(tdopen2nd);
          }
          else {
              jQuery(tropen).append(tddummy1);
          }

          //if (selected['info'][0].additionalParameters['data-variables'] != null) {
          if (selected['info'][0].additionalParameters['data-variables'] != null) {

              var datavariables = selected['info'][0].additionalParameters['data-variables'];
              datavariables = datavariables.replace('[', '');
              datavariables = datavariables.replace(']', '');
              //datavariables = datavariables.replace("'", '');
              //datavariables = datavariables.replace(' ', '');
              datavariables = datavariables.replace(/'/g, '');
              datavariables = datavariables.replace(/ /g, '');
              var datavariablesarray = datavariables.split(',');
              var controlgroup2 = jQuery("<div class=\"control-group check_boxes optional knee_investigationlist_attributes_investigationoption2_collection\">");
              var controls2 = jQuery("<div class=\"controls\">");
              $.each( datavariablesarray, function( i, val ) {
                  var investigationlist_investigationoption2 = jQuery("<label class=\"checkbox\"><input class=\"check_boxes optional\" id=\"knee_investigationlist_attributes_" + intId + "_investigationoption2_collection_" + val + "\" name=\"knee[investigationlist_attributes][" + intId + "][investigationoption2_collection][]\" type=\"checkbox\" value=" + val + " >" + val + "</label>");
                  jQuery(controls2).append(investigationlist_investigationoption2);
                  jQuery(controls2).append(whitespaceinput);
              });
              var investigationlist_investigationoption2_checkboxhidden = jQuery("<input name=\"knee[investigationlist_attributes][" + intId + "][investigationoption2_collection][]\" type=\"hidden\" value=\"\">");
              jQuery(controls2).append(investigationlist_investigationoption2_checkboxhidden);
              jQuery(controlgroup2).append(controls2);
              jQuery(inputgroup3).append(controlgroup2);
              jQuery(formgroup3).append(inputgroup3);
              jQuery(tdopen3nd).append(formgroup3);
              jQuery(tropen).append(tdopen3nd);
          }
          else {
              jQuery(tropen).append(tddummy2);
          }

          var investigationlist_investigationdeletebutton = jQuery("<a id=\"investigationdeletebutton" + intId + "\" class=\"btn btn-sm btn-primary btn-danger\" href=\"javascript:;\" name=\"investigationdeletebutton\"><span class=\"glyphicon glyphicon-remove\"></span></a>");

          jQuery(formgroup4).append(investigationlist_investigationdeletebutton);
          jQuery(tdopen4th).append(formgroup4);
          jQuery(tropen).append(tdopen4th);

          if (jQuery(".investigationlist").length == 0){
              jQuery(".investigations").append(tropen);
              $(investigationlist_investigationname_id).val(selected['info'][0]['name']);
          }
          else {
              jQuery(".investigationlist:last").after(tropen);
              $(investigationlist_investigationname_id).val(selected['info'][0]['name']);
          }

          $("select[name*='investigationside']").val($("input[name='knee[sidesubjective]']:checked").val()).prop('selected',true);
          //$("select[name*='investigationside']").val(sidesubjective).attr("selected","selected");

      });

      $('#radiologyCTTree').on('opened', function(event, element){
          radiologyctchildren.data = [];
          if (element.type == 'folder') {

              if (element.additionalParameters["data-level"] == 'L1') {

                  var params = { radiologyvar1: element.additionalParameters["data-level"], radiologyvar2: element.additionalParameters["data-treeid"], snomedid: "361291001" };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/radiologyl2.json",
                      data: {radiologyvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col4'] == 'T') {

                              addRadiologyCTChildren(data[i]['col7'], 'item', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], data[i]['col8'], data[i]['col9']);

                          }
                          else if (data[i]['col4'] == 'N') {

                              addRadiologyCTChildren(data[i]['col7'], 'folder', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], [], []);

                          }

                      }
                  });
              }
              else if (element.additionalParameters["data-level"] == 'L2') {

                  var params = { radiologyvar1: element.additionalParameters["data-level"], radiologyvar2: element.additionalParameters["data-treeid"] };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/radiologyl3.json",
                      data: {radiologyvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col4'] == 'T') {

                              addRadiologyCTChildren(data[i]['col7'], 'item', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], data[i]['col8'], data[i]['col9']);

                          }
                          else if (data[i]['col4'] == 'N') {

                              addRadiologyCTChildren(data[i]['col7'], 'folder', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], [], []);

                          }

                      }
                  });
              }

          }
          else if (element.type == 'item') {
          }

      });

      $('#radiologyCTTree').on('selected', function (event, selected) {

          var whitespaceinput = " ";
          var tropen = jQuery("<tr class=\"investigationlist\">");
          var tdopen0th = jQuery("<td>");
          var tdopen1st = jQuery("<td>");
          var tdopen2nd = jQuery("<td>");
          var tdopen3nd = jQuery("<td>");
          var tdopen4th = jQuery("<td>");
          var tddummy1 = jQuery("<td>");
          var tddummy2 = jQuery("<td>");
          var formgroup1 = jQuery("<div class=\"form-group\">");
          var formgroup2 = jQuery("<div class=\"form-group\">");
          var formgroup3 = jQuery("<div class=\"form-group\">");
          var formgroup4 = jQuery("<div class=\"form-group\">");
          var inputgroup1 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup2 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup3 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup4 = jQuery("<div class=\"input-group mb15\">");
          var intId = 0;
          if (jQuery(".investigationlist").length == 0){
              intId = 0;
          }
          else {
              intId = jQuery(".investigationlist").length;
          }

          var investigationlist_attributes_select = jQuery("<select class=\"form-control\" id=\"knee_investigationlist_attributes_" + intId + "_investigationside\"  name=\"knee[investigationlist_attributes][" + intId + "][investigationside]\">");
          var investigationlist_attributes_option1 = jQuery("<option value=\"\"></option><option value=\"R\">R</option>");
          var investigationlist_attributes_option2 = jQuery("<option value=\"L\">L</option>");
          var investigationlist_attributes_option3 = jQuery("<option value=\"B/L\">B/L</option>");
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option1);
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option2);
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option3);
          jQuery(tdopen0th).append(investigationlist_attributes_select);
          jQuery(tropen).append(tdopen0th);

          var investigationlist_investigationname_id = "#" + "knee_investigationlist_attributes_" + intId + "_investigationname";
          var investigationlist_investigationname = jQuery("<input class=\"string optional form-control\" id=\"knee_investigationlist_attributes_" + intId + "_investigationname\" maxlength=\"50\" name=\"knee[investigationlist_attributes][" + intId + "][investigationname]\" size=\"50\" type=\"text\">");
          jQuery(inputgroup1).append(investigationlist_investigationname);
          jQuery(formgroup1).append(inputgroup1);
          jQuery(tdopen1st).append(formgroup1);
          jQuery(tropen).append(tdopen1st);

          if (selected['info'][0].additionalParameters['data-radiologyid'] != null) {
              var dataradiologyid = selected['info'][0].additionalParameters['data-radiologyid'];
              dataradiologyid = dataradiologyid.replace('[', '');
              dataradiologyid = dataradiologyid.replace(']', '');
              //dataradiologyid = dataradiologyid.replace("'", '');
              //dataradiologyid = dataradiologyid.replace(' ', '');
              dataradiologyid = dataradiologyid.replace(/'/g, '');
              dataradiologyid = dataradiologyid.replace(/ /g, '');
              var dataradiologyidarray = dataradiologyid.split(',');
              var controlgroup1 = jQuery("<div class=\"control-group check_boxes optional knee_investigationlist_attributes_investigationoption1_collection\">");
              var controls1 = jQuery("<div class=\"controls\">");
              $.each( dataradiologyidarray, function( i, val ) {
                  var investigationlist_investigationoption1 = jQuery("<label class=\"checkbox\"><input class=\"check_boxes optional\" id=\"knee_investigationlist_attributes_" + intId + "_investigationoption1_collection_" + val + "\" name=\"knee[investigationlist_attributes][" + intId + "][investigationoption1_collection][]\" type=\"checkbox\" value=" + val + " >" + val + "</label>");
                  jQuery(controls1).append(investigationlist_investigationoption1);
                  jQuery(controls1).append(whitespaceinput);
              });
              var investigationlist_investigationoption1_checkboxhidden = jQuery("<input name=\"knee[investigationlist_attributes][" + intId + "][investigationoption1_collection][]\" type=\"hidden\" value=\"\">");
              jQuery(controls1).append(investigationlist_investigationoption1_checkboxhidden);
              jQuery(controlgroup1).append(controls1);
              jQuery(inputgroup2).append(controlgroup1);
              jQuery(formgroup2).append(inputgroup2);
              jQuery(tdopen2nd).append(formgroup2);
              jQuery(tropen).append(tdopen2nd);
          }
          else {
              jQuery(tropen).append(tddummy1);
          }

          if (selected['info'][0].additionalParameters['data-variables'] != null) {

              var datavariables = selected['info'][0].additionalParameters['data-variables'];
              datavariables = datavariables.replace('[', '');
              datavariables = datavariables.replace(']', '');
              //datavariables = datavariables.replace("'", '');
              //datavariables = datavariables.replace(' ', '');
              datavariables = datavariables.replace(/'/g, '');
              datavariables = datavariables.replace(/ /g, '');
              var datavariablesarray = datavariables.split(',');
              var controlgroup2 = jQuery("<div class=\"control-group check_boxes optional knee_investigationlist_attributes_investigationoption2_collection\">");
              var controls2 = jQuery("<div class=\"controls\">");
              $.each( datavariablesarray, function( i, val ) {
                  var investigationlist_investigationoption2 = jQuery("<label class=\"checkbox\"><input class=\"check_boxes optional\" id=\"knee_investigationlist_attributes_" + intId + "_investigationoption2_collection_" + val + "\" name=\"knee[investigationlist_attributes][" + intId + "][investigationoption2_collection][]\" type=\"checkbox\" value=" + val + " >" + val + "</label>");
                  jQuery(controls2).append(investigationlist_investigationoption2);
                  jQuery(controls2).append(whitespaceinput);
              });
              var investigationlist_investigationoption2_checkboxhidden = jQuery("<input name=\"knee[investigationlist_attributes][" + intId + "][investigationoption2_collection][]\" type=\"hidden\" value=\"\">");
              jQuery(controls2).append(investigationlist_investigationoption2_checkboxhidden);
              jQuery(controlgroup2).append(controls2);
              jQuery(inputgroup3).append(controlgroup2);
              jQuery(formgroup3).append(inputgroup3);
              jQuery(tdopen3nd).append(formgroup3);
              jQuery(tropen).append(tdopen3nd);
          }
          else {
              jQuery(tropen).append(tddummy2);
          }

          var investigationlist_investigationdeletebutton = jQuery("<a id=\"investigationdeletebutton" + intId + "\" class=\"btn btn-sm btn-primary btn-danger\" href=\"javascript:;\" name=\"investigationdeletebutton\"><span class=\"glyphicon glyphicon-remove\"></span></a>");

          jQuery(formgroup4).append(investigationlist_investigationdeletebutton);
          jQuery(tdopen4th).append(formgroup4);
          jQuery(tropen).append(tdopen4th);

          if (jQuery(".investigationlist").length == 0){
              jQuery(".investigations").append(tropen);
              $(investigationlist_investigationname_id).val(selected['info'][0]['name']);
          }
          else {
              jQuery(".investigationlist:last").after(tropen);
              $(investigationlist_investigationname_id).val(selected['info'][0]['name']);
          }
          $("select[name*='investigationside']").val($("input[name='knee[sidesubjective]']:checked").val()).prop('selected',true);
          //$("select[name*='investigationside']").val(sidesubjective).attr("selected","selected");

      });

      $('#radiologyMRITree').on('opened', function(event, element){
          radiologymrichildren.data = [];
          if (element.type == 'folder') {

              if (element.additionalParameters["data-level"] == 'L1') {

                  var params = { radiologyvar1: element.additionalParameters["data-level"], radiologyvar2: element.additionalParameters["data-treeid"], snomedid: "361291001" };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/radiologyl2.json",
                      data: {radiologyvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col4'] == 'T') {

                              addRadiologyMRIChildren(data[i]['col7'], 'item', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], data[i]['col8'], data[i]['col9']);

                          }
                          else if (data[i]['col4'] == 'N') {

                              addRadiologyMRIChildren(data[i]['col7'], 'folder', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], [], []);

                          }

                      }
                  });
              }
              else if (element.additionalParameters["data-level"] == 'L2') {

                  var params = { radiologyvar1: element.additionalParameters["data-level"], radiologyvar2: element.additionalParameters["data-treeid"] };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/radiologyl3.json",
                      data: {radiologyvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col4'] == 'T') {

                              addRadiologyMRIChildren(data[i]['col7'], 'item', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], data[i]['col8'], data[i]['col9']);

                          }
                          else if (data[i]['col4'] == 'N') {

                              addRadiologyMRIChildren(data[i]['col7'], 'folder', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], [], []);

                          }

                      }
                  });
              }

          }
          else if (element.type == 'item') {
          }

      });

      $('#radiologyMRITree').on('selected', function (event, selected) {

          var whitespaceinput = " ";
          var tropen = jQuery("<tr class=\"investigationlist\">");
          var tdopen0th = jQuery("<td>");
          var tdopen1st = jQuery("<td>");
          var tdopen2nd = jQuery("<td>");
          var tdopen3nd = jQuery("<td>");
          var tdopen4th = jQuery("<td>");
          var tddummy1 = jQuery("<td>");
          var tddummy2 = jQuery("<td>");
          var formgroup1 = jQuery("<div class=\"form-group\">");
          var formgroup2 = jQuery("<div class=\"form-group\">");
          var formgroup3 = jQuery("<div class=\"form-group\">");
          var formgroup4 = jQuery("<div class=\"form-group\">");
          var inputgroup1 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup2 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup3 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup4 = jQuery("<div class=\"input-group mb15\">");
          var intId = 0;
          if (jQuery(".investigationlist").length == 0){
              intId = 0;
          }
          else {
              intId = jQuery(".investigationlist").length;
          }

          var investigationlist_attributes_select = jQuery("<select class=\"form-control\" id=\"knee_investigationlist_attributes_" + intId + "_investigationside\"  name=\"knee[investigationlist_attributes][" + intId + "][investigationside]\">");
          var investigationlist_attributes_option1 = jQuery("<option value=\"\"></option><option value=\"R\">R</option>");
          var investigationlist_attributes_option2 = jQuery("<option value=\"L\">L</option>");
          var investigationlist_attributes_option3 = jQuery("<option value=\"B/L\">B/L</option>");
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option1);
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option2);
          jQuery(investigationlist_attributes_select).append(investigationlist_attributes_option3);
          jQuery(tdopen0th).append(investigationlist_attributes_select);
          jQuery(tropen).append(tdopen0th);

          var investigationlist_investigationname_id = "#" + "knee_investigationlist_attributes_" + intId + "_investigationname";
          var investigationlist_investigationname = jQuery("<input class=\"string optional form-control\" id=\"knee_investigationlist_attributes_" + intId + "_investigationname\" maxlength=\"50\" name=\"knee[investigationlist_attributes][" + intId + "][investigationname]\" size=\"50\" type=\"text\">");
          jQuery(inputgroup1).append(investigationlist_investigationname);
          jQuery(formgroup1).append(inputgroup1);
          jQuery(tdopen1st).append(formgroup1);
          jQuery(tropen).append(tdopen1st);

          if (selected['info'][0].additionalParameters['data-radiologyid'] != null) {
              var dataradiologyid = selected['info'][0].additionalParameters['data-radiologyid'];
              dataradiologyid = dataradiologyid.replace('[', '');
              dataradiologyid = dataradiologyid.replace(']', '');
              //dataradiologyid = dataradiologyid.replace("'", '');
              //dataradiologyid = dataradiologyid.replace(' ', '');
              dataradiologyid = dataradiologyid.replace(/'/g, '');
              dataradiologyid = dataradiologyid.replace(/ /g, '');
              var dataradiologyidarray = dataradiologyid.split(',');
              var controlgroup1 = jQuery("<div class=\"control-group check_boxes optional knee_investigationlist_attributes_investigationoption1_collection\">");
              var controls1 = jQuery("<div class=\"controls\">");
              $.each( dataradiologyidarray, function( i, val ) {
                  var investigationlist_investigationoption1 = jQuery("<label class=\"checkbox\"><input class=\"check_boxes optional\" id=\"knee_investigationlist_attributes_" + intId + "_investigationoption1_collection_" + val + "\" name=\"knee[investigationlist_attributes][" + intId + "][investigationoption1_collection][]\" type=\"checkbox\" value=" + val + " >" + val + "</label>");
                  jQuery(controls1).append(investigationlist_investigationoption1);
                  jQuery(controls1).append(whitespaceinput);
              });
              var investigationlist_investigationoption1_checkboxhidden = jQuery("<input name=\"knee[investigationlist_attributes][" + intId + "][investigationoption1_collection][]\" type=\"hidden\" value=\"\">");
              jQuery(controls1).append(investigationlist_investigationoption1_checkboxhidden);
              jQuery(controlgroup1).append(controls1);
              jQuery(inputgroup2).append(controlgroup1);
              jQuery(formgroup2).append(inputgroup2);
              jQuery(tdopen2nd).append(formgroup2);
              jQuery(tropen).append(tdopen2nd);
          }
          else {
              jQuery(tropen).append(tddummy1);
          }

          if (selected['info'][0].additionalParameters['data-variables'] != null) {

              var datavariables = selected['info'][0].additionalParameters['data-variables'];
              datavariables = datavariables.replace('[', '');
              datavariables = datavariables.replace(']', '');
              //datavariables = datavariables.replace("'", '');
              //datavariables = datavariables.replace(' ', '');
              datavariables = datavariables.replace(/'/g, '');
              datavariables = datavariables.replace(/ /g, '');
              var datavariablesarray = datavariables.split(',');
              var controlgroup2 = jQuery("<div class=\"control-group check_boxes optional knee_investigationlist_attributes_investigationoption2_collection\">");
              var controls2 = jQuery("<div class=\"controls\">");
              $.each( datavariablesarray, function( i, val ) {
                  var investigationlist_investigationoption2 = jQuery("<label class=\"checkbox\"><input class=\"check_boxes optional\" id=\"knee_investigationlist_attributes_" + intId + "_investigationoption2_collection_" + val + "\" name=\"knee[investigationlist_attributes][" + intId + "][investigationoption2_collection][]\" type=\"checkbox\" value=" + val + " >" + val + "</label>");
                  jQuery(controls2).append(investigationlist_investigationoption2);
                  jQuery(controls2).append(whitespaceinput);
              });
              var investigationlist_investigationoption2_checkboxhidden = jQuery("<input name=\"knee[investigationlist_attributes][" + intId + "][investigationoption2_collection][]\" type=\"hidden\" value=\"\">");
              jQuery(controls2).append(investigationlist_investigationoption2_checkboxhidden);
              jQuery(controlgroup2).append(controls2);
              jQuery(inputgroup3).append(controlgroup2);
              jQuery(formgroup3).append(inputgroup3);
              jQuery(tdopen3nd).append(formgroup3);
              jQuery(tropen).append(tdopen3nd);
          }
          else {
              jQuery(tropen).append(tddummy2);
          }

          var investigationlist_investigationdeletebutton = jQuery("<a id=\"investigationdeletebutton" + intId + "\" class=\"btn btn-sm btn-primary btn-danger\" href=\"javascript:;\" name=\"investigationdeletebutton\"><span class=\"glyphicon glyphicon-remove\"></span></a>");

          jQuery(formgroup4).append(investigationlist_investigationdeletebutton);
          jQuery(tdopen4th).append(formgroup4);
          jQuery(tropen).append(tdopen4th);

          if (jQuery(".investigationlist").length == 0){
              jQuery(".investigations").append(tropen);
              $(investigationlist_investigationname_id).val(selected['info'][0]['name']);
          }
          else {
              jQuery(".investigationlist:last").after(tropen);
              $(investigationlist_investigationname_id).val(selected['info'][0]['name']);
          }
          $("select[name*='investigationside']").val($("input[name='knee[sidesubjective]']:checked").val()).prop('selected',true);
          //$("select[name*='investigationside']").val(sidesubjective).attr("selected","selected");

      });

      $('#radiologyUSGOTHERSTree').on('opened', function(event, element){
          radiologyusgotherschildren.data = [];
          if (element.type == 'folder') {

              if (element.additionalParameters["data-level"] == 'L1') {

                  var params = { radiologyvar1: element.additionalParameters["data-level"], radiologyvar2: element.additionalParameters["data-treeid"], snomedid: "361291001" };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/radiologyl2.json",
                      data: {radiologyvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col4'] == 'T') {

                              addRadiologyUSGOTHERSChildren(data[i]['col7'], 'item', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], data[i]['col8'], data[i]['col9']);

                          }
                          else if (data[i]['col4'] == 'N') {

                              addRadiologyUSGOTHERSChildren(data[i]['col7'], 'folder', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], [], []);

                          }

                      }
                  });
              }
              else if (element.additionalParameters["data-level"] == 'L2') {

                  var params = { radiologyvar1: element.additionalParameters["data-level"], radiologyvar2: element.additionalParameters["data-treeid"] };
                  jQuery.ajax({
                      type: "GET",
                      url: "/icdtree/radiologyl3.json",
                      data: {radiologyvariables: params, remote: "true" }
                  }).done(function( data ) {

                      for(i=0; i<data.length; i++)
                      {
                          if (data[i]['col4'] == 'T') {

                              addRadiologyUSGOTHERSChildren(data[i]['col7'], 'item', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], data[i]['col8'], data[i]['col9']);

                          }
                          else if (data[i]['col4'] == 'N') {

                              addRadiologyUSGOTHERSChildren(data[i]['col7'], 'folder', data[i]['col6'], data[i]['col5'], data[i]['col4'], data[i]['col3'], [], []);

                          }

                      }
                  });
              }

          }
          else if (element.type == 'item') {
          }

      });

      $('#radiologyUSGOTHERSTree').on('selected', function (event, selected) {

          var whitespaceinput = " ";
          var tropen = jQuery("<tr class=\"investigationlist\">");
          var tdopen1st = jQuery("<td>");
          var tdopen2nd = jQuery("<td>");
          var tdopen3nd = jQuery("<td>");
          var tdopen4th = jQuery("<td>");
          var tddummy1 = jQuery("<td>");
          var tddummy2 = jQuery("<td>");
          var formgroup1 = jQuery("<div class=\"form-group\">");
          var formgroup2 = jQuery("<div class=\"form-group\">");
          var formgroup3 = jQuery("<div class=\"form-group\">");
          var formgroup4 = jQuery("<div class=\"form-group\">");
          var inputgroup1 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup2 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup3 = jQuery("<div class=\"input-group mb15\">");
          var inputgroup4 = jQuery("<div class=\"input-group mb15\">");
          var intId = 0;
          if (jQuery(".investigationlist").length == 0){
              intId = 0;
          }
          else {
              intId = jQuery(".investigationlist").length;
          }

          var investigationlist_investigationname_id = "#" + "knee_investigationlist_attributes_" + intId + "_investigationname";
          var investigationlist_investigationname = jQuery("<input class=\"string optional form-control\" id=\"knee_investigationlist_attributes_" + intId + "_investigationname\" maxlength=\"50\" name=\"knee[investigationlist_attributes][" + intId + "][investigationname]\" size=\"50\" type=\"text\">");
          jQuery(inputgroup1).append(investigationlist_investigationname);
          jQuery(formgroup1).append(inputgroup1);
          jQuery(tdopen1st).append(formgroup1);
          jQuery(tropen).append(tdopen1st);

          if (selected['info'][0].additionalParameters['data-radiologyid'] != null) {
              var dataradiologyid = selected['info'][0].additionalParameters['data-radiologyid'];
              dataradiologyid = dataradiologyid.replace('[', '');
              dataradiologyid = dataradiologyid.replace(']', '');
              //dataradiologyid = dataradiologyid.replace("'", '');
              //dataradiologyid = dataradiologyid.replace(' ', '');
              dataradiologyid = dataradiologyid.replace(/'/g, '');
              dataradiologyid = dataradiologyid.replace(/ /g, '');
              var dataradiologyidarray = dataradiologyid.split(',');
              var controlgroup1 = jQuery("<div class=\"control-group check_boxes optional knee_investigationlist_attributes_investigationoption1_collection\">");
              var controls1 = jQuery("<div class=\"controls\">");
              $.each( dataradiologyidarray, function( i, val ) {
                  var investigationlist_investigationoption1 = jQuery("<label class=\"checkbox\"><input class=\"check_boxes optional\" id=\"knee_investigationlist_attributes_" + intId + "_investigationoption1_collection_" + val + "\" name=\"knee[investigationlist_attributes][" + intId + "][investigationoption1_collection][]\" type=\"checkbox\" value=" + val + " >" + val + "</label>");
                  jQuery(controls1).append(investigationlist_investigationoption1);
                  jQuery(controls1).append(whitespaceinput);
              });
              var investigationlist_investigationoption1_checkboxhidden = jQuery("<input name=\"knee[investigationlist_attributes][" + intId + "][investigationoption1_collection][]\" type=\"hidden\" value=\"\">");
              jQuery(controls1).append(investigationlist_investigationoption1_checkboxhidden);
              jQuery(controlgroup1).append(controls1);
              jQuery(inputgroup2).append(controlgroup1);
              jQuery(formgroup2).append(inputgroup2);
              jQuery(tdopen2nd).append(formgroup2);
              jQuery(tropen).append(tdopen2nd);
          }
          else {
              jQuery(tropen).append(tddummy1);
          }

          if (selected['info'][0].additionalParameters['data-variables'] != null) {

              var datavariables = selected['info'][0].additionalParameters['data-variables'];
              datavariables = datavariables.replace('[', '');
              datavariables = datavariables.replace(']', '');
              //datavariables = datavariables.replace("'", '');
              //datavariables = datavariables.replace(' ', '');
              datavariables = datavariables.replace(/'/g, '');
              datavariables = datavariables.replace(/ /g, '');
              var datavariablesarray = datavariables.split(',');
              var controlgroup2 = jQuery("<div class=\"control-group check_boxes optional knee_investigationlist_attributes_investigationoption2_collection\">");
              var controls2 = jQuery("<div class=\"controls\">");
              $.each( datavariablesarray, function( i, val ) {
                  var investigationlist_investigationoption2 = jQuery("<label class=\"checkbox\"><input class=\"check_boxes optional\" id=\"knee_investigationlist_attributes_" + intId + "_investigationoption2_collection_" + val + "\" name=\"knee[investigationlist_attributes][" + intId + "][investigationoption2_collection][]\" type=\"checkbox\" value=" + val + " >" + val + "</label>");
                  jQuery(controls2).append(investigationlist_investigationoption2);
                  jQuery(controls2).append(whitespaceinput);
              });
              var investigationlist_investigationoption2_checkboxhidden = jQuery("<input name=\"knee[investigationlist_attributes][" + intId + "][investigationoption2_collection][]\" type=\"hidden\" value=\"\">");
              jQuery(controls2).append(investigationlist_investigationoption2_checkboxhidden);
              jQuery(controlgroup2).append(controls2);
              jQuery(inputgroup3).append(controlgroup2);
              jQuery(formgroup3).append(inputgroup3);
              jQuery(tdopen3nd).append(formgroup3);
              jQuery(tropen).append(tdopen3nd);
          }
          else {
              jQuery(tropen).append(tddummy2);
          }

          var investigationlist_investigationdeletebutton = jQuery("<a id=\"investigationdeletebutton" + intId + "\" class=\"btn btn-sm btn-primary btn-danger\" href=\"javascript:;\" name=\"investigationdeletebutton\"><span class=\"glyphicon glyphicon-remove\"></span></a>");

          jQuery(formgroup4).append(investigationlist_investigationdeletebutton);
          jQuery(tdopen4th).append(formgroup4);
          jQuery(tropen).append(tdopen4th);

          if (jQuery(".investigationlist").length == 0){
              jQuery(".investigations").append(tropen);
              $(investigationlist_investigationname_id).val(selected['info'][0]['name']);
          }
          else {
              jQuery(".investigationlist:last").after(tropen);
              $(investigationlist_investigationname_id).val(selected['info'][0]['name']);
          }

          $("select[name*='investigationside']").val($("input[name='knee[sidesubjective]']:checked").val()).prop('selected',true);
          //$("select[name*='investigationside']").val(sidesubjective).attr("selected","selected");

      });

      $('#myTree').on('selected', function (event, selected) {


          $("input.diagnosisname").each(function(){
              if (this.value == "") {
                  var diagnosis_attributes_qualifier_select = jQuery("<select class=\"form-control\" id=\"knee_diagnosis_attributes_" + $(this).attr("id").split("_")[3] + "_qualifier\" name=\"knee[diagnosis_attributes][" + $(this).attr("id").split("_")[3] + "][qualifier]\">");
                  $(this).val(selected['info'][0]['name']);
                  $(this).closest('td').find('input.icddiagnosiscode').val(selected['info'][0]['icdcode']);

                  if (selected['info'][0]['icdcode'] == 'M23.0' || selected['info'][0]['icdcode'] == 'M23.1' || selected['info'][0]['icdcode'] == 'M23.3' || selected['info'][0]['icdcode'] == 'S83.2') {
                      var option_ah_mm = jQuery("<option value=\"AH-MM\">AH-MM</option>");
                      var option_ph_mm = jQuery("<option value=\"PH-MM\">PH-MM</option>");
                      var option_mm = jQuery("<option value=\"MM\">MM</option>");
                      var option_ah_lm = jQuery("<option value=\"AH-LM\">AH-LM</option>");
                      var option_ph_lm = jQuery("<option value=\"PH-LM\">PH-LM</option>");
                      var option_lm = jQuery("<option value=\"LM\">LM</option>");
                      diagnosis_attributes_qualifier_select.append(option_ah_mm);
                      diagnosis_attributes_qualifier_select.append(option_ph_mm);
                      diagnosis_attributes_qualifier_select.append(option_mm);
                      diagnosis_attributes_qualifier_select.append(option_ah_lm);
                      diagnosis_attributes_qualifier_select.append(option_ph_lm);
                      diagnosis_attributes_qualifier_select.append(option_lm);
                      jQuery(this).closest('td').next().append(diagnosis_attributes_qualifier_select);
                  }
                  if (selected['info'][0]['icdcode'] == 'S83.4') {
                      var option_mcl = jQuery("<option value=\"MCL\">MCL</option>");
                      var option_lcl = jQuery("<option value=\"LCL\">LCL</option>");
                      var option_pmc = jQuery("<option value=\"PMC\">PMC</option>");
                      var option_plc = jQuery("<option value=\"PLC\">PLC</option>");
                      var option_alc = jQuery("<option value=\"ALC\">ALC</option>");
                      diagnosis_attributes_qualifier_select.append(option_mcl);
                      diagnosis_attributes_qualifier_select.append(option_lcl);
                      diagnosis_attributes_qualifier_select.append(option_pmc);
                      diagnosis_attributes_qualifier_select.append(option_plc);
                      diagnosis_attributes_qualifier_select.append(option_alc);
                      jQuery(this).closest('td').next().append(diagnosis_attributes_qualifier_select);
                  }
                  if (selected['info'][0]['icdcode'] == 'S83.5') {
                      var option_acl = jQuery("<option value=\"ACL\">ACL</option>");
                      var option_pcl = jQuery("<option value=\"PCL\">PCL</option>");
                      diagnosis_attributes_qualifier_select.append(option_acl);
                      diagnosis_attributes_qualifier_select.append(option_pcl);
                      jQuery(this).closest('td').next().append(diagnosis_attributes_qualifier_select);
                  }
                  if (selected['info'][0]['icdcode'] == 'M23.5' || selected['info'][0]['icdcode'] == 'M23.8' || selected['info'][0]['icdcode'] == 'M24.2') {
                      var option_acl = jQuery("<option value=\"ACL\">ACL</option>");
                      var option_pcl = jQuery("<option value=\"PCL\">PCL</option>");
                      var option_mcl = jQuery("<option value=\"MCL\">MCL</option>");
                      var option_lcl = jQuery("<option value=\"LCL\">LCL</option>");
                      var option_pmc = jQuery("<option value=\"PMC\">PMC</option>");
                      var option_plc = jQuery("<option value=\"PLC\">PLC</option>");
                      var option_alc = jQuery("<option value=\"ALC\">ALC</option>");
                      diagnosis_attributes_qualifier_select.append(option_acl);
                      diagnosis_attributes_qualifier_select.append(option_pcl);
                      diagnosis_attributes_qualifier_select.append(option_mcl);
                      diagnosis_attributes_qualifier_select.append(option_lcl);
                      diagnosis_attributes_qualifier_select.append(option_pmc);
                      diagnosis_attributes_qualifier_select.append(option_plc);
                      diagnosis_attributes_qualifier_select.append(option_alc);
                      jQuery(this).closest('td').next().append(diagnosis_attributes_qualifier_select);
                  }
                  return false;
              }
          });

      });

      $('#knee_otherinvestigationslist').on('click', function () {

          var whitespaceinput = " ";
          var tropen = jQuery("<tr class=\"addedotherinvestigationlist\">");
          var tdopen1st = jQuery("<td>");
          var tdopen4th = jQuery("<td>");
          var formgroup1 = jQuery("<div class=\"form-group\">");
          var formgroup4 = jQuery("<div class=\"form-group\">");
          var inputgroup1 = jQuery("<div class=\"input-group mb15\">");
          var intId = 0;
          if (jQuery(".addedotherinvestigationlist").length == 0){
              intId = 0;
          }
          else {
              intId = jQuery(".addedotherinvestigationlist").length;
          }

          var addedotherinvestigationlist_investigationname_id = "#" + "knee_addedotherinvestigationlist_attributes_" + intId + "_investigationname";
          var addedotherinvestigationlist_investigationname = jQuery("<input class=\"string optional form-control\" id=\"knee_addedotherinvestigationlist_attributes_" + intId + "_investigationname\" maxlength=\"50\" name=\"knee[addedotherinvestigationlist_attributes][" + intId + "][investigationname]\" size=\"50\" type=\"text\">");
          jQuery(inputgroup1).append(addedotherinvestigationlist_investigationname);
          jQuery(formgroup1).append(inputgroup1);
          jQuery(tdopen1st).append(formgroup1);
          jQuery(tropen).append(tdopen1st);

          var addedotherinvestigationlist_investigationdeletebutton = jQuery("<a id=\"addedotherinvestigationdeletebutton" + intId + "\" class=\"btn btn-sm btn-primary btn-danger\" href=\"javascript:;\" name=\"addedotherinvestigationdeletebutton\"><span class=\"glyphicon glyphicon-remove\"></span></a>");

          jQuery(formgroup4).append(addedotherinvestigationlist_investigationdeletebutton);
          jQuery(tdopen4th).append(formgroup4);
          jQuery(tropen).append(tdopen4th);

          if (jQuery(".addedotherinvestigationlist").length == 0){
              jQuery(".otherinvestigations").append(tropen);
              $(addedotherinvestigationlist_investigationname_id).val($("#knee_otherinvestigationslist option:selected").text());
          }
          else {
              jQuery(".addedotherinvestigationlist:last").after(tropen);
              $(addedotherinvestigationlist_investigationname_id).val($("#knee_otherinvestigationslist option:selected").text());
          }

      });

      $('#knee_toplaboratoryinvestigation').on('click', function (event) {

          var params = { laboratorysetname: $("#knee_toplaboratoryinvestigation option:selected").text(), laboratorysetid: $("#knee_toplaboratoryinvestigation option:selected").val() };
          jQuery.ajax({
              type: "GET",
              url: "/icdtree/fetchlaboratorytests.json",
              data: {laboratory: params, remote: "true" }
          }).done(function( data ) {

              for(i=0; i<data.length; i++)
              {
                  var whitespaceinput = " ";
                  var tropen = jQuery("<tr class=\"addedlaboratoryinvestigationlist\">");
                  var tdopen1st = jQuery("<td>");
                  var tdopen4th = jQuery("<td>");
                  var formgroup1 = jQuery("<div class=\"form-group\">");
                  var formgroup4 = jQuery("<div class=\"form-group\">");
                  var inputgroup1 = jQuery("<div class=\"input-group mb15\">");
                  var intId = 0;
                  if (jQuery(".addedlaboratoryinvestigationlist").length == 0){
                      intId = 0;
                  }
                  else {
                      intId = jQuery(".addedlaboratoryinvestigationlist").length;
                  }

                  var addedlaboratoryinvestigationlist_investigationname_id = "#" + "knee_addedlaboratoryinvestigationlist_attributes_" + intId + "_investigationname";
                  var addedlaboratoryinvestigationlist_investigationname = jQuery("<input class=\"string optional form-control\" id=\"knee_addedlaboratoryinvestigationlist_attributes_" + intId + "_investigationname\" maxlength=\"50\" name=\"knee[addedlaboratoryinvestigationlist][" + intId + "][investigationname]\" size=\"50\" type=\"text\">");

                  var addedlaboratoryinvestigationlist_loincclass_hidden = jQuery("<input id=\"knee_addedlaboratoryinvestigationlist_attributes_" + intId + "_loincclass\" name=\"knee[addedlaboratoryinvestigationlist][" + intId + "][loincclass]\" type=\"hidden\" value=" + data[i]['loincclass'] + ">");
                  var addedlaboratoryinvestigationlist_loinccode_hidden = jQuery("<input id=\"knee_addedlaboratoryinvestigationlist_attributes_" + intId + "_loinccode\" name=\"knee[addedlaboratoryinvestigationlist][" + intId + "][loinccode]\" type=\"hidden\" value=" + data[i]['loinccode'] + ">");
                  var addedlaboratoryinvestigationlist_laboratorytestid_hidden = jQuery("<input id=\"knee_addedlaboratoryinvestigationlist_attributes_" + intId + "_laboratorytestid\" name=\"knee[addedlaboratoryinvestigationlist][" + intId + "][laboratorytestid]\" type=\"hidden\" value=" + data[i]['laboratorytestid'] + ">");
                  jQuery(inputgroup1).append(addedlaboratoryinvestigationlist_investigationname);
                  jQuery(inputgroup1).append(addedlaboratoryinvestigationlist_loincclass_hidden);
                  jQuery(inputgroup1).append(addedlaboratoryinvestigationlist_loinccode_hidden);
                  jQuery(inputgroup1).append(addedlaboratoryinvestigationlist_laboratorytestid_hidden);
                  jQuery(formgroup1).append(inputgroup1);
                  jQuery(tdopen1st).append(formgroup1);
                  jQuery(tropen).append(tdopen1st);

                  var addedlaboratoryinvestigationlist_investigationdeletebutton = jQuery("<a id=\"addedlaboratoryinvestigationdeletebutton" + intId + "\" class=\"btn btn-sm btn-primary btn-danger\" href=\"javascript:;\" name=\"addedlaboratoryinvestigationdeletebutton\"><span class=\"glyphicon glyphicon-remove\"></span></a>");

                  jQuery(formgroup4).append(addedlaboratoryinvestigationlist_investigationdeletebutton);
                  jQuery(tdopen4th).append(formgroup4);
                  jQuery(tropen).append(tdopen4th);

                  if (jQuery(".addedlaboratoryinvestigationlist").length == 0){
                      jQuery(".laboratoryinvestigations").append(tropen);
                      $(addedlaboratoryinvestigationlist_investigationname_id).val(data[i]['loincshortname']);
                  }
                  else {
                      jQuery(".addedlaboratoryinvestigationlist:last").after(tropen);
                      $(addedlaboratoryinvestigationlist_investigationname_id).val(data[i]['loincshortname']);
                  }

              }
          });

      });

      $('tbody').on('click', "a[name*='removediagnosisbutton']", function() {
          jQuery(this).parents('.diagnosislist').remove();
      });

      $('tbody').on('click', "a[name*='investigationdeletebutton']", function() {
          jQuery(this).parents('.investigationlist').remove();
      });

      $('tbody').on('click', "a[name*='addedlaboratoryinvestigationdeletebutton']", function() {
          jQuery(this).parents('.addedlaboratoryinvestigationlist').remove();
      });

      $('tbody').on('click', "a[name*='addedotherinvestigationdeletebutton']", function() {
          jQuery(this).parents('.addedotherinvestigationlist').remove();
      });

      $('tbody').on('click', "a[name*='removemedicationbutton']", function() {
          jQuery(this).parents('.treatmentmedications').remove();
      });


      jQuery(".medicinename").autocomplete({
          minLength: 3,
          source: function(request, response) {
              jQuery.ajax({
                  dataType: "json",
                  type : 'get',
                  url: '/icdtree/getitems',
                  //data: {searchpatient: params, remote: "true" },
                  data: {q: request.term, remote: "true" },
                  success: function(data) {
                      //jQuery('#searchpatientkeyword').removeClass('ui-autocomplete-loading')
                      response( data);
                  },
                  error: function(data) {
                      //jQuery('#searchpatientkeyword').removeClass('ui-autocomplete-loading');
                  }
              });
          },
          focus: function(event, ui) {
              //return false;
          },
          select: function( event, ui ) {
              var re = /x/gi;
              var medicinemame = ui.item.value['medname'];
              var packing = ui.item.value['packing'];
              var contents = ui.item.value['contents'];
              if (packing.search(re) == -1) {
                  jQuery(this).val(medicinemame);
                  jQuery(this).closest('td').next().find('textarea').val(contents);
              }
              else {
                  jQuery(this).val(medicinemame);
                  jQuery(this).closest('td').next().find('textarea').val(packing);
              }

              return false;
          }
      });
      jQuery(".medicinename").autocomplete( "option", "appendTo", ".form-inline" );


      jQuery(document).ready(function() {

          var side = "";
          $('#paintdetailsfields').hide();
          $('#kochshistoryfields').hide();
          $('#treatmenthistoryfields').hide();
          $('#familyhistoryfields').hide();
          $('#personalhistoryfields').hide();
          $('#currentmedicationsfields').hide();
          $('#allergiesfields').hide();
          $('#patellatests').hide();
          $('#gaittests').hide();
          $('#lldtests').hide();
          $('#torsinalprofiletests').hide();
          $('#extratests').hide();
          $('#neurologytests').hide();

          $(".castorsplint-radioselectlabel").hide();
          $(".radio_castorsplint").hide();
          $(".radio_cast").hide();
          $(".radio_splint").hide();

          $('.physiotherapyadvice-checkbox').hide();
          $('.checkbox_physiotherapyadvice').hide();
          $('.physiotherapyadvicecommentbox-textarealabel').hide();
          $('.knee_physiotherapyadvicecommentbox').hide();

          $('.otherprecautionscommentbox-textarealabel').hide();
          $('.knee_otherprecautionscommentbox').hide();
          $('.otherreferencecommentbox-textarealabel').hide();
          $('.knee_otherreferencecommentbox').hide();

          $('#paintdetailsheading').on('click', function() {
              $('#paintdetailsfields').show();
          });

          $('#kochshistory').on('click', function() {
              $('#kochshistoryfields').show();
          });

          $('#treatmenthistory').on('click', function() {
              $('#treatmenthistoryfields').show();
          });

          $('#familyhistory').on('click', function() {
              $('#familyhistoryfields').show();
          });

          $('#personalhistory').on('click', function() {
              $('#personalhistoryfields').show();
          });

          $('#currentmedications').on('click', function() {
              $('#currentmedicationsfields').show();
          });

          $('#allergies').on('click', function() {
              $('#allergiesfields').show();
          });

          $('#patelladetailsheading').on('click', function() {
              $('#patellatests').show();
          });

          $('#gaitdetailsheading').on('click', function() {
              $('#gaittests').show();
          });

          $('#llddetailsheading').on('click', function() {
              $('#lldtests').show();
          });

          $('#torsionalprofileheading').on('click', function() {
              $('#torsinalprofiletests').show();
          });

          $('#extraheading').on('click', function() {
              $('#extratests').show();
          });

          $('#neurologyheading').on('click', function() {
              $('#neurologytests').show();
          });

          $("input[name='knee[immobilization]']").on('change', function() {

              if (this.value == "Yes") {

                  $('.castorsplint-radioselectlabel').show();
                  $('.radio_castorsplint').show();

              }
              else if (this.value == "No") {

                  $('.radio_cast').hide();
                  $('.radio_splint').hide();
                  $('.castorsplint-radioselectlabel').hide();
                  $('.radio_castorsplint').hide();

              }

          });

          $("input[name='knee[castorsplint]']").on('change', function() {

              if (this.value == "Cast") {

                  $('.radio_cast').show();
                  $('.radio_splint').hide();

              }
              else if (this.value == "Splint") {

                  $('.radio_splint').show();
                  $('.radio_cast').hide();

              }

          });

          $("input[name='knee[refertophysiotherpist]']").on('change', function() {

              if (this.value == "Yes") {

                  $('.physiotherapyadvice-checkbox').show();
                  $('.checkbox_physiotherapyadvice').show();
                  $('.physiotherapyadvicecommentbox-textarealabel').show();
                  $('.knee_physiotherapyadvicecommentbox').show();

              }
              else if (this.value == "No") {

                  $('.physiotherapyadvice-checkbox').hide();
                  $('.checkbox_physiotherapyadvice').hide();
                  $('.physiotherapyadvicecommentbox-textarealabel').hide();
                  $('.knee_physiotherapyadvicecommentbox').hide();

              }

          });

          $("input[name='knee[otherprecautions]']").on('change', function() {

              if (this.value == "Yes") {

                  $('.otherprecautionscommentbox-textarealabel').show();
                  $('.knee_otherprecautionscommentbox').show();

              }
              else if (this.value == "No") {

                  $('.otherprecautionscommentbox-textarealabel').hide();
                  $('.knee_otherprecautionscommentbox').hide();

              }

          });

          $("input[name='knee[otherreference]']").on('change', function() {

              if (this.value == "Yes") {

                  $('.otherreferencecommentbox-textarealabel').show();
                  $('.knee_otherreferencecommentbox').show();

              }
              else if (this.value == "No") {

                  $('.otherreferencecommentbox-textarealabel').hide();
                  $('.knee_otherreferencecommentbox').hide();

              }

          });

          $("input[name='knee[sidesubjective]']").on('change', function() {
              //side = $("input[name='knee[sidesubjective]']:checked").val();

              $("input[name='knee[sideobjective]'][value='" + $("input[name='knee[sidesubjective]']:checked").val() + "']").prop('checked',true);

              //$("input[name='knee[sideobjective]']").val($("input[name='knee[sidesubjective]']:checked").val()).prop('checked',true);

              if (jQuery(".diagnosislist").length > 0){

                  var diagnosislist_length = jQuery(".diagnosislist").length;
                  $("select[name*='diagnosisside']").val($("input[name='knee[sidesubjective]']:checked").val()).prop('selected',true);
              }

              if (jQuery(".procedurelist").length > 0){

                  var procedurelist_length = jQuery(".procedurelist").length;
                  $("select[name*='content']").val($("input[name='knee[sidesubjective]']:checked").val()).prop('selected',true);
              }

              initialinvestigationlist("Knee AP Xray", $("input[name='knee[sidesubjective]']:checked").val());
              initialinvestigationlist("Knee LATERAL Xray", $("input[name='knee[sidesubjective]']:checked").val());

          });

          $('#knee_topdiagnosis').on('click', function() {
              $("input.diagnosisname").each(function(){
                  if (this.value == "") {


                      $(this).val($("#knee_topdiagnosis option:selected").text());
                      $(this).closest('td').find('input.icddiagnosiscode').val($("#knee_topdiagnosis option:selected").val());
                      var diagnosis_attributes_qualifier_select = jQuery("<select class=\"form-control\" id=\"knee_diagnosis_attributes_" + $(this).attr("id").split("_")[3] + "_qualifier\" name=\"knee[diagnosis_attributes][" + $(this).attr("id").split("_")[3] + "][qualifier]\">");

                      if ($("#knee_topdiagnosis option:selected").val() == 'M23.0' || $("#knee_topdiagnosis option:selected").val() == 'M23.1' || $("#knee_topdiagnosis option:selected").val() == 'M23.3' || $("#knee_topdiagnosis option:selected").val() == 'S83.2') {
                          var option_ah_mm = jQuery("<option value=\"AH-MM\">AH-MM</option>");
                          var option_ph_mm = jQuery("<option value=\"PH-MM\">PH-MM</option>");
                          var option_mm = jQuery("<option value=\"MM\">MM</option>");
                          var option_ah_lm = jQuery("<option value=\"AH-LM\">AH-LM</option>");
                          var option_ph_lm = jQuery("<option value=\"PH-LM\">PH-LM</option>");
                          var option_lm = jQuery("<option value=\"LM\">LM</option>");
                          diagnosis_attributes_qualifier_select.append(option_ah_mm);
                          diagnosis_attributes_qualifier_select.append(option_ph_mm);
                          diagnosis_attributes_qualifier_select.append(option_mm);
                          diagnosis_attributes_qualifier_select.append(option_ah_lm);
                          diagnosis_attributes_qualifier_select.append(option_ph_lm);
                          diagnosis_attributes_qualifier_select.append(option_lm);
                          jQuery(this).closest('td').next().append(diagnosis_attributes_qualifier_select);
                      }
                      if ($("#knee_topdiagnosis option:selected").val() == 'S83.4') {
                          var option_mcl = jQuery("<option value=\"MCL\">MCL</option>");
                          var option_lcl = jQuery("<option value=\"LCL\">LCL</option>");
                          var option_pmc = jQuery("<option value=\"PMC\">PMC</option>");
                          var option_plc = jQuery("<option value=\"PLC\">PLC</option>");
                          var option_alc = jQuery("<option value=\"ALC\">ALC</option>");
                          diagnosis_attributes_qualifier_select.append(option_mcl);
                          diagnosis_attributes_qualifier_select.append(option_lcl);
                          diagnosis_attributes_qualifier_select.append(option_pmc);
                          diagnosis_attributes_qualifier_select.append(option_plc);
                          diagnosis_attributes_qualifier_select.append(option_alc);
                          jQuery(this).closest('td').next().append(diagnosis_attributes_qualifier_select);
                      }
                      if ($("#knee_topdiagnosis option:selected").val() == 'S83.5') {
                          var option_acl = jQuery("<option value=\"ACL\">ACL</option>");
                          var option_pcl = jQuery("<option value=\"PCL\">PCL</option>");
                          diagnosis_attributes_qualifier_select.append(option_acl);
                          diagnosis_attributes_qualifier_select.append(option_pcl);
                          jQuery(this).closest('td').next().append(diagnosis_attributes_qualifier_select);
                      }
                      if ($("#knee_topdiagnosis option:selected").val() == 'M23.5' || $("#knee_topdiagnosis option:selected").val() == 'M23.8' || $("#knee_topdiagnosis option:selected").val() == 'M24.2') {
                          var option_acl = jQuery("<option value=\"ACL\">ACL</option>");
                          var option_pcl = jQuery("<option value=\"PCL\">PCL</option>");
                          var option_mcl = jQuery("<option value=\"MCL\">MCL</option>");
                          var option_lcl = jQuery("<option value=\"LCL\">LCL</option>");
                          var option_pmc = jQuery("<option value=\"PMC\">PMC</option>");
                          var option_plc = jQuery("<option value=\"PLC\">PLC</option>");
                          var option_alc = jQuery("<option value=\"ALC\">ALC</option>");
                          diagnosis_attributes_qualifier_select.append(option_acl);
                          diagnosis_attributes_qualifier_select.append(option_pcl);
                          diagnosis_attributes_qualifier_select.append(option_mcl);
                          diagnosis_attributes_qualifier_select.append(option_lcl);
                          diagnosis_attributes_qualifier_select.append(option_pmc);
                          diagnosis_attributes_qualifier_select.append(option_plc);
                          diagnosis_attributes_qualifier_select.append(option_alc);
                          jQuery(this).closest('td').next().append(diagnosis_attributes_qualifier_select);
                      }
                      return false;
                  }
              });

          });

          jQuery('tbody').on('click', "a[name*='addnewmedicationbutton']", function() {
              var whitespaceinput = " ";
              var intId = jQuery(".treatmentmedications").length;
              var tropen = jQuery("<tr class=\"treatmentmedications\">");
              var tdopen1st = jQuery("<td>");
              var tdopen2nd = jQuery("<td>");
              var tdopen3nd = jQuery("<td>");
              var tdopen4th = jQuery("<td>");
              var tdopen5th = jQuery("<td>");
              var tdopen6th = jQuery("<td>");
              var formgroup1 = jQuery("<div class=\"form-group\">");
              var formgroup2 = jQuery("<div class=\"form-group\">");
              var formgroup3 = jQuery("<div class=\"form-group\">");
              var formgroup4 = jQuery("<div class=\"form-group\">");
              var formgroup5 = jQuery("<div class=\"form-group\">");
              var formgroup6 = jQuery("<div class=\"form-group\">");
              var inputgroup1 = jQuery("<div class=\"input-group mb15\">");
              var inputgroup2 = jQuery("<div class=\"input-group mb15\">");
              var inputgroup3 = jQuery("<div class=\"input-group mb15\">");
              var inputgroup4 = jQuery("<div class=\"input-group mb15\">");
              var inputgroup5 = jQuery("<div class=\"input-group mb15\">");

              var treatmentmedications_medicinename = jQuery("<input class=\"form-control medicinename\" id=\"knee_treatmentmedication_attributes_" + intId + "_medicinename\" maxlength=\"40\" name=\"knee[treatmentmedication_attributes][" + intId + "][medicinename]\" size=\"40\" type=\"text\">");

              jQuery(inputgroup1).append(treatmentmedications_medicinename);
              jQuery(formgroup1).append(inputgroup1);
              jQuery(tdopen1st).append(formgroup1);

              var treatmentmedications_medicinestrength = jQuery("<input class=\"form-control medicinestrength\" id=\"knee_treatmentmedication_attributes_" + intId + "_medicinestrength\" maxlength=\"10\" name=\"knee[treatmentmedication_attributes][" + intId + "][medicinestrength]\" size=\"10\" type=\"text\">");

              jQuery(inputgroup2).append(treatmentmedications_medicinestrength);
              jQuery(formgroup2).append(inputgroup2);
              jQuery(tdopen2nd).append(formgroup2);

              var treatmentmedications_medicinefrequency = jQuery("<select class=\"form-control\" id=\"knee_treatmentmedication_attributes_" + intId + "_medicinefrequency\" name=\"knee[treatmentmedication_attributes][" + intId + "][medicinefrequency]\">");
              var medicinefrequencyoption1 = jQuery("<option value=\" \"></option>");
              var medicinefrequencyoption2 = jQuery("<option value=\"1-0-0\">1-0-0</option>");
              var medicinefrequencyoption3 = jQuery("<option value=\"0-1-0\">0-1-0</option>");
              var medicinefrequencyoption4 = jQuery("<option value=\"0-0-1\">0-0-1</option>");
              var medicinefrequencyoption5 = jQuery("<option value=\"1-1-0\">1-1-0</option>");
              var medicinefrequencyoption6 = jQuery("<option value=\"1-0-1\">1-0-1</option>");
              var medicinefrequencyoption7 = jQuery("<option value=\"0-1-1\">0-1-1</option>");
              var medicinefrequencyoption8 = jQuery("<option value=\"1-1-1\">1-1-1</option>");
              var medicinefrequencyoption9 = jQuery("<option value=\"1-1-1-1\">1-1-1-1</option>");
              var medicinefrequencyoption10 = jQuery("<option value=\"1-1-1-1-1\">1-1-1-1-1</option>");
              var medicinefrequencyoption11 = jQuery("<option value=\"1-1-1-1-1-1\">1-1-1-1-1-1</option>");


              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption1);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption2);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption3);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption4);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption5);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption6);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption7);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption8);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption9);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption10);
              jQuery(treatmentmedications_medicinefrequency).append(medicinefrequencyoption11);

              jQuery(inputgroup3).append(treatmentmedications_medicinefrequency);
              jQuery(formgroup3).append(inputgroup3);
              jQuery(tdopen3nd).append(formgroup3);

              var treatmentmedications_medicineduration = jQuery("<input class=\"form-control medicineduration\" id=\"knee_treatmentmedication_attributes_" + intId + "_medicineduration\" maxlength=\"4\" name=\"knee[treatmentmedication_attributes][" + intId + "][medicineduration]\" size=\"4\" type=\"text\">");

              jQuery(inputgroup4).append(treatmentmedications_medicineduration);
              jQuery(formgroup4).append(inputgroup4);
              jQuery(tdopen4th).append(formgroup4);

              var treatmentmedications_medicineinstructions = jQuery("<select class=\"form-control\" id=\"knee_treatmentmedication_attributes_" + intId + "_medicineinstructions\" name=\"knee[treatmentmedication_attributes][" + intId + "][medicineinstructions]\">");
              var medicineinstructionsoption1 = jQuery("<option value=\" \"></option>");
              var medicineinstructionsoption2 = jQuery("<option value=\"Take after meals\">Take after meals</option>");
              var medicineinstructionsoption3 = jQuery("<option value=\"Take before meals\">Take before meals</option>");


              //jQuery(treatmentmedications_medicineinstructions).append(medicineinstructionsoption1);
              //jQuery(treatmentmedications_medicineinstructions).append(medicineinstructionsoption2);
              //jQuery(treatmentmedications_medicineinstructions).append(medicineinstructionsoption3);

              //jQuery(inputgroup5).append(treatmentmedications_medicineinstructions);
              //jQuery(formgroup5).append(inputgroup5);
              //jQuery(tdopen5th).append(formgroup5);

              var treatmentmedications_addnewmedicationbutton = jQuery("<a id=\"addnewmedicationbutton" + intId + "\" class=\"btn btn-sm btn-primary btn-square\" href=\"javascript:;\" name=\"addnewmedicationbutton\"><span class=\"glyphicon glyphicon-plus-sign\"></span></a>");

              var treatmentmedications_removemedicationbutton = jQuery("<a id=\"removemedicationbutton" + intId + "\" class=\"btn btn-sm btn-primary btn-danger\" href=\"javascript:;\" name=\"removemedicationbutton\"><span class=\"glyphicon glyphicon-remove\"></span></a>");

              jQuery(formgroup6).append(treatmentmedications_addnewmedicationbutton);
              jQuery(formgroup6).append(whitespaceinput);
              jQuery(formgroup6).append(treatmentmedications_removemedicationbutton);
              jQuery(tdopen6th).append(formgroup6);

              jQuery(tropen).append(tdopen1st);
              jQuery(tropen).append(tdopen2nd);
              jQuery(tropen).append(tdopen3nd);
              jQuery(tropen).append(tdopen4th);
              //jQuery(tropen).append(tdopen5th);
              jQuery(tropen).append(tdopen6th);

              jQuery(".treatmentmedications:last").after(tropen);

          });




          /*

           jQuery(".medicinename").keyup(function(event) {
           jQuery.ajax({
           type: "GET",
           url: "/icdtree/getitems.json"
           }).done(function( data ) {

           var medicinename_field = event.target.id;
           jQuery("#medicinename_field").val(data.medicinename);


           //jQuery(this).val(data.medicinename);
           //jQuery(this).val(data.strength);
           });
           }); */

          // WIZARD
          $('#MyWizard').on('change', function(e, data) {
              if(data.step===3 && data.direction==='next') {
                  // return e.preventDefault();
              }
          });
          $('#MyWizard').on('changed', function(e, data) {
          });
          $('#MyWizard').on('finished', function(e, data) {
          });
          $('#btnWizardPrev').on('click', function() {
              $('#MyWizard').wizard('previous');
              //var item = $('#MyWizard').wizard('selectedItem');
              //optionalfields(item.step);
          });
          $('#btnWizardNext').on('click', function() {
              $('#MyWizard').wizard('next','foo');
              //$( "#subjectiveoptionalfieldsbutton").trigger( "custom", [ "Custom", "Event" ] );
              //var item = $('#MyWizard').wizard('selectedItem');
              //alert("step is" + item.step);
              // optionalfields(item.step);
          });
          $('#MyWizard').on('stepclick', function(e, data) {
              if(data.step===1) {
                  // return e.preventDefault();
              }
              //optionalfields(data.step);
          });

          $( "#rom-slider-range-right-active" ).slider({
              range: true,
              min: -10,
              max: 160,
              values: [ 0, 160 ],
              slide: function( event, ui ) {
                  $( "#knee_romsliderrangerightactive" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
              }
          });

          $( "#rom-slider-range-right-passive" ).slider({
              range: true,
              min: -10,
              max: 160,
              values: [ 0, 160 ],
              slide: function( event, ui ) {
                  $( "#knee_romsliderrangerightpassive" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
              }
          });

          $( "#rom-slider-range-left-active" ).slider({
              range: true,
              min: -10,
              max: 160,
              values: [ 0, 160 ],
              slide: function( event, ui ) {
                  $( "#knee_romsliderrangeleftactive" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
              }
          });

          $( "#rom-slider-range-left-passive" ).slider({
              range: true,
              min: -10,
              max: 160,
              values: [ 0, 160 ],
              slide: function( event, ui ) {
                  $( "#knee_romsliderrangeleftpassive" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
              }
          });

          $( "#knee_romsliderrangerightactive" ).val( $( "#rom-slider-range-right-active" ).slider( "values", 0 ) +   " : " + $( "#rom-slider-range-right-active" ).slider( "values", 1 ) );

          $( "#knee_romsliderrangerightpassive" ).val( $( "#rom-slider-range-right-passive" ).slider( "values", 0 ) +   " : " + $( "#rom-slider-range-right-passive" ).slider( "values", 1 ) );

          $( "#knee_romsliderrangeleftactive" ).val( $( "#rom-slider-range-left-active" ).slider( "values", 0 ) +   " : " + $( "#rom-slider-range-left-active" ).slider( "values", 1 ) );

          $( "#knee_romsliderrangeleftpassive" ).val( $( "#rom-slider-range-left-passive" ).slider( "values", 0 ) +   " : " + $( "#rom-slider-range-left-passive" ).slider( "values", 1 ) );

      });