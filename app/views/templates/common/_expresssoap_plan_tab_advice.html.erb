<div class="tab-pane row" id="advice">
  <!-- <input id="task_started_at" name="task[started_at]" type="time" /> -->
  <div class="col-md-9 col-sm-9">
    <p><b>**Note:</b> Please uncheck the check box if you dont want to create followup appointment automatically</p>
    <div class="row mb10">
      <div class="col-md-2 col-sm-3 col-xs-3">Management Plan:</div>
      <div class="col-md-6 col-sm-5 col-xs-6">
        <%= f.input :advicemanagementplan, as: :text,  label: false, required: false, input_html: { class: 'form-control', rows: 2, style: 'min-width: 90%', required: false, name: "opdrecord[advicemanagementplan]", value: opdrecord.read_attribute(:advicemanagementplan) } %>
      </div>
      <div class="ckbox ckbox-primary col-md-4 col-sm-4 col-xs-3">
        <%= f.check_box :advicemanagementplantoreceptionist, { class: "myclass", id: "advicemanagementplantoreceptionist", checked: false} , "true", "false" %>
        <label for="advicemanagementplantoreceptionist">Show On Receptionist List View.</label>
      </div>
    </div>
    <div class="row mb10">
        <div class="col-md-2 col-sm-3 col-xs-3">Personal Comments:<br>(This will not appear in print)</div>
        <div class="col-md-6 col-sm-5 col-xs-6">
          <%= f.input :management_personal_cmt, as: :text, label: false, required: false, input_html: { class: 'form-control', rows: 2, style: 'min-width: 90%', required: false, name: 'opdrecord[management_personal_cmt]', value: opdrecord.read_attribute(:management_personal_cmt) } %>
        </div>
      </div>
    <div class="row mb10">
      <div class="col-md-2 col-sm-2">Physiotherapy :</div>
      <div class="col-md-8 col-sm-8" id="opdrecord_physiotherapyadvice_container">
        <%= select_tag "opdrecord[advice_attributes][physiotherapyadvice]", options_for_select(opdrecord.get_physiotherapyadvice_for_opdsummary_expresstemplate("#{opdrecord.advice.physiotherapyadviceselectedtags}"), opdrecord.get_physiotherapyadvice_for_opdsummary_expresstemplate_id("#{opdrecord.advice.physiotherapyadviceselectedtags}")), { :multiple => "true", :class => 'form-control opdrecord_physiotherapyadvice expressplan_select2_selectedtags', :id => "opdrecord_physiotherapyadvice",
          "target-tags-id" => "opdrecord_physiotherapyadvice_selectedtags", "target-tagnames-id" => "opdrecord_physiotherapyadvice_selectedtagnames", :style => "width: 100%;" } %>
        <%= hidden_field_tag "opdrecord[advice_attributes][physiotherapyadviceselectedtags]", "#{opdrecord.advice.physiotherapyadviceselectedtags}", {:class => "opdrecord_physiotherapyadvice_selectedtags", :id => "opdrecord_physiotherapyadvice_selectedtags"} %>
        <%= hidden_field_tag "opdrecord[advice_attributes][physiotherapyadviceselectedtagnames]", "#{opdrecord.advice.physiotherapyadviceselectedtagnames}", {:class => "opdrecord_physiotherapyadvice_selectedtagnames", :id => "opdrecord_physiotherapyadvice_selectedtagnames"} %>
      </div>
    </div>
    <div class="row mb10">
      <div class="col-md-2 col-sm-2">Diet & Other precautions: </div>
      <div class="col-md-8 col-sm-8" id="opdrecord_otherprecautions_container">
        <%= select_tag "opdrecord[advice_attributes][otherprecautions]", options_for_select(opdrecord.get_otherprecautions_for_opdsummary_expresstemplate("#{opdrecord.advice.otherprecautionsselectedtags}"), opdrecord.get_otherprecautions_for_opdsummary_expresstemplate_id("#{opdrecord.advice.otherprecautionsselectedtags}")), { :multiple => "true", :class => 'form-control opdrecord_otherprecautions expressplan_select2_selectedtags', :id => "opdrecord_otherprecautions",
          "target-tags-id" => "opdrecord_otherprecautions_selectedtags", "target-tagnames-id" => "opdrecord_otherprecautions_selectedtagnames", :style => "width: 100%;" } %>
        <%= hidden_field_tag "opdrecord[advice_attributes][otherprecautionsselectedtags]", "#{opdrecord.advice.otherprecautionsselectedtags}", {:class => "opdrecord_otherprecautions_selectedtags", :id => "opdrecord_otherprecautions_selectedtags"} %>
        <%= hidden_field_tag "opdrecord[advice_attributes][otherprecautionsselectedtagnames]", "#{opdrecord.advice.otherprecautionsselectedtagnames}", {:class => "opdrecord_otherprecautions_selectedtagnames", :id => "opdrecord_otherprecautions_selectedtagnames"} %>
      </div>
    </div>
    <!-- ' hidden_field_tag 'opdrecord[appointment]', '' -->
         <!-- check_box_tag '[appointment]', checked = true , value: "#{opdrecord.read_attribute(:appointment)}" Basketball</br></br>' -->
    <!-- new ui start -->
    <div class="row mb10">
      <div class="col-md-12 col-lg-12 col-xs-12 col-sm-12">
        <b>Follow up</b>
        <%= hidden_field_tag "opdrecord[advice_attributes][opdfollowuptime]", '', class: "hidden_followup_timepicker" %>
      </div>
    </div>
    <div class="row mb10">
      <div class="col-md-3 col-lg-3 col-xs-12 col-sm-3">
        <div class="col-md-12">
          <b>Date</b>
          <a href="" id='clear_follow_up_date' style="font-size: 10px;margin-top: -7px;">Clear</a>
        </div>
        <div class="col-md-12">
          <% begin %>
            <% @followup_date =  opdrecord.advice.try(:opdfollowupdate) %>
            <% if @followup_date.present? %>
              <% followup_date_view = Date.parse("#{@followup_date}").strftime("%d/%m/%Y") %>
            <% else %>
              <% followup_date_view = '' %>
            <% end %>
          <% rescue %>
            <% followup_date_view = '' %>
          <% end %>
          <%= text_field_tag "opdrecord[advice_attributes][opdfollowupdate]", followup_date_view, class: 'form-control opdfollowupdate-datepicker', style: 'width: 100%; background:#fff; cursor: pointer;', id: "opdfollowupdate-datepicker", readonly:true %>
        </div>
      </div>
      <div class="col-md-3 col-lg-3 col-xs-12 col-sm-3">
        <div class="col-md-12">
          <b>Location</b>
        </div>
        <div class="col-md-12">
          <% selected_facility = opdrecord.advice.try(:appointment_facility) ? opdrecord.advice.appointment_facility : @current_facility.id %>
          <%= select_tag("opdrecord[advice_attributes][appointment_facility]", options_for_select(@facilities.map { |facility| [facility.name, facility.id] }, selected_facility), { :class => 'form-control fac_ddap', style: "width: 100%" }) %>
        </div>
      </div>
      <div class="col-md-3 col-lg-3 col-xs-12 col-sm-3">
        <div class="col-md-12">
          <b>Location's Specialty</b>
        </div>
        <div class="col-md-12">
          <% selected_facility = Facility.find_by(id: selected_facility) %>
          <% selected_specialty = opdrecord.advice.try(:appointment_specialty_id) || @appointment.specialty_id %>
          <% specialties = Specialty.where(:id.in => [selected_specialty]).pluck(:name, :id) %>
          <%= select_tag("opdrecord[advice_attributes][appointment_specialty_id]", options_for_select(specialties, selected_specialty), {:class => 'form-control advice_appointment_specialty_id', style: "width: 100%" }) %>
        </div>
      </div>
      <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12">
        <div class="col-md-12">
          <b>Consultant</b>
        </div>
        <div class="col-md-12">
          <% doctors_array = { organisation_id: @current_user.organisation_id, role_ids: 158965000, is_active: true } %>
          <% doctors_array = doctors_array.merge(specialty_ids: opdrecord.advice.try(:appointment_specialty_id) || @appointment.specialty_id) %>
          <% doctors_array = doctors_array.merge(facility_ids: opdrecord.advice.try(:appointment_facility) || @current_facility.id) %>
          <% selected_doctor = opdrecord.advice.try(:appointment_doctor) ? opdrecord.advice.appointment_doctor : current_user.id.to_s %>
          <% doctors_array = User.where(doctors_array).pluck(:fullname, :id) %>
          <%= select_tag("opdrecord[advice_attributes][appointment_doctor]", options_for_select(doctors_array, selected_doctor),{:class => 'form-control user_ddapt advice_appointment_doctor_id', :style => 'width: 100%'}) %>
        </div>
        <input type="hidden" class="doctor_id" value="<%= @user.id %>">
      </div>
    </div>
    <div class="row mb10">
      <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12">
        <div class="col-md-12">
          <b>Time</b>
        </div>
        <div class="col-md-12 opd-followup-timepicker">
          <div class="bootstrap-timepicker timepicker" style="position: absolute; width: 100%;">
            <%@followup_time =  opdrecord.advice.try(:opdfollowuptime)%>
            <%if @followup_time.present? %>
              <% @followup_time_view = Time.zone.parse("#{opdrecord.advice.try(:opdfollowuptime)}").strftime("%I:%M %p") %>
            <%else%>
              <% @followup_time_view = Time.current.strftime("%I:%M %p") %>
            <%end%>
            <%= text_field_tag "opdfollowuptime", @followup_time_view, class: 'form-control full_width opdfollowuptime-timepicker ', style: 'width: 100%; background:#fff; cursor: pointer;', id: "opdfollowuptime-timepicker", readonly:true %>
          </div>
        </div>
      </div>
      <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12">
        <div class="col-md-12">
          <b>Appointment Type <b style="color: red;">Required</b></b>
        </div>
        <div class="col-md-12 opdrecord_appointment_types">
          <% @locals = { name_attr:"opdrecord[advice_attributes][appointment_type_id]", option_values: @appointment_types } %>
          <% if "#{opdrecord.advice.try(:appointment_type_id)}" == nil || "#{opdrecord.advice.try(:appointment_type_id)}" == ""%>
            <% @locals = @locals.merge(selected: "") %>
          <% else %>
            <% @locals = @locals.merge(selected: opdrecord.try(:advice).try(:appointment_type_id)) %>
          <% end %>
          <%= render partial: 'opd_records/ophthalmology_notes/appointment_type_partial', locals: @locals %>
        </div>
      </div>
      <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12">
        <div class="col-md-12">
          <b>Appointment Category</b>
        </div>
        <div class="col-md-12">
          <%= select_tag("opdrecord[advice_attributes][appointment_category_id]", options_for_select(@sub_appointment_types.pluck(:label, :id), opdrecord.try(:advice).try(:appointment_category_id)), include_blank: 'Select Appointment Category', class: "form-control opdrecord_appointment_category", style: 'width:100%;')%>
        </div>
      </div>
    </div>

    <% if (@appointment.try(:organisation_id).to_s == '5e21ffd6cd29ba0ce0bf5a1e') && @appointment.try(:created_from) == 'Integration' %>
      <div style="display: none">
        <%= f.check_box :bookappointment, {:class => "myclass",:id => "bookappointment-integration", :checked => false}, "true", "false" %>
      </div>
    <% else %>
      <div class="row mb10">
        <div class="col-md-4 col-lg-4 col-sm-4 col-xs-12">
          <div class="col-md-12">
            &nbsp;
          </div>
          <div class="col-md-12">
            <div class="ckbox ckbox-primary">
              <% if opdrecord.bookappointment.nil? %>
                <%= f.check_box :bookappointment, {:class => "myclass", :id => "bookappointment", :checked => false}, "true", "false" %>
                <label for="bookappointment">Make Appointment**</label>
              <% elsif opdrecord.bookappointment == 'false' %>
                <%= f.check_box :bookappointment, {:class => "myclass", :id => "bookappointment", :checked => false }, "true", "false" %>
                <label for="bookappointment">Make Appointment**</label>
              <% elsif opdrecord.bookappointment == 'true' %>
                <%= f.check_box :bookappointment, {:class => "myclass", :id => "bookappointment", :checked => true} , "true", "false" %>
                <label for="bookappointment">Make Appointment**</label>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    <% end %>


    <div class="row mb10">
      <div class="col-md-12">
        <p class="text-center">OR</p>
      </div>
    </div>
    <div class="row">
      <div class="col-md-10 col-sm-10">
        <%= f.input :opdfollowuptimeframe, wrapper_html: {:class=>"col-md-12 col-sm-12"}, collection: (opdrecord.get_opd_followup_timeframe_list()), :as => :hg_checkbox, :label => false, :required => false, :class => 'btn btn-xs btn-white timeframe mb10', :input_html => {:name => "opdrecord[advice_attributes][opdfollowuptimeframe]" }, :checked => opdrecord.checkboxes_checked(opdrecord.advice.try(:opdfollowuptimeframe)) %>
      </div>
    </div>
    <%=render partial: "templates/common/advice_precautions",  locals: { f: f} %>
  </div>
  <div class="col-md-3 col-sm-3" id="booked-appointment-slots" style="background: #fcfcfc;border-left:1px solid #eee;">
    <%= render partial: '/opd_appointments/available_slot.html.erb' %>
  </div>
</div>

<script type="text/javascript">
  datepicker_options = {
    dateFormat: "dd/mm/yy",
    minDate: 0
  };

  jQuery('.opdfollowuptime-timepicker').timepicker({minuteStep: 5});
  jQuery('.opdfollowupdate-datepicker').datepicker(datepicker_options);
  $('.opdfollowupdate-datepicker').on('change', function(){
    $('#bookappointment').prop('checked','true')
  })

  $(".opdfollowuptime-timepicker").on('change', function(){
    var timestamp = $(".opdfollowupdate-datepicker").val() + " " + $(this).val()
    $(".hidden_followup_timepicker").attr("value", timestamp)
  }).trigger('change');

  function get_booked_appointments(doctor_id, facility_id, specialty_id, date, flag) {
    $.ajax({
      url: '/opd_appointments/get_booked_appointments',
      type: 'get',
      data: {
        doctor_id: doctor_id,
        date: date,
        facility_id: facility_id,
        specialty_id: specialty_id,
        flag: flag
      },
      success: function(res) {
      },
    });
  }

  function toggle_specialty_dropdown(){
    if($('.advice_appointment_specialty_id').find('option').length === 1){
     $(".specialty_dropdown_div").hide();
    } else {
      $(".specialty_dropdown_div").show();
    }
  }
  toggle_specialty_dropdown();

  function get_facility_specialties(facility_id) {
    $.ajax({
      type: "GET",
      dataType: "json",
      url: "/main/get_facility_specialties",
      data: { facility_id: facility_id },

      success: function (response) {
        jQuery('.advice_appointment_specialty_id').children().remove();

        jQuery.each(response, function (key, value) {
          jQuery('.advice_appointment_specialty_id').append($("<option></option>").attr("value", value["_id"]).text(value["name"]));
        });

        $('.advice_appointment_specialty_id').css("background-color",'rgb(247, 232, 225)')
        setTimeout(function(argument) { $('.advice_appointment_specialty_id').css("background-color",'')  }, 300)

        var specialty_id = jQuery('.advice_appointment_specialty_id').val()
        var doctor_id = jQuery('#opdrecord_advice_attributes_appointment_doctor').val()
        var date = jQuery('.opdfollowupdate-datepicker').val()
        // get_specialty_doctors(facility_id, specialty_id)
        get_booked_appointments(doctor_id, facility_id, specialty_id, date, null)

        toggle_specialty_dropdown();
      }
    });
  }

  // function get_specialty_doctors(facility_id, specialty_id) {
  //   $.ajax({
  //     type: "GET",
  //     dataType: "json",
  //     url: "/main/get_users_from_specialty",
  //     data: { facility_id: facility_id, specialty_id: specialty_id },

  //     success: function (response) {
  //       $('.advice_appointment_doctor_id').children().remove()
  //       var users = eval(response["users"])

  //       if (users.length == 0){
  //         $('.advice_appointment_doctor_id').append($("<option></option>").attr("value","").text("No Doctors Available for this specialty"));
  //         $('.advice_appointment_doctor_id').trigger('change');
  //       } else {
  //         $.each(users, function(key, value) {
  //           $('.advice_appointment_doctor_id').append($("<option></option>").attr("value", value[1]).text(value[0])).trigger('change');
  //         });
  //       }

  //       $('.advice_appointment_doctor_id').css("background-color",'rgb(247, 232, 225)')
  //       setTimeout(function(argument) {
  //         $('.advice_appointment_doctor_id').css("background-color",'')
  //       }, 300)

  //       var date = jQuery('.opdfollowupdate-datepicker').val()
  //       var doctor_id = jQuery('#opdrecord_advice_attributes_appointment_doctor').val()
  //       get_booked_appointments(doctor_id, facility_id, specialty_id, date, null)
  //     }
  //   });
  // }

  jQuery('.opdfollowupdate-datepicker').change(function(){
    date = this.value
    doctor_id = jQuery('#opdrecord_advice_attributes_appointment_doctor').val()
    facility_id = jQuery('#opdrecord_advice_attributes_appointment_facility').val()
    specialty_id = jQuery('.advice_appointment_specialty_id').val()

    get_booked_appointments(doctor_id, facility_id, specialty_id, date, "dateselect")
  })

  jQuery('#opdrecord_advice_attributes_appointment_facility').on("change",function(){
    var facility_id = this.value;

    get_facility_specialties(facility_id)
  });

  jQuery('.advice_appointment_specialty_id').on("change", function(){
    var specialty_id = this.value
    var facility_id = jQuery("#opdrecord_advice_attributes_appointment_facility").val();
    var doctor_id = jQuery('#opdrecord_advice_attributes_appointment_doctor').val()
    date = jQuery('.opdfollowupdate-datepicker').val()

    // get_specialty_doctors(facility_id, specialty_id)
    get_booked_appointments(doctor_id, facility_id, specialty_id, date, null)
  })

  jQuery('#opdrecord_advice_attributes_appointment_doctor').change(function(){
    doctor_id = this.value
    date = jQuery('.opdfollowupdate-datepicker').val()
    facility_id = jQuery("#opdrecord_advice_attributes_appointment_facility").val();
    specialty_id = jQuery('.advice_appointment_specialty_id').val()

    get_booked_appointments(doctor_id, facility_id, specialty_id, date, null)
  }).trigger('change')

  function deselected_radiobutton(fieldname, input_fieldname, value) {
    jQuery.each(jQuery("." + fieldname), function(index, button) {
      if (jQuery(button).attr("input-value") === value) {
        jQuery(button).addClass("btn-brown");
        jQuery("#" + input_fieldname).val(value);
      } else {
        jQuery(button).removeClass("btn-brown");
        jQuery("#" + input_fieldname).val(value);
      }
    });
  }

  $("#clear_follow_up_date").on('click', function(e){
    e.preventDefault();
    $("#opdfollowupdate-datepicker").val('');
    if($('#opdrecord_specalityid').val() == '309988001' || $('#opdrecord_specalityid').val() == '309989009'){
      check_validation_status(
        $("#opdfollowupdate-datepicker"), 'followup_is_valid',
        li_cls, true,
        'opdrecord_opdfollowuptimeframe'
      );
    }  
  });

  if($('#opdrecord_specalityid').val() == '309988001' || $('#opdrecord_specalityid').val() == '309989009'){
    var form_type = $('#opdrecord_templatetype').val();
    var li_cls = 'advice_step_advice';
    if(form_type == 'freeform')
      li_cls = 'advicetab_advice';
    else if(form_type == 'express')
      li_cls = 'exp_advice_step_advice';
    else if(form_type == 'trauma')
      li_cls = 'trauma_advice_step_advice';

    $("#opdrecord_opdfollowuptimeframe").on('change', function(e){
      check_validation_status(
        this, 'followup_is_valid',
        li_cls, true,
        'opdfollowupdate-datepicker'
      );
    });

    $("#opdrecord_opdfollowuptimeframe").on('change', function(e){
      check_validation_status(
        this, 'followup_is_valid',
        li_cls, true,
        'opdfollowupdate-datepicker'
      );
    });

    $('#opdfollowupdate-datepicker').on('change', function(){
      check_validation_status(
        this, 'followup_is_valid',
        li_cls, true,
        'opdrecord_opdfollowuptimeframe'
      );
    });
  }

$('[data-toggle="tooltip"]').tooltip();
</script>

<style type="text/css">
   [data-toggle='tooltip'] + .tooltip > .tooltip-inner {
    background: black;
    color:#ffffff;
    border: 1px solid #000000;
  }
</style>
