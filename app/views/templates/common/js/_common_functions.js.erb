function _whitespace_global_replace_in_string(value) {
  value.replace(/ /g, '');
}

function _tr_field_contructor(classattr, idattr) {
  var tr_field_field_html = jQuery("< tr class=" + "\"" + classattr + "\"" + " id=" + "\""  + idattr + "\"" + " >");
  return tr_field_field_html;
}

function _td_empty_field_contructor() {
  var td_empty_field_html = jQuery("<td style=" + "\"" + "padding-left:1px;padding-top:1px;padding-bottom:1px;padding:0px;" + "\"" + ">");
  return td_empty_field_html;
}

function _td_empty_medications_field_contructor() {
  var td_empty_medications_field_html = jQuery("<td style=" + "\"" + "padding-left:1px;padding-top:1px;padding-bottom:1px;padding:0px;" + "\"" + ">");
  return td_empty_medications_field_html;
}

function _form_group_field_contructor(classattr, idattr) {
  var form_group_field_html = jQuery("<div class=\"form-group\">");//jQuery("< div class=" + "\"" + classattr + "\"" + " id=" + "\""  + idattr + "\"" + " >");
  return form_group_field_html;
}

function _rdio_primary_field_contructor(classattr) {
  var form_group_field_html = jQuery("<div class=" + "\"" + classattr + "\""+ " >");//jQuery("< div class=" + "\"" + classattr + "\"" + " id=" + "\""  + idattr + "\"" + " >");
  return form_group_field_html;
}

function _input_group_field_contructor(classattr, idattr) {
  var input_group_field_html = jQuery("<div class=\"input-group mb15\">");//jQuery("< div class=" + "\"" + classattr + "\"" + " id=" + "\""  + idattr + "\"" + " >");
  return input_group_field_html;
}

function _ui_automcomplete_widget_field_contructor(classattr, idattr) {
  var ui_automcomplete_widget_field_html = jQuery("<div class=\"ui-widget\">");//jQuery("< div class=" + "\"" + classattr + "\"" + " id=" + "\""  + idattr + "\"" + " >");
  return ui_automcomplete_widget_field_html;
}

function _div_row_field_constructor(classattr, idattr) {
  var div_row_field_html = jQuery("<div class=\"row\">");//jQuery("< div class=" + "\"" + classattr + "\"" + " id=" + "\""  + idattr + "\"" + " >");
  return div_row_field_html;
}

function _div_colmd4_field_constructor(classattr, idattr) {
  var div_colmd4_field_html = jQuery("<div class=\"col-md-4\">");//jQuery("< div class=" + "\"" + classattr + "\"" + " id=" + "\""  + idattr + "\"" + " >");
  return div_colmd4_field_html;
}

function _div_colmd8_field_constructor(classattr, idattr) {
  var div_colmd8_field_html = jQuery("<div class=\"col-md-8\">");//jQuery("< div class=" + "\"" + classattr + "\"" + " id=" + "\""  + idattr + "\"" + " >");
  return div_colmd8_field_html;
}

function _radio_field_contructor_investigation_checked(fieldtype, classattr, fieldcounter, root, treatment, attributes, inputtype, fieldname, radiovalue) {
  var radio_field_contructor_plan_medicineduration_checked_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr + " " + fieldname + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "_" + radiovalue + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " type=" + "\""  + inputtype  + "\"" + " checked=" + "\"" + "checked" + "\"" + " value=" + "\"" + radiovalue + "\"" + " >");
  return radio_field_contructor_plan_medicineduration_checked_html;
}

function _radio_field_contructor_investigation(fieldtype, classattr, fieldcounter, root, treatment, attributes, inputtype, fieldname, radiovalue) {
  var radio_field_contructor_plan_medicineduration_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr + " " + fieldname + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "_" + radiovalue + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " type=" + "\""  + inputtype  + "\"" + " value=" + "\"" + radiovalue + "\""  + " >");
  return radio_field_contructor_plan_medicineduration_html;
}

function _radio_field_label_contructor_investigation(fieldtype,fieldcounter, root, treatment, attributes, inputtype, fieldname, radiovalue, radiolabel) {
  var radio_field_label_contructor_plan_medicationduration_html = jQuery("<" + fieldtype  + " for=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "_" + radiovalue + "\"" + " >" +  radiolabel + "</label>");
  return radio_field_label_contructor_plan_medicationduration_html;
}

function _radio_field_label_contructor_procedure(fieldtype,fieldcounter, root, treatment, attributes, inputtype, fieldname, radiovalue, radiolabel) {
  var radio_field_label_contructor_plan_medicationduration_html = jQuery("<" + fieldtype  + " for=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "_" + radiovalue + "\"" + " >" +  radiolabel + "</label>");
  return radio_field_label_contructor_plan_medicationduration_html;
}

function _radio_field_contructor_plan_medicineduration_checked(fieldtype, classattr, fieldcounter, root, treatment, attributes, inputtype, fieldname, radiovalue) {
  var radio_field_contructor_plan_medicineduration_checked_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr + " " + fieldname + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " type=" + "\""  + inputtype  + "\"" + " include_blank=" + "\"" + "true" + "\"" + " checked=" + "\"" + "checked" + "\"" + " value=" + "\"" + radiovalue + "\"" + " >");
  return radio_field_contructor_plan_medicineduration_checked_html;
}

function _radio_field_contructor_plan_medicineduration(fieldtype, classattr, fieldcounter, root, treatment, attributes, inputtype, fieldname, radiovalue) {
  var radio_field_contructor_plan_medicineduration_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr + " " + fieldname + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "_" + radiovalue + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " type=" + "\""  + inputtype  + "\"" + " include_blank=" + "\"" + "true" + "\"" + " value=" + "\"" + radiovalue + "\""  + " >");
  return radio_field_contructor_plan_medicineduration_html;
}

function _select_field_contructor_medicineinstructions(fieldtype, classattr, fieldcounter, root, treatment, attributes, fieldname) {
  var select_field_contructor_medicineinstructions_html = jQuery("<" + fieldtype  + " class=" + "\"" + classattr + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " data-initialize=" + "\"" + "selectlist" + "\"" + " >");
  return select_field_contructor_medicineinstructions_html;
}

function _select_field_contructor_radiologyoptions(fieldtype, classattr, fieldcounter, root, treatment, attributes, fieldname) {
  var select_field_contructor_medicineinstructions_html = jQuery("<" + fieldtype  + " class=" + "\"" + classattr + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " >");
  return select_field_contructor_medicineinstructions_html;
}

function _radio_field_label_contructor_plan_medicationduration(fieldtype, radiolabel) {
  var radio_field_label_contructor_plan_medicationduration_html = jQuery("<" + fieldtype  + " for=" + "\""  + radiolabel + "\"" + " >" +  radiolabel + "</label>");
  return radio_field_label_contructor_plan_medicationduration_html;
}

function _text_field_contructor_common(fieldtype, classattr, fieldcounter, root, treatment, attributes, size, maxlength, inputtype, fieldname) {
  var text_field_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr + " " + fieldname + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " type=" + "\""  + inputtype  + "\"" + " size=" + "\""  + size + "\"" + " maxlength=" + "\""  + maxlength  + "\""  + " >");
  return text_field_html;
}

function _text_field_contructor_plan_medicinename(fieldtype, classattr, fieldcounter, root, treatment, attributes, size, maxlength, inputtype, fieldname) {
  var text_field_contructor_plan_medicinename_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr + " " + fieldname + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " type=" + "\""  + inputtype  + "\"" + " size=" + "\""  + size + "\"" + " maxlength=" + "\""  + maxlength  + "\"" +  " autocomplete=" + "\"" + "off" + "\"" + " >");
  return text_field_contructor_plan_medicinename_html;
}

function _text_field_contructor_plan_medicineduration(fieldtype, classattr, fieldcounter, root, treatment, attributes, size, maxlength, inputtype, fieldname) {
  var text_field_contructor_plan_medicineduration_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr + " " + fieldname + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " type=" + "\""  + inputtype  + "\"" + " size=" + "\""  + size + "\"" + " maxlength=" + "\""  + maxlength  + "\"" +  " placeholder=" + "\"" + "10" + "\"" + " >");
  return text_field_contructor_plan_medicineduration_html;
}

function _text_area_field_contructor_common(fieldtype, classattr, fieldcounter, root, treatment, attributes, cols, row, fieldname) {
  var text_area_field_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr + " " + fieldname + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " cols=" + "\""  + cols + "\"" + " row=" + "\""  + row  + "\""  + " >");
  return text_area_field_html;
}

function _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) {
  var construct_id_attr_html =  root + UNDERSCORE + treatment + UNDERSCORE + attributes +  UNDERSCORE + fieldcounter + UNDERSCORE + fieldname;
  return construct_id_attr_html;
}

function _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) {
  var construct_name_attr_html =  root + SQUAREOPEN + treatment + UNDERSCORE + attributes +  SQUARECLOSE + SQUAREOPEN + fieldcounter + SQUARECLOSE + SQUAREOPEN + fieldname + SQUARECLOSE;
  return construct_name_attr_html;
}

function _select_field_contructor_common(fieldtype, classattr, fieldcounter, root, treatment, attributes, fieldname) {
  var select_field_contructor_common_html = jQuery("<" + fieldtype  + " class=" + "\"" + classattr + "\""  + " id=" + "\"" + _contruct_id_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " name=" + "\"" + _contruct_name_attr_common(root, treatment, attributes, fieldcounter, fieldname) + "\"" + " >");
  return select_field_contructor_common_html;
}

function _controls_empty_field_contructor() {
  var controls_empty_field_html = jQuery("<div class=\"controls\">");
  return controls_empty_field_html;
}

function _controls_group_field_contructor(INVESTIGATIONOPTION) {
  var classattr = CONTROLGROUP + WHITESPACE + CHECKBOXES + WHITESPACE + OPTIONAL + WHITESPACE + ROOT + UNDERSCORE + INVESTIGATIONLIST + UNDERSCORE + ATTRIBUTES + UNDERSCORE + INVESTIGATIONOPTION + UNDERSCORE + COLLECTION;
  var controls_group_field_html = jQuery("<div class=" + "\"" + classattr + "\"" + ">");
  return controls_group_field_html;
}

function _label_checkbox_field_contructor() {
  var label_checkbox_field_html = jQuery("<label class=\"checkbox\">");
  return label_checkbox_field_html;
}

function _text_checkbox_field_contructor(fieldtype, classattr, fieldcounter, root, treatment, attributes, inputtype, fieldname, icdattrvalue, investigationoption) {
  var text_checkbox_field_contructor_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr + " " + fieldname + "\""  + " id=" + "\"" + _construct_checkbox_id_attr(root, treatment, attributes, fieldcounter, fieldname, icdattrvalue, investigationoption) + "\"" + " name=" + "\"" + _construct_checkbox_name_attr(root, treatment, attributes, fieldcounter, fieldname, investigationoption) + "\"" + " type=" + "\""  + inputtype  + "\"" + " value=" + "\"" + icdattrvalue + "\"" + " >");
  return text_checkbox_field_contructor_html;
}

function _construct_checkbox_id_attr(root, treatment, attributes, fieldcounter, fieldname, icdattrvalue, investigationoption) {
  var construct_checkbox_id_attr_html =  root + UNDERSCORE + treatment + UNDERSCORE + attributes +  UNDERSCORE + fieldcounter + UNDERSCORE + investigationoption + UNDERSCORE + COLLECTION + UNDERSCORE + icdattrvalue;
  return construct_checkbox_id_attr_html;
}

function _construct_checkbox_name_attr(root, treatment, attributes, fieldcounter, fieldname, investigationoption) {
  var construct_checkbox_name_attr_html =  root + SQUAREOPEN + treatment + UNDERSCORE + attributes +  SQUARECLOSE + SQUAREOPEN + fieldcounter + SQUARECLOSE + SQUAREOPEN + investigationoption + UNDERSCORE + COLLECTION + SQUARECLOSE + SQUAREOPEN + SQUARECLOSE;
  return construct_checkbox_name_attr_html;
}

function _text_checkbox_hidden_field_contructor(fieldtype, fieldcounter, root, treatment, attributes, inputtype, fieldname, investigationoption) {
  var text_checkbox_hidden_field_contructor_html = jQuery("<" + fieldtype  + " name=" + "\"" + _construct_checkbox_name_attr(root, treatment, attributes, fieldcounter, fieldname, investigationoption) + "\"" + " type=" + "\""  + inputtype  + "\"" + " value=" + "\"" + " " + "\"" + " >");
  return text_checkbox_hidden_field_contructor_html;
}

function _remove_fieldname_from_id(idfield) {
  var underscore_position = idfield.lastIndexOf('_');
  var remove_fieldname_from_id = idfield.substring(0, underscore_position + 1);
  return remove_fieldname_from_id;
}

function _add_button_field_contructor(buttonclassattr, fieldcounter) {
  var add_button_field_html = jQuery("<a id=" + "\"" + buttonclassattr + fieldcounter + "\"" + " class=" + "\"" + "btn btn-xs btn-primary btn-square" + "\"" + " href=" + "\"" + "javascript:;" + "\"" + " name=" + "\"" +  buttonclassattr + "\"" + ">" + "<span class=" + "\"" + "glyphicon glyphicon-plus-sign" + "\"" + "></span></a>");
  return add_button_field_html;
}

function _remove_button_field_contructor(buttonclassattr, fieldcounter) {
  var remove_button_field_html = jQuery("<a id=" + "\"" + buttonclassattr + fieldcounter + "\"" + " class=" + "\"" + "btn btn-xs btn-primary btn-danger" + "\"" + " href=" + "\"" + "javascript:;" + "\"" + " name=" + "\"" +  buttonclassattr + "\"" + ">" + "<span class=" + "\"" + "glyphicon glyphicon-remove" + "\"" + "></span></a>");
  return remove_button_field_html;
}

function _text_options_array_each_iterator(array) {
  var options_label;
  jQuery.each(array, function(label, value) {
  options_label = _options_for_text_field_custom_data_attr(label, value);
  });
  return options_label;
}

function _options_for_text_field_custom_data_attr(label, value) {
  var label_icd;
  var value_icd_array = [];
  if (jQuery.isPlainObject(value)) {
    jQuery.each(value, function(label_a, value_a) {
      label_icd = label_a;
    });
  } else {
    label_icd = label;
  }
  return label_icd;
}

function _checkbox_options_array_each_iterator_attributes(array, fieldtype, classattr, fieldcounter, root, treatment, attributes, inputtype, fieldname, investigationoption) {
  var checkboxoption;
  checkboxoption = _label_checkbox_field_contructor().append([_text_checkbox_field_contructor(fieldtype, classattr, fieldcounter, root, treatment, attributes, inputtype, fieldname, array[1], investigationoption)], array[0]);
  return checkboxoption;
}

function _checkbox_options_array_each_iterator(array, fieldtype, classattr, fieldcounter, root, treatment, attributes, inputtype, fieldname, investigationoption) {
    var options_array = [];
    var counter = 0;
    jQuery.each(array, function(label, value) {
    options_array[counter] = _label_checkbox_field_contructor().append([_text_checkbox_field_contructor(fieldtype, classattr, fieldcounter, root, treatment, attributes, inputtype, fieldname, _text_options_array_each_iterator(value), investigationoption), _text_options_array_each_iterator(value)]);
    counter++;
    });
    return options_array;
}

function _select_options_array_each_iterator(array) {
    var options_array = [];
    var counter = 0;
    options_array[0] = jQuery("<option value=\" \"></option>");
    jQuery.each(array, function(label, value) {
    options_array[counter + 1] = _options_for_select_field_custom_data_attr(label, value);
    counter++;
    });
    return options_array;
}

function _select_noblank_options_array_each_iterator(array) {
    var options_array = [];
    var counter = 0;
    jQuery.each(array, function(label, value) {
        options_array[counter] = _options_for_select_field_custom_data_attr(label, value);
        counter++;
    });
    return options_array;
}

function _icd_select_options_array_each_iterator(array) {
    var options_array = [];
    var counter = 0;
    options_array[0] = jQuery("<option value=\" \"></option>");
    jQuery.each(array, function(label, value) {
        options_array[counter + 1] = _icd_options_for_select_field_custom_data_attr(label, value);
        counter++;
    });
    return options_array;
}

function _icd_options_for_select_field_custom_data_attr(label, value) {
    var label_icd;
    var value_icd_array = [];
    if (jQuery.isPlainObject(value)) {
        jQuery.each(value, function(label_a, value_a) {
            label_icd = label_a;
            value_icd_array = value_a.split(DOUBLEHASH);
        });
    } else {
        label_icd = label;
        value_icd_array = value.split(DOUBLEHASH);
    }
    var option = jQuery("<option data-icd-value=" + "\"" + value_icd_array[0] + "\"" + " value=" + "\"" + value_icd_array[1] + "\"" + " >" + label_icd + "</option>");
    return option;
}

function _options_for_select_field_custom_data_attr(label, value) {
    var label_data;
    var value_array = [];
    if (jQuery.isPlainObject(value)) {
    jQuery.each(value, function(label_a, value_a) {
        label_data = label_a;
        value_array = value_a.split(DOUBLEHASH);
    });
    } else {
        label_data = label;
        value_array = value.split(DOUBLEHASH);
    }
    var option = jQuery("<option data-value=" + "\"" + value_array[0] + "\"" + " value=" + "\"" + value_array[1] + "\"" + " >" + label_data + "</option>");
    return option;
}

function _options_for_select_field_no_data_attr(label, value) {
  if (value==40638003){
    flag = "selected"
  }
  else {
    flag = ""
  }
    var value_array = value.split(DOUBLEHASH);
    var option = jQuery("<option data-laterality=" + "\"" + label + "\"" + " value=" + "\"" + value_array[0] + "\""+flag+">" + label + "</option>");
    return option;
}

function _split_underscore_from_id_attr(id, splitposition) {
    return id.split("_")[splitposition];
    }

function _split_anything_from_id_attr(id, splitstring, splitposition) {
    return id.split(splitstring)[splitposition];
    }

function _split_anything_from_id_attr_to_array(id, splitstring) {
    return id.split(splitstring);
    }

function _text_field_contructor(fieldtype, classattr, idattr, fieldname, inputtype, icdattrvalue) {
    var text_field_contructor_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr  + "\""  + " id=" + "\"" + _construct_id_attr(idattr, fieldname) + "\"" + " name=" + "\"" + _construct_name_attr(idattr, fieldname) + "\"" + " type=" + "\""  + inputtype  + "\"" + " value=" + "\""  + icdattrvalue  + "\""  + " >");
    return text_field_contructor_html;
    }

function _select_field_contructor(fieldtype, classattr, idattr, fieldname) {
    var select_field_contructor_html = jQuery("<" + fieldtype  + " class=" + "\""  + classattr  + "\""  + " id=" + "\"" + _construct_id_attr(idattr, fieldname) + "\"" + " name=" + "\"" + _construct_name_attr(idattr, fieldname) + "\"" + " >");
    return select_field_contructor_html;
    }

function _construct_name_attr(idattr, fieldname) {
    var construct_name_attr_array = _split_anything_from_id_attr_to_array(idattr, UNDERSCORE);
    var construct_name_attr =  construct_name_attr_array[0] + SQUAREOPEN + construct_name_attr_array[1] + UNDERSCORE + construct_name_attr_array[2] + SQUARECLOSE + SQUAREOPEN + construct_name_attr_array[3] + SQUARECLOSE + SQUAREOPEN + fieldname + SQUARECLOSE;
    return construct_name_attr;
    }

function _construct_id_attr(idattr, fieldname) {
    var construct_id_attr_array = _split_anything_from_id_attr_to_array(idattr, UNDERSCORE);
    var construct_id_attr =  construct_id_attr_array[0] + UNDERSCORE + construct_id_attr_array[1] + UNDERSCORE + construct_id_attr_array[2] + UNDERSCORE + construct_id_attr_array[3] + UNDERSCORE + fieldname;
    return construct_id_attr;
    }

function _construct_class_attr(classattr, fieldname) {

}

function _json_stringify(data) {
    return JSON.stringify(data);
}

function _jquery_ajax_get_no_params_config(url, callbackfn, config) {
    jQuery.ajax({
        type: "GET",
        url: url,
        data: {remote: "true" }
    }).done(function(data) {
        window[callbackfn](data, config);
    });
}

function _jquery_ajax_get_no_params_no_config(url, callbackfn) {
    jQuery.ajax({
        type: "GET",
        url: url,
        data: {remote: "true" }
    }).done(function(data) {
        window[callbackfn](data);
    });
}

function _jquery_ajax_get_params_config(url, params, callbackfn, config) {
    jQuery.ajax({
        type: "GET",
        url: url,
        data: {ajax: params, remote: "true" }
    }).done(function(data) {
        window[callbackfn](data, config);
    });
}

function _jquery_ajax_get_params_config_noasync(url, params, callbackfn, config) {
    jQuery.ajax({
        type: "GET",
        url: url,
        data: {ajax: params, remote: "true" },
        async: false
    }).done(function(data) {
        window[callbackfn](data, config);
    });
}

function _jquery_ajax_get_params_no_config(url, params, callbackfn) {
    jQuery.ajax({
        type: "GET",
        url: url,
        data: {ajax: params, remote: "true" }
    }).done(function(data) {
        window[callbackfn](data);
    });
}

function _jquery_ajax_get_params_no_data_return(url, params) {
    jQuery.ajax({
        type: "GET",
        url: url,
        data: {ajax: params, remote: "true" }
    });
    }

function _jquery_ajax_get_params_no_config_function_call(url, params, callbackfn, functionname) {
    jQuery.ajax({
        type: "GET",
        url: url,
        data: {ajax: params, remote: "true" }
    }).done(function(data) {
        window[callbackfn](data, functionname);
    });
}

function _jquery_ajax_post_no_params(url, callbackfn) {
}

function _jquery_ajax_post_params(url, params, callbackfn) {
}

function _add_button_at_last() {
  $('.medication_set_body').find('.add-new-btn').addClass("hidden")
  $('.medication_set_body').find('.add-new-btn').last().removeClass("hidden")
}

function _renumber_id_after_remove(added, removed) {
  var counter = 0;
  $(added).find("tr").each(function() {
    $(this).find(".procedurestage").each(function(index, element) {
      var forattr,idattr;
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      forattr = element.id
      $("#"+forattr).siblings("label").attr("for",idattr)
    });
    $(this).find(".investigationstage").each(function(index, element) {
      var forattr,idattr;
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      forattr = element.id
      $("#"+forattr).siblings("label").attr("for",idattr)
    });
    $(this).find("input").each(function(index, element) {
      var nameattr, idattr;
      nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      $(this).attr('name', nameattr);
      $(this).attr('id', idattr);
    });
    $(this).find("select").each(function(index, element) {
      var nameattr, idattr;
      nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      $(this).attr('name', nameattr);
      $(this).attr('id', idattr);
    });
    $(this).find("a").each(function(index, element) {
      var idattr;
      idattr = element.id.replace(/[0-9]/g, counter);
      $(this).attr('id', idattr);
    });
    $(this).find("*").each(function(index, element) {
      var idattr;
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      $(this).attr('id', idattr);
    });
    counter++;
  });

  $(removed).find("tr").each(function() {
    $(this).find("input").each(function(index, element) {
      var nameattr, idattr;
      nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      $(this).attr('name', nameattr);
      $(this).attr('id', idattr);
    });
    $(this).find("select").each(function(index, element) {
      var nameattr, idattr;
      nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      $(this).attr('name', nameattr);
      $(this).attr('id', idattr);
    });
    $(this).find("a").each(function(index, element) {
      var idattr;
      idattr = element.id.replace(/[0-9]/g, counter);
      $(this).attr('id', idattr);
    });
    $(this).find("*").each(function(index, element) {
      var idattr;
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      $(this).attr('id', idattr);
    });
    counter++;
  });
  _add_button_at_last();
}
_add_button_at_last();

// function manage_diagnosis_comments() {
//   if($('.diagnosis-added > tr').length == 0) {
//     $('#opdrecord_diagnosiscomments').val('');
//     $('#div_diagnosis_comments').hide();
//   } else {
//     $('#div_diagnosis_comments').show();
//   }
// }