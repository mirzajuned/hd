// Set Form Height
function resize_appointment_form() {
  <% if (@type == "appointment" && params[:action] == 'new') %>
    window_height = ($(window).height()*1/3) - 110
  <% else %>
    window_height = $(window).height() - 230
  <% end %>

  $(".appointment-form-body").css('height', window_height + "px").css('overflow', 'scroll')
}

resize_appointment_form()
$(window).resize(function() {
  resize_appointment_form()
})

// Appointment DateTime Picker


var datepicker_options = {
  minDate: new Date(),
  dateFormat: "dd/mm/yy"
}
function enabled_disable_date_time(){
  if($('#appointmenttype_walkin').is(':checked') ){
    $('.appointment-timepicker').val('<%= Time.current.strftime("%I:%M %p") %>')
    $('.appointment-datepicker').val('<%= Date.current.strftime("%d/%m/%Y") %>').change();
    $("#appointment_time").addClass('disable_date_time')
    $("#appointment_appointmentdate").addClass('disable_date_time')
  }
  else if (<%= @organisation_setting.try(:time_slots_enabled) && @type == 'appointment' %>){
    doctor_id = $('#appointment_consultant_id').val();
    facility_id = $("#appointment_facility_id").val();
    department_id = '485396012'
    $.ajax({
      type: 'GET',
      dataType: 'json',
      url: "/opd_appointments/user_time_slot_check",
      data: { doctor_id, facility_id, department_id },
      success: function(response) {
        if (response) {
          $(".appointment-datepicker").datepicker("disable");
          if (<%= params[:action] == 'new' %>){
            $('.appointment-timepicker').val('')
            $('.appointment-datepicker').val('')
          }
          $('.appointment-timepicker').attr('disabled','disabled')
        } else {
          $(".appointment-datepicker").datepicker("enable");
          $('.appointment-datepicker').datepicker({minDate: new Date(), dateFormat: "dd/mm/yy"});
          $('.appointment-timepicker').removeAttr("disabled");
          $('.appointment-timepicker').timepicker();
          $('.appointment-timepicker').val('<%= Time.current.strftime("%I:%M %p") %>');
          $("#appointment_time").removeClass('disable_date_time')
          $("#appointment_appointmentdate").removeClass('disable_date_time');
        }
        appointment_page();
      }
    });
  }
  else {
    $(".appointment-datepicker").datepicker("enable");
    $('.appointment-datepicker').datepicker({minDate: new Date(),dateFormat: "dd/mm/yy"});
    $('.appointment-timepicker').removeAttr("disabled");
    $('.appointment-timepicker').timepicker();
    $('.appointment-timepicker').val('<%= Time.current.strftime("%I:%M %p") %>');
    $("#appointment_time").removeClass('disable_date_time')
    $("#appointment_appointmentdate").removeClass('disable_date_time');
  }
}


// This Code to Set Date for Time as Date Selected
$(".appointment-datepicker").on('change', function(){
  var timestamp = $(this).val() + " " + $(".appointment-timepicker").val()
  $("#appointment_start_time").attr("value", timestamp)
  available_slot()
}).trigger('change')

$(".appointment_doctor").on('change', function(){
  available_slot()
})

$(".appointment-timepicker").on('change', function(){
  var timestamp = $(".appointment-datepicker").val() + " " + $(this).val()
  $("#appointment_start_time").attr("value", timestamp)
}).trigger('change')

<% if @appointment_list_view && @appointment_list_view.try(:current_state) != "Scheduled" || @appointment.opd_record_count > 0 %>
  $(".appointment-datepicker").attr('disabled','disabled')
  $(".appointment-timepicker").attr('disabled','disabled')
  $("#appointment_facility_id").attr('disabled','disabled')
  $("#appointment_consultant_id").attr('disabled','disabled')
  $("#appointment_specialty_id").attr('disabled','disabled')
  if(<%=@organisation_setting.try(:disable_visit_fields) == true%>){
    $("#appointment_appointment_type_id").attr('disabled','disabled');
    $("#appointment_appointment_category_id").attr('disabled','disabled');
  } else {
    $("#appointment_appointment_type_id").removeAttr('disabled');
    $("#appointment_appointment_category_id").removeAttr('disabled');
  }

<% else %>
  enabled_disable_date_time()

  $("input[name='appointment[appointmenttype]']").on('change', function() {
    enabled_disable_date_time()
  });
<% end %>

// Change specialties onChange Facility
$("#appointment_facility_id").on('change', function(){
  var facility_id = $(this).val();
  get_facility_specialties(facility_id)
  appointment_page()
})

// to get doctors only when specialty dropdown changes
$("#appointment_specialty_id").on('change', function(){
  var facility_id = $("#appointment_facility_id").val();
  var specialty_id = $(this).val()

  set_case_sheet_id(specialty_id)
  get_specialty_users(facility_id, specialty_id)
  get_appointment_types_for_facility(true, facility_id, specialty_id)
  get_organisation_sub_appointment_types(specialty_id)
})

function toggle_specialty_dropdown(){
  if($('#appointment_specialty_id').find('option').length === 1){
   $(".specialty_dropdown_div").hide();
  } else {
    $(".specialty_dropdown_div").show();
  }
}
toggle_specialty_dropdown();

function get_facility_specialties(facility_id){
  $.ajax({
    type: "GET",
    dataType: "json",
    url: "/appointments/get_facility_specialties",
    data: {facility_id: facility_id},
    success: function(response){

      $('#appointment_specialty_id').children().remove();
      $('#appointment_consultant_id').children().remove();
      $(".appointment_types_dropdown").children().remove();
      $('.appointment_category_dropdown').children().remove();

      if (response.length == 0){
        $('#appointment_specialty_id').append($("<option></option>").attr("value","").text("No Specialty Available")).trigger('change.select2');
        $('#appointment_consultant_id').append($("<option></option>").attr("value","").text("No Consultant Available for this specialty")).trigger('change.select2');
        $('.appointment_types_dropdown').append($("<option></option>").attr("value","").text("No Appointment Type available for this Specialty")).trigger('change.select2');
        $('.appointment_category_dropdown').append($("<option></option>").attr("value","").text("No Appointment Type available for this Specialty")).trigger('change.select2');
      } else {
        $.each(response, function(key, value) {
          $('#appointment_specialty_id').append($("<option></option>").attr("value", value["_id"]).text(value["name"])).trigger('change.select2');
        });

        $('#appointment_specialty_id').siblings(".select2").children().children().css("background-color",'rgb(247, 232, 225)')
        setTimeout(function(argument) {
          $('#appointment_specialty_id').siblings(".select2").children().children().css("background-color",'')
        }, 300)

        var specialty_id = $('#appointment_specialty_id').val()
        get_specialty_users(facility_id, specialty_id)
        get_appointment_types_for_facility(true, facility_id, specialty_id)
        get_organisation_sub_appointment_types(specialty_id)
      }

      toggle_specialty_dropdown();
    }
  })
}

function get_specialty_users(facility_id, specialty_id){
  $.ajax({
    type: "GET",
    dataType: "json",
    url: "/appointments/get_users_from_specialty",
    data: { facility_id: facility_id, specialty_id: specialty_id },
    success: function(response){
      $('#appointment_consultant_id').children().remove();
      if (response.length == 0){
        $('#appointment_consultant_id').append($("<option></option>").attr("value","").text("No Consultant Available for this specialty")).trigger('change.select2');
      } else{
        $.each(response, function(key, value) {
          if(value[3] == undefined){
            text_value = value[0]
          } else {
            text_value = value[0] + " | " + value[3]
          }
          $('#appointment_consultant_id').append($("<option></option>").attr("value",value[1]).text(text_value).attr('data-slot-duration', value[2])).trigger('change.select2');
        });
      }
      $('#appointment_consultant_id').siblings(".select2").children().children().css("background-color",'rgb(247, 232, 225)')
      setTimeout(function(argument) {
        $('#appointment_consultant_id').siblings(".select2").children().children().css("background-color",'')
      }, 300)

      $('#appointment_consultant_id').trigger('change');
      $("#patient_referral_type_referral_type_id").trigger('change')
    }
  });
}

function get_appointment_types_for_facility(triggered, facility_id, specialty_id){
  var appointment_type_id = $("#hidden_appointment_type").val();
  $.ajax({
    type: "GET",
    dataType: "json",
    url: "/appointments/get_appointment_types_from_facility",
    data: { facility_id: facility_id, specialty_id: specialty_id },

    success: function(response){
      $(".appointment_types_dropdown").children().remove();

      if (response.length == 0){
        $('.appointment_types_dropdown').append($("<option></option>").attr("value","").text("No Appointment Type available for this Specialty")).trigger('change.select2');
      }else{

        var default_type = ''
        $.each(response, function(key, value) {
          $(".appointment_types_dropdown").append('<option value='+value[1]+'>'+ value[0] +' </option>').trigger('change.select2');
          if (value[2] == true) { default_type = value[1]; }
        });

        $('.appointment_types_dropdown').val(appointment_type_id).trigger('change.select2')
        if ($('.appointment_types_dropdown').val() == null){ $('.appointment_types_dropdown').val(default_type).trigger('change.select2') }

        // only for change color when any change occurs
        $('.appointment_types_dropdown').siblings(".select2").children().children().css("background-color",'rgb(247, 232, 225)')
        setTimeout(function(argument) {
          $('.appointment_types_dropdown').siblings(".select2").children().children().css("background-color",'')
        }, 300)

        if(triggered != true){
          available_slot()
        }
      }

      $('[data-toggle="tooltip"]').tooltip();
    }
  })
}

$('.appointment_types_dropdown').on('change', function () {
  var specialty_id = $('#appointment_specialty_id').val()
  get_organisation_sub_appointment_types(specialty_id)
})



function get_organisation_sub_appointment_types(specialty_id){
  var appointment_type_id = $(".appointment_types_dropdown").val();
  $.ajax({
    type: "GET",
    dataType: "json",
    url: "/appointments/get_organisation_sub_appointment_types",
    data: { specialty_id: specialty_id, appointment_type_id: appointment_type_id },
    success: function(response){
      $('.appointment_category_dropdown').children().remove();

      if (response.length == 0){
        $('.appointment_category_dropdown').append($("<option></option>").attr("value","").text("No Sub Appointment Types Available"));
        $('.appointment_category_dropdown').trigger('change.select2');
      }else{
        $.each(response, function(key, value) {
          if(value[2] == undefined){
            text_value = value[0]
          } else {
            text_value = value[0] + " | " + value[2]
          }
          $('.appointment_category_dropdown').append($("<option></option>").attr("value",value[1]).text(text_value)).trigger('change.select2');
        });
      }

      $('.appointment_category_dropdown').siblings(".select2").children().children().css("background-color",'rgb(247, 232, 225)')
      setTimeout(function(argument) {
        $('.appointment_category_dropdown').siblings(".select2").children().children().css("background-color",'')
      }, 300)
    }
  });
}

function set_case_sheet_id(specialty_id) {
  case_sheets_ids = <%= raw @case_sheets.pluck(:id).to_json.html_safe %>;
  case_sheets_specialty_ids = <%= raw @case_sheets.pluck(:specialty_id) %>;

  if(case_sheets_specialty_ids.indexOf(specialty_id) > -1){
    specialty_id_index = case_sheets_specialty_ids.indexOf(specialty_id)
    var case_sheets_found = case_sheets_ids[specialty_id_index]
    $('#appointment_case_sheet_id').val(case_sheets_found)
  } else {
    $('#appointment_case_sheet_id').val('')
  }
}

// Referral/Sub Referral Select2
$("#patient_referral_type_referral_type_id").select2()
$("#patient_referral_type_sub_referral_type_id").select2()

// Get SubReferralType from ReferralType
$("#patient_referral_type_referral_type_id").on('change', function(){
  var referral_type_id = $(this).val()
  if($(this).val() == "FS-RT-0004"){
    change_relative_referral_type()
  } else if($(this).val() == "FS-RT-0001"){
    change_self_referral_type()
  } else {
    change_sub_referral_type(referral_type_id)
  }
}).trigger('change')

// Add SubReferralType
$("#btn-add-sub-referral-type").on('click', function(e){
  e.preventDefault();
  var referral_type_id = $("#patient_referral_type_referral_type_id").val();
  if(referral_type_id != ""){
    $.ajax({
      dataType: "script",
      type : 'get',
      url: '/sub_referral_types/new',
      data: { referral_type_id: referral_type_id, location: 'appointment', flag: 'form' },
      success: function(response) {
        $("#referral-modal").modal('show')
      },
      error: function(response) {
      }
    });
  }
})

// Update SubReferralType
function change_sub_referral_type(referral_type_id){
  // Initialize SubReferralType
  $("#btn-add-sub-referral-type").show() // Remove Add Button
  $("#patient_referral_form").html("") // Clear Relative Referral Form

  var referral_type_id = referral_type_id
  var facility_id = $('#appointment_facility_id').val()
  var sub_referral_type = $('#patient_referral_type_sub_referral_type_id')

  if(referral_type_id != ""){
    $(".sub-referral-types-section").show() // Show Sub Referral Dropdown
    $.ajax({
      dataType: "json",
      type : 'get',
      url: '/referral_types/sub_referral_type',
      data: { referral_type_id: referral_type_id, facility_id: facility_id },
      success: function(response) {
        var existing_referral = $('#sub_referral').attr('data-value-id')

        $(sub_referral_type).children().remove();
        $(sub_referral_type).append($("<option></option>").attr("value",'').text('Select'));
        $.each(response.sub_referral_type, function(key, value) {
          if(existing_referral == value[1]){
            $(sub_referral_type).append($("<option selected='selected'></option>").attr("value",value[1]).text(value[0]))
          } else {
            $(sub_referral_type).append($("<option></option>").attr("value",value[1]).text(value[0]))
          }
        });
        $("#btn-add-sub-referral-type").show()

        $(sub_referral_type).trigger('change') // For Select2
      },
      error: function(response) {}
    });
  } else {
    $("#btn-add-sub-referral-type").hide() // Hide Add Sub Referral Button
    $(".sub-referral-types-section").hide() // Hide Sub Referral Dropdown

    $(sub_referral_type).trigger('change') // For Select2
  }
}

// Form Relative ReferralType
function change_relative_referral_type(){
  $(".sub-referral-types-section").hide()
  $("#btn-add-sub-referral-type").hide()
  $("#patient_referral_form").html("<%= escape_javascript(render 'appointments/form/relative_referral_form.html.erb') %>")
}

function change_self_referral_type(){
  $(".sub-referral-types-section").hide()
  $("#btn-add-sub-referral-type").hide()
  $("#patient_self_referral_form").html()
  $("#patient_referral_form").html("<%= escape_javascript(render 'appointments/form/self_referral_form.html.erb') %>")
}

// Available Slots
function available_slot(){
  $.ajax({
    type: "GET",
    dataType: "script",
    url: "/appointments/get_available_slots",
    data: {
      facility_id: $("#appointment_facility_id").val(),
      specialty_id: $("#appointment_specialty_id").val(),
      doctor_id: $("#appointment_consultant_id").val(),
      current_date: $(".appointment-datepicker").val()
    }
  })
}

const country_id = "<%= current_facility.country_id %>"
// Validate Form
function appointment_page() {
  $(".patient-details").trigger('click')
  $('#appointment_appointmentdate').removeAttr("disabled");

  $(".appointment-form").validate({
    rules: {
      "patient[fullname]": {
        required: true,
        noSpace: true
      },
      "patient[firstname]": {
        required: true,
        noSpace: true
      },
      "patient[mobilenumber]": {
        required: true,
        number: true,
        noSpace: true
      },
      "appointment[appointmentdate]": {
        required: true
      },
      "appointment_time": {
        required: true
      },
      "patient_other_identifier[mr_no]": {
        remote: "/patients/check_mrn?existing_mrn=<%= @patient.try(:patient_mrn) %>"
      },
      "patient[city]": {
        minlength: 3,
        remote: "/locations/check_city?country_id=" + country_id
      },
      "patient[state]": {
        minlength: 3,
        remote: "/locations/check_state?country_id=" + country_id
      },
      "patient[pincode]": {
        minlength: 3,
        remote: "/locations/check_pincode?country_id=" + country_id
      },
      "patient[commune]": {
        minlength: 3,
        remote: "/locations/check_commune?country_id=" + country_id
      },
      "patient[district]": {
        minlength: 3,
        remote: "/locations/check_district?country_id=" + country_id
      },
      "patient[email]": {
        mymail: true
      },
      "sub_referral_type[name]": {
        required: true
      },
      "patient_referral_type[sub_referral_type_id]": {
        required: true
      },
      "appointment[facility_id]": {
        required: true,
      },
      "appointment[consultant_id]": {
        required: true,
      },
      "appointment[appointment_type_id]": {
        required: true
      },
      "appointment[specialty_id]":{
        required: true
      },
      "patient[email]": {
        mymail: true
      }
    },
    messages: {
      "patient[fullname]": {
        required: "Full Name is Required."
      },
      "patient[firstname]": {
        required: "First Name is Required."
      },
      "patient[mobilenumber]": {
        required: "Number is Required",
      },
      "appointment[appointmentdate]": {
        required: "Appointment Date is Required"
      },
      "appointment_time": {
        required: "Appointment Time is Required"
      },
      "patient_other_identifier[mr_no]": {
        remote: "MRN Already Taken",
      },
      "patient[city]": {
        remote: "Select from List"
      },
      "patient[state]": {
        remote: "Select form List"
      },
      "patient[pincode]": {
        remote: "Select from List"
      },
      "patient[commune]": {
        remote: "Select from List"
      },
      "patient[district]": {
        remote: "Select from List"
      },
      "appointment[facility_id]": {
        required: " - Location is Required",
      },
      "appointment[consultant_id]": {
        required: " - Consultant_ is Required",
      },
      "appointment[appointment_type_id]": {
        required: " - Appointment Type is Required",
      },
      "sub_referral_type[name]": {
        required: "Name is Required"
      },
      "patient_referral_type[sub_referral_type_id]": {
        required: "Sub Referral Type is Required"
      },
      "appointment[specialty_id]":{
        required: "Any Specialty Required"
      }
    },
    errorPlacement: function (error, element) {
      var name = $(element).attr('name')
      if((name == "patient[firstname]") || (name == "patient[mobilenumber]")) {
        $(".required-message").find('b').css('text-shadow','red 0px 0px 10px').css('color','#333')
      } else if(name == "patient[gender]") {
        $(".patient-gender").siblings("label").css('text-shadow','red 0px 0px 10px')
      } else if(name == "patient[dob]") {
        $(".dob-error-message").text('Invalid Format.').css('text-shadow','red 0px 0px 10px')
      } else if(name == 'patient_referral_type[sub_referral_type_id]') {
        $(".sub-referral-types-section").append(error)
      } else if((name == "patient[pincode]") || (name == "patient[state]") || (name == "patient[city]") || (name == "patient[commune]") || (name == "patient[district]")) {
        $(".patient_address_label").find('b').css('text-shadow','red 0px 0px 10px');
      } else if($(element).hasClass("select2-hidden-accessible")) {
        element = $("#select2-" + $(element).attr("id") + "-container").parent();
        error.insertAfter(element);
      }
    }
  });

  jQuery.validator.addMethod("noSpace", function(value, element) {
    return value == '' || value.trim().length != 0;
  });

  jQuery.validator.addMethod("validDate", function(value, element) {
    return value == '' || moment(value, 'DD/MM/YYYY', true).isValid();
  });

  jQuery.validator.addMethod("mymail", function(value, element) {
    return this.optional( element ) || /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test( value );
  }, "Enter valid email!");

  $.validator.addClassRules("patient-dob", { validDate: true });
  $.validator.addClassRules("appointment-timepicker", { required: true });
  $.validator.addClassRules("appointment-datepicker", { required: true });

  var validationArray = <%= raw @organisation_setting.try(:validate_patient) || [] %>;

  for(let field of validationArray){
    $.validator.addClassRules(`${field}`, { required: true });
  }
}
appointment_page()


function auto_gender_selection() {
  $('#patient_salutation').on('change', function(){
    patient_salutation = $(this).val()
    male_array = ['Mr.', 'Mst.']
    female_array = ['Ms.', 'Mrs.']
    if(jQuery.inArray(patient_salutation, male_array) !== -1) {
      $('#gender_male').prop("checked", true)
    } else if (jQuery.inArray(patient_salutation, female_array) !== -1) {
      $('#gender_female').prop("checked", true)
    }
  })
}
auto_gender_selection()