$(document).ready(function(){
  var delete_service_array = []
  var delete_item_array = []
  // Add New Service
  $("#add_service_insurance").on('click', function(e){
    e.preventDefault()
    var service_row_count = $('#services_items').children().length
    $("#services_items").append('<div class="service_row_count mb5 mt5" title="'+ service_row_count +'"><div class="row service_row mb10"><div class="col-md-3"><select class="form-control service_name" name="invoice_insurance[services]['+ service_row_count +'][name]"><% @invoiceservicecard.where(card_deleted: false).each do |servicecard| %><% if servicecard.invoice_item_card.count > 0 %><option value="<%= servicecard.id.to_s %>"><%= servicecard.service_name %></option><% end %><% end %></select></div><div class="col-md-4"><button class="btn btn-primary btn-xs add_service_item" style="padding:0 5px; margin-top:3px;"><i class="fa fa-plus"></i> New Item</button></div><div class="col-md-3"><input style="padding:5px 10px;" class="form-control service_total" placeholder="Service Total" type="text" name="invoice_insurance[services]['+ service_row_count +'][service_total]" readonly="readonly"></div><div class="col-md-2 text-right"><button class="btn btn-danger btn-xs remove_service_item" style="padding:0 5px; margin-top:3px;"><i class="fa fa-trash-alt"></i> Remove Service</button></div></div><div class="service_item_row_count mb10" id="service_item_row"></div></div>');
    
    // Create Hook To Add Item Button Of The Newly Created Service
    $("#services_items").find(".service_row_count").last().find(".add_service_item").on('click', function(e){
      e.preventDefault();
      var service_row_counting = parseFloat($(this).closest(".service_row_count").attr('title'))
      var item_row_count = $(this).closest('.service_row_count').children(".service_item_row_count").children().length
      $(this).closest('.service_row_count').find(".service_item_row_count").append('<div class="invoice_service_item_row row mt5" id="invoice_service_item_row"><div class="col-md-1 field_for_date"><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][item_entry_date]" style="padding:5px 10px;" class="form-control i_item_entry_date" type="hidden" value="<%= Time.current %>"></div><div class="col-md-3 field_for_description"><select class="form-control i_description" name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][description]"></select></div><div class="col-md-2 field_for_quantity"><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][quantity]" style="padding: 5px 10px;" class="form-control i_quantity" placeholder="Quantity" maxlength="4" value="1" type="text"></div><div class="col-md-2 field_for_unit_price"><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][unit_price]" style="padding: 5px 10px;" class="form-control i_unit_price" placeholder="Unit Price" maxlength="12" type="text"></div><div class="col-md-2 field_for_price"><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][price]" style="padding: 5px 10px;" class="form-control i_price" placeholder="Total" readonly="readonly" type="text"></div><div class="col-md-2"><button class="btn btn-danger btn-xs remove_item" style="padding:0 5px; margin-top:3px;"><i class="fa fa-trash-alt"></i> Remove Item</button></div><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][patient_payed]" style="padding:5px 10px;" class="form-control i_patient_payed text-right" value= "No" placeholder="Total" readonly="readonly" type="hidden"></div>');
      $(this).closest('.service_row_count').find(".service_item_row_count").find('.i_description').select2();
      // Calculation For Item Total
      my_el = $(this).closest(".service_row_count").find(".invoice_service_item_row")
      calculate_item_total(my_el);

      // Create Hook To Remove Item Button Of The Newly Created Item
      $("#services_items").find(".service_row_count").find('.invoice_service_item_row').last().find(".remove_item").on('click',function(e){
        e.preventDefault();
        // $(this).closest(".invoice_service_item_row").remove();
        target = $(this).closest('.service_item_row_count');
        delete_item_array.push($(this).closest(".invoice_service_item_row").find(".i_id").val())
        $("#deleted-items").val(delete_item_array)
        $(this).closest(".invoice_service_item_row").remove();
        calculation_invoice_total(target);

        // Reset Counter Logic
        remove_reset_logic();
      });

      get_item_card_details($("#services_items").find(".service_row_count").find('.invoice_service_item_row').last().find(".i_description"));

      create_item_dropdown(this);

    });
    $("#services_items").find('.service_name').select2()

    // Create Hook To Remove Service Button Of The Newly Created Service
    $("#services_items").find(".service_row_count").last().find(".remove_service_item").on('click', function(e){
      e.preventDefault();
      delete_service_array.push($(this).closest(".service_row_count").find(".service_id").val())
      $("#deleted-services").val(delete_service_array)
      $(this).closest(".service_row_count").remove();
      target = $(".service_row_count")
      calculation_invoice_total(target);
      // Reset Name Counter Attribute For Service
      remove_reset_logic();
      
    });

    $("#services_items").find(".service_name").last().on('change', function(){
      var service_id = $(this).val()
      var _this = this 
      $.ajax({
        dataType: "JSON",
        type: "get",
        data: {
          service_id: service_id
        },
        url: '/invoice_item_cards/get_items_for_service',
        success: function(response){
          $(_this).closest('.service_row_count').find('.service_item_row_count').find('.invoice_service_item_row').find('.i_description').children().remove()
          $.each(response.invoice_item_card, function(key, value) {
            if(value[2] === null){
              $(_this).closest('.service_row_count').find('.service_item_row_count').find('.invoice_service_item_row').find('.i_description').append($("<option></option>").attr("value",value[0]).text(value[1]));
            } else {
              $(_this).closest('.service_row_count').find('.service_item_row_count').find('.invoice_service_item_row').find('.i_description').append($("<option></option>").attr("value",value[0]).text(value[1] + ' - ' + value[2]));
            }
          });
          var path = $(_this).closest('.service_row_count').find('.service_item_row_count').find('.invoice_service_item_row')
          for (var i = path.length - 1; i >= 0; i--) {
            $(path[i]).find('.i_description').prepend($('<option selected="selected" disabled="disabled"></option>'))
            $(path[i]).find('.i_description').removeAttr('disabled')
            $(path[i]).find('.i_quantity').val(1)
            $(path[i]).find('.i_unit_price').val("")
            $(path[i]).find('.i_unit_price').trigger('keyup')
            $(path[i]).find('.i_price').val("")
            $(path[i]).find('.select2-selection__rendered').text("").attr('title', '')
          }
        }
      })
    })
  });

  // Add New Service Item For Default Existing Fields
  $(".add_service_item").on('click', function(e){
    e.preventDefault();
    var service_row_counting = parseFloat($(this).closest(".service_row_count").attr('title'))
    var item_row_count = $(this).closest('.service_row_count').children(".service_item_row_count").children().length
    $(this).closest('.service_row_count').children(".service_item_row_count").append('<div class="invoice_service_item_row row mt5" id="invoice_service_item_row"><div class="col-md-1 field_for_date"><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][item_entry_date]" style="padding:5px 10px;" class="form-control i_item_entry_date" type="hidden" value="<%= Time.current %>"></div><div class="col-md-3 field_for_description"><select class="form-control i_description" name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][description]"></select></div><div class="col-md-2 field_for_quantity"><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][quantity]" style="padding: 5px 10px;" class="form-control i_quantity" placeholder="Quantity" maxlength="4" value="1" type="text"></div><div class="col-md-2 field_for_unit_price"><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][unit_price]" style="padding: 5px 10px;" class="form-control i_unit_price" placeholder="Unit Price" maxlength="12" type="text"></div><div class="col-md-2 field_for_price"><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][price]" style="padding: 5px 10px;" class="form-control i_price" placeholder="Total" readonly="readonly" type="text"></div><div class="col-md-2"><button class="btn btn-danger btn-xs remove_item" style="padding:0 5px; margin-top:3px;"><i class="fa fa-trash-alt"></i> Remove Item</button></div><input name="invoice_insurance[services]['+ service_row_counting +'][items]['+ item_row_count +'][patient_payed]" style="padding:5px 10px;" class="form-control i_patient_payed text-right" value= "No" placeholder="Total" readonly="readonly" type="hidden"></div>')
    $(this).closest('.service_row_count').children(".service_item_row_count").find('.i_description').select2();
    // Calculation For Item Total Of Default Existing Fields
    my_el = $(this).closest(".service_row_count").find(".invoice_service_item_row")
    calculate_item_total(my_el);


    // Create Hook To Remove Item Button Of The Newly Created Item
      $("#services_items").find(".service_row_count").find('.invoice_service_item_row').last().find(".remove_item").on('click',function(e){
        e.preventDefault();
        target = $(this).closest('.service_item_row_count');
        delete_item_array.push($(this).closest(".invoice_service_item_row").find(".i_id").val())
        $("#deleted-items").val(delete_item_array)
        $(this).closest(".invoice_service_item_row").remove();
        calculation_invoice_total(target);

        // Reset Counter Logic
        remove_reset_logic();
      });

      get_item_card_details($(this).closest('.service_row').siblings('.service_item_row_count').find('.i_description').last());
      create_item_dropdown(this);
  });


  // Remove Service Item For Default Existing Field
  $(".remove_service_item").on('click', function(e){
    e.preventDefault();
    delete_service_array.push($(this).closest(".service_row_count").find(".service_id").val())
    $("#deleted-services").val(delete_service_array)
    $(this).closest(".service_row_count").remove();
    target = $(".service_row_count")
    calculation_invoice_total(target);
    
    // Reset Name Counter Attribute For Service
    remove_reset_logic();
  });

  // Remove Service Item For Default Existing Field
  $(".remove_item").on('click',function(e){
    e.preventDefault();
    target = $(this).closest('.service_item_row_count');
    delete_item_array.push($(this).closest(".invoice_service_item_row").find(".i_id").val())
    $("#deleted-items").val(delete_item_array)
    $(this).closest(".invoice_service_item_row").remove();
    calculation_invoice_total(target);


    // Reset Counter Logic
    remove_reset_logic();
  });

  // Calculate Item Total For Default Existing Field
  var i_price = 0
  my_el = $(".invoice_service_item_row")
  calculate_item_total(my_el);


  // Net Amount Calculation
  $(".discount_amount").on('keyup',function(){
    if($(this).val().length > 0) {
      var disc = $(this).val()
    } else {
      var disc = 0
    }
    var gross_amount =  $(".invoice_gross_total").val()
    $(".invoice_net_total").val((parseFloat(gross_amount) - parseFloat(disc)).toFixed(2))

    if($(".amount_paid_tpa").val().length > 0) {
      var amount_paid_tpa = $(".amount_paid_tpa").val()
    } else {
      var amount_paid_tpa = 0
    }
    var net_amount =  $(".invoice_net_total").val()
    $(".amount_paid_patient").val((parseFloat(net_amount) - parseFloat(amount_paid_tpa)).toFixed(2))
  });

  $(".amount_paid_tpa").on('keyup',function(){
    if($(this).val().length > 0) {
      var amount_paid_tpa = $(this).val()
    } else {
      var amount_paid_tpa = 0
    }
    var net_amount =  $(".invoice_net_total").val()
    $(".amount_paid_patient").val((parseFloat(net_amount) - parseFloat(amount_paid_tpa)).toFixed(2))
  });

  $("#add_patient_info").on('click', function(e){
    e.preventDefault();
    $("#patient_button").hide();
    $(".patient_info_partial").show();
  })


  // Function For Calculating Item Total
  function calculate_item_total(el) {
    $(el).find(".i_unit_price").on('keyup', function(){
      if($(this).val().length > 0) {
        var i_unit_price = $(this).val();
      } else {
        var i_unit_price = 0
      }
      if($(this).closest('.field_for_unit_price').siblings().find('.i_quantity').val().length > 0) {
        var i_quantity = $(this).closest('.field_for_unit_price').siblings().find('.i_quantity').val();
      } else {
        var i_quantity = 0
      }

      var i_price = parseFloat(parseFloat(i_quantity) * parseFloat(i_unit_price)).toFixed(2);
      $(this).closest('.invoice_service_item_row').find('.i_price').val(i_price);
      $(this).closest(".invoice_service_item_row").find(".i_price").trigger("change");
    });
    $(el).find(".i_quantity").on('keyup', function(){
      if($(this).val().length > 0) {
        var i_quantity = $(this).val();
      } else {
        var i_quantity = 0
      }
      if($(this).closest('.field_for_quantity').siblings().find('.i_unit_price').val().length > 0) {
        var i_unit_price = $(this).closest('.field_for_quantity').siblings().find('.i_unit_price').val();
      } else {
        var i_unit_price = 0
      }
      var i_price = parseFloat(parseFloat(i_quantity) * parseFloat(i_unit_price)).toFixed(2);
      $(this).closest('.invoice_service_item_row').find('.i_price').val(i_price);
      $(this).closest(".invoice_service_item_row").find(".i_price").trigger("change");
    });

    $(el).find(".i_price").on('change', function(e){
      calculation_invoice_total($(e.currentTarget).closest(".service_item_row_count"));
    });
  }

  
  // Function For Calculating Invoice Based Total
  function calculation_invoice_total(el) {
    // Service Total Calculation
    prices = $(el).find(".i_price")
    total = 0
    for (var i = prices.length - 1; i >= 0; i--) {
      total += parseFloat($(prices[i]).val())
    };
    $(el).closest(".service_row_count").find(".service_total").val(total)

    // Gross Amount Calculation
    service_prices = $("#services_items").find(".service_total")
    total_gross = 0
    for (var i = service_prices.length - 1; i >= 0; i--) {
      total_gross += parseFloat($(service_prices[i]).val())
    };
    $(el).closest(".container-fluid").find(".invoice_gross_total").val(total_gross)

    // Net Amount Calculation
    var gross_amount_in =  total_gross
    if($(".discount_amount").val() != "") {
      var disc_in = $(".discount_amount").val()
    } else {
      var disc_in = 0
    }
    $(".invoice_net_total").val((parseFloat(gross_amount_in) - parseFloat(disc_in)).toFixed(2))

    // Amount TPA Total
    var net_amount =  $(".invoice_net_total").val()
    if($(".amount_paid_tpa").val() != "") {
      var amount_paid_tpa =  $(".amount_paid_tpa").val()
    } else {
      var amount_paid_tpa = 0
    }
    $(".amount_paid_patient").val((parseFloat(net_amount) - parseFloat(amount_paid_tpa)).toFixed(2))
  }

  // Logic For Remove Reset
  function remove_reset_logic() {
    var x = $("#services_items").find(".service_row_count")
    for (var i = 0; i < x.length; i++) {
      $(x[i]).find(".service_id").attr('name','invoice_insurance[services][' + i + '][_id]')
      $(x[i]).find(".service_name").attr('name','invoice_insurance[services][' + i + '][name]')
      $(x[i]).find(".service_total").attr('name','invoice_insurance[services]['+ i +'][service_total]')
      $(x[i]).attr('title',i)

      var y = $(x[i]).find('.invoice_service_item_row')
      for (var j = 0; j < y.length; j++){
        $(y[j]).find('.i_id').attr('name', 'invoice_insurance[services]['+ i +'][items]['+ j +'][_id]')
        $(y[j]).find('.i_description').attr('name', 'invoice_insurance[services]['+ i +'][items]['+ j +'][description]')
        $(y[j]).find('.i_item_entry_date').attr('name', 'invoice_insurance[services]['+ i +'][items]['+ j +'][item_entry_date]')
        $(y[j]).find('.i_quantity').attr('name', 'invoice_insurance[services]['+ i +'][items]['+ j +'][quantity]')
        $(y[j]).find('.i_unit_price').attr('name', 'invoice_insurance[services]['+ i +'][items]['+ j +'][unit_price]')
        $(y[j]).find('.i_price').attr('name', 'invoice_insurance[services]['+ i +'][items]['+ j +'][price]')
        $(y[j]).find('.i_patient_payed').attr('name', 'invoice_insurance[services]['+ i +'][items]['+ j +'][patient_payed]')
      }
    };
  }

  $("#services_items").find(".service_name").on('change', function(){
    var service_id = $(this).val()
    var _this = this 
    $.ajax({
      dataType: "JSON",
      type: "get",
      data: {
        service_id: service_id
      },
      url: '/invoice_item_cards/get_items_for_service',
      success: function(response){
        $(_this).closest('.service_row_count').find('.service_item_row_count').find('.invoice_service_item_row').find('.i_description').children().remove()

        $.each(response.invoice_item_card, function(key, value) {
          if(value[2] === null){
            $(_this).closest('.service_row_count').find('.service_item_row_count').find('.invoice_service_item_row').find('.i_description').append($("<option></option>").attr("value",value[0]).text(value[1]));
          } else {
            $(_this).closest('.service_row_count').find('.service_item_row_count').find('.invoice_service_item_row').find('.i_description').append($("<option></option>").attr("value",value[0]).text(value[1] + ' - ' + value[2]));
          }
        });
        // var item = $(_this).closest('.service_row_count').find('.service_item_row_count').find('.invoice_service_item_row').find('.i_description')
        var path = $(_this).closest('.service_row_count').find('.service_item_row_count').find('.invoice_service_item_row')
        for (var i = path.length - 1; i >= 0; i--) {
          $(path[i]).find('.i_description').prepend($('<option selected="selected" disabled="disabled"></option>'))
          $(path[i]).find('.i_description').removeAttr('disabled')
          $(path[i]).find('.i_quantity').val(1)
          $(path[i]).find('.i_unit_price').val("")
          $(path[i]).find('.i_unit_price').trigger('keyup')
          $(path[i]).find('.i_price').val("")
          $(path[i]).find('.select2-selection__rendered').text("").attr('title', '')
        }
      }
    })
  })
  if($('.path_for_change').val() == "new"){
    $("#services_items").find(".service_name").first().trigger('change')
  }
    
  function get_item_card_details(link){
    $(link).on('change', function(){
      // console.log('abc')
      var item_id = $(this).val()
      console.log(item_id)
      var _this = this
      $.ajax({
        dataType: "JSON",
        type: "get",
        data: {
          item_id: item_id
        },
        url: '/invoice_item_cards/get_item_card_details',
        success: function(response){
          console.log(response)
          $(_this).closest('.invoice_service_item_row').find('.i_quantity').val(response.invoice_item_card.quantity)
          $(_this).closest('.invoice_service_item_row').find('.i_unit_price').val((response.invoice_item_card.item_price)/(response.invoice_item_card.quantity))
          $(_this).closest('.invoice_service_item_row').find('.i_unit_price').trigger('keyup')
        }
      })
    })
  }

  get_item_card_details($("#services_items").find(".i_description"))

  function create_item_dropdown(abc){
    var service_id = $(abc).closest('.service_row').find('.service_name').val()
    
    var dl = $(abc).closest('.service_row').siblings('.service_item_row_count').find('.i_description').last()
    $.ajax({
      dataType: "JSON",
      type: "get",
      data: {
        service_id: service_id
      },
      url: '/invoice_item_cards/get_items_for_service',
      success: function(response){
        console.log(response.invoice_item_card)
        $(dl).children().remove()

        $.each(response.invoice_item_card, function(key, value) {
          if(value[2] === null){
            $(dl).append($("<option></option>").attr("value",value[0]).text(value[1]));
          } else {
            $(dl).append($("<option></option>").attr("value",value[0]).text(value[1] + ' - ' + value[2]));
          }
        });
        $(dl).prepend($('<option selected="selected" disabled="disabled"></option>'))
        $(dl).removeAttr('disabled')
      }
    })
  }

  // Select2 Service/Item Dropdown
  $("#services_items").find('.service_name').select2();
  $("#services_items").find('.i_description').select2();

});

// Documentation Here