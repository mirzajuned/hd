$("#invoice-detail-modal").html("<%= escape_javascript(render 'edit.html.erb') %>");
$("#invoice-detail-modal").modal("show");

<%= render partial: "form.js.erb" %>

function refund_invoice() {
  $("#edit_refund_payment_<%= @refund_payment.id.to_s %>").validate({
    rules: {
      "refund_payment[reason]": {
        required: true,
      },
      "refund_payment[mode_of_payment]": {
        required: true
      },
      "refund_payment[payment_date]": {
        required: true
      },
      "refund_payment[amount]": {
        required: true,
        number: true,
        min: 0,
        max: function() {
          <% if @advance_payment.present? %>
          received_amount = parseFloat($('#refund_payment_advance_remaining_amount').val());
          return received_amount;
          <% elsif @invoice.present? %>
          received_amount = parseFloat($('#refund_payment_invoice_received_amount').val()) + parseFloat($('#refund_payment_invoice_settled_amount').val());
          return received_amount;
          <% end %>
        }
      }
    },
    messages: {
      "refund_payment[reason]": {
        required: "Reason Required",
      },
      "refund_payment[mode_of_payment]": {
        required: "MOP Required"
      },
      "refund_payment[payment_date]": {
        required: "Date Required"
      },
      "refund_payment[amount]": {
        required: "Amount Required",
        number: "Invalid Number"
      }
    },
    errorElement: 'div',
    errorPlacement: function (error, element) {
      error.insertAfter(element);
    }
  });
}
refund_invoice()