<% partial_name = @partial_name.present? %>
<% data = {
    service_name: "DoctorData",
    action_name: "top_ten_doctor_laboratory_investigations",
    partial_name: "radiology_doctor_investigation_data"
} %>
<div class="row">
  <div class="<%= partial_name ? 'col-md-6': 'col-md-12' %>">
    <div class="panel panel-default panel_b borderd_panel">
      <div class="panel-heading to_add_expand_button">
        <h5 class="subtitle mb5"><i class="fa fa-bar-chart" aria-hidden="true"></i><strong>  &nbsp;&nbsp;  Radiology Investigation</strong> &nbsp;&nbsp;
          <a href="#" data-toggle="tooltip" data-placement="bottom" title="This Graph Shows Radiology Investigations count list"><i class="fa fa-info-circle" aria-hidden="true"></i></a>
        </h5>
        <%= render partial: "/analytics/shared/expand_button", locals:{partial_name: partial_name, data: data } %>
      </div>

      <div class="panel-body reduced_padding">
        <canvas id="radiology-investigation-chart_doctor_<%= partial_name%>" width="800" height="400"></canvas>
      </div>
    </div>
  </div>
  <% if partial_name %>
    <div class="col-md-6">
      <div class="table_wrapper">
        <table class="table table_data table-bordered table-hover">
          <thead>
          <tr>
            <th>Investigation Name</th>
            <th>Count</th>
          </tr>
          </thead>
          <tbody>
          <% @radiology_investigation_label_doctor.each_with_index do |f_name, indx|%>
            <tr>
              <td><%= f_name %></td>
              <td><%= @radiology_investigation_data_doctor[indx].to_i %></td>
            </tr>
          <% end %>
          </tbody>
        </table>
      </div>
    </div>
  <% end %>
</div>

<script>
  new Chart(document.getElementById("radiology-investigation-chart_doctor_<%= partial_name%>"), {
    type: 'pie',
    data: {
      labels: <%= raw @radiology_investigation_label_doctor %>,
      datasets: [{
        data: <%= raw @radiology_investigation_data_doctor %>,
        label: "Total",
        borderWidth: 0,
        backgroundColor:<%= raw get_chart_dataset_color %>
      }]
    },
    options: {
      rotation: -0.7 * Math.PI,
      responsive: true,
      legend: {
        display: false,
      },
      title: {
        display: false,
      },
      animation: {
        duration: 500,
        onComplete () {
          const chartInstance = this.chart;
          const ctx = chartInstance.ctx;
          const dataset = this.data.datasets[0];
          const meta = chartInstance.controller.getDatasetMeta(0);
          Chart.helpers.each(meta.data.forEach((bar, index) => {
            const label = this.data.labels[index];
            const labelPositionX = 20;
            const labelWidth = ctx.measureText(label).width + labelPositionX;
            ctx.textBaseline = 'middle';
            ctx.textAlign = 'left';
            ctx.fillStyle = '#333';
          }));
        }
      }
    }
  });

</script>
