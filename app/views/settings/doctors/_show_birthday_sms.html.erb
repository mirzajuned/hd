<%= form_tag "/doctors/birthday_sms_setting.js", :method => :post, :remote => true, :id => 'customise_sms', :class => 'form form-bordered'  do  %>
    <%= hidden_field_tag :facility_setting_id,@facility_setting.try(:id) %>
    <div class="row mb10 clearfix">
      <div class="col-md-2"><b>SMS Settings</b></div>
      <div class="col-md-8">
        <div class="col-md-3">SMS Time:</div>
        <div class="col-md-3">
          <%= select_tag :birthday_sms_time, options_for_select([['12am','00:00:00'],['7am','07:00:00'],['8am','08:00:00'],['9am','09:00:00'],['10am','10:00:00'],['11am','11:00:00'],['12pm','12:00:00'],['1pm','13:00:00'],['2pm','14:00:00'],['3pm','15:00:00'],['4pm','16:00:00'],['5pm','17:00:00'],['6pm','18:00:00'],['8pm','20:00:00'],['10pm','22:00:00']],selected: @setting_source.try(:birthday_sms_time).try(:strftime, "%H:%M:%S")), { :class => 'form-control'} %>
        </div>
        <div class="col-md-3">Time Before Event:</div>
        <div class="col-md-3">
          <%= select_tag :birthday_sms_schedule, options_for_select([['Same day',"0"]],selected: @setting_source.try(:birthday_sms_schedule)), { :class => 'form-control'} %>
        </div>
      </div>

      <div class="col-md-2">
        <%= submit_tag("Save Changes",{:class=>"btn btn-success btn-sm"}) %>
      </div>
    </div>


    <div class="panel-body">
      <div>
        <%= text_area_tag :birthday_sms_text ,@setting_source.try(:birthday_sms_text),class: 'form-control message',rows: "6",placeholder: "Enter your SMS"%>
      </div>
    </div>
    <span class="countdown"></span>
<% end %>
<strong style="color: red">*Note: Text b/w "% %",eg:"%pat_name%" in above body are place holders for the information like patient name,organisation,phone number etc, so do not edit them and use them accordingly.</strong>
<br>*Use the following placeholders subsitutes:
<%= render 'settings/doctors/sms_word_help' %>


<!--<button id="mytextareabutton" class="btn-primary mytextareabutton">abc</button>-->
<script>


    jQuery.fn.extend({
      setCursorPosition: function(position){
        if(this.length == 0) return this;
        return $(this).setSelection(position, position);
      },

      setSelection: function(selectionStart, selectionEnd) {
        if(this.length == 0) return this;
        input = this[0];

        if (input.createTextRange) {
          var range = input.createTextRange();
          range.collapse(true);
          range.moveEnd('character', selectionEnd);
          range.moveStart('character', selectionStart);
          range.select();
        } else if (input.setSelectionRange) {
          input.focus();
          input.setSelectionRange(selectionStart, selectionEnd);
        }

        return this;
      },

      focusEnd: function(){
        this.setCursorPosition(this.val().length);
        return this;
      },

      getCursorPosition: function() {
        var el = $(this).get(0);
        var pos = 0;
        if('selectionStart' in el) {
          pos = el.selectionStart;
        } else if('selection' in document) {
          el.focus();
          var Sel = document.selection.createRange();
          var SelLength = document.selection.createRange().text.length;
          Sel.moveStart('character', -el.value.length);
          pos = Sel.text.length - SelLength;
        }
        return pos;
      },

      insertAtCursor: function(myValue) {
        return this.each(function(i) {
          if (document.selection) {
            //For browsers like Internet Explorer
            this.focus();
            sel = document.selection.createRange();
            sel.text = myValue;
            this.focus();
          }
          else if (this.selectionStart || this.selectionStart == '0') {
            //For browsers like Firefox and Webkit based
            var startPos = this.selectionStart;
            var endPos = this.selectionEnd;
            var scrollTop = this.scrollTop;
            this.value = this.value.substring(0, startPos) + myValue +
                this.value.substring(endPos,this.value.length);
            this.focus();
            this.selectionStart = startPos + myValue.length;
            this.selectionEnd = startPos + myValue.length;
            this.scrollTop = scrollTop;
          } else {
            this.value += myValue;
            this.focus();
          }
        })
      }

    })




      $("#mytextareabutton").on('click',function(){


        $(".message").focusEnd();
        $(".message").insertAtCursor("%pat_name%");
      });

</script>