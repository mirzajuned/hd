$(document).ready(function(){
  $('[data-toggle="tooltip"]').tooltip();
});

$(".taperingby").on('click', function(){
  let tapering_acc =  $(this).val()
  if(tapering_acc == "Dosage"){
    $('.freq_col').hide()
    $('.dosage_col').show()
    $('#tapering_kit_taper_by').val("Dosage")
  } else{
    $('.dosage_col').hide()
    $('.freq_col').show()
    $('#tapering_kit_taper_by').val("Frequency")
  }
});

Date.prototype.toInputFormat = function(x = 0) {
  var yyyy = this.getFullYear().toString();
  var mm = (this.getMonth()+1).toString();
  var dd  = this.getDate().toString();
  if(x == 1){
    return ((''+dd).length<2 ? '0' : '') + dd + '/' + ((''+mm).length<2 ? '0' : '') + mm + '/' + yyyy
  } else {
    return ((''+mm).length<2 ? '0' : '') + mm + '/' + ((''+dd).length<2 ? '0' : '') + dd + '/' + yyyy
  }
};

$('.timepicker_start_time').timepicker({minuteStep: 5});
$('.timepicker_end_time').timepicker({minuteStep: 5});

// functions to sort table data
$(".start_time_set_btn").on('click', function(){
  var taper_table_row = $(".taper_table").find('tbody').find(".taper_row")
  for (var i = taper_table_row.length - 1; i >= 1; i--) {
    $(taper_table_row[i]).find(".timepicker_start_time").val($(taper_table_row[0]).find(".timepicker_start_time").val())
  }
})

$(".end_time_set_btn").on('click', function(){
  var taper_table_row = $(".taper_table").find('tbody').find(".taper_row")
  for (var i = taper_table_row.length - 1; i >= 1; i--) {
    $(taper_table_row[i]).find(".timepicker_end_time").val($(taper_table_row[0]).find(".timepicker_end_time").val())
  }
})

jQuery('.add_taper_new_row').on('click', function(e) {
  e.preventDefault()
  let total_rows = $(".tapering-kit-table-body-added").find('.taper_row')
  let total_rows_length = total_rows.length -1
  let last_row_date = $(total_rows[total_rows_length]).find('.end_date').val()
  if(last_row_date == undefined || isNaN(last_row_date)){
    last_row_date = "<%= (Date.current - 1).strftime("%d/%m/%Y") %>"
  }
  let number_of_days;
  let durationtype = $('#tapering_kit_taperingtype').val()
  let duration = $('#tapering_kit_taperingduration').val()
  if(durationtype == "M"){
    number_of_days = 30 * parseInt(duration)
  } else if(durationtype == "W"){
    number_of_days = 7 * parseInt(duration)
  } else {
    number_of_days = duration
  }
  var taperby = $('#tapering_kit_taper_by').val()
  if (jQuery(".tapering-kit-table-body-added > .taper_row").length == 0){
    fieldcounter = 0;
  } else {
    fieldcounter = jQuery(".tapering-kit-table-body-added > .taper_row").length;
  }
  var params = { counter: fieldcounter, durationtype: durationtype, duration: number_of_days, taperby: taperby, last_row_date: last_row_date };
    jQuery.ajax({
      type: "GET",
      dataType: "script",
      url: "/tapering_kits/add_tapering_field",
      data: {ajax: params, remote: "true" },
      async: false,
      success: function(){
    }
  });
});

jQuery('.tapering-kit-table-body-added').on('click', "a[name*='removetaperingrowbutton']", function(e) {
  e.preventDefault();
  let tapering_removed_tr_html;
  let tapering_tr_array = jQuery(this).parents('.taper_row').find(".id");
  if (tapering_tr_array.length > 0) {
    jQuery(this).parents('.taper_row').find("input[name*='_destroy']").val("1");
    tapering_removed_tr_html = jQuery(this).parents('.taper_row').wrap('<p/>').parent().html();
    jQuery(this).parents('.taper_row').unwrap();
    jQuery('.tapering-kit-table-body-removed').append(tapering_removed_tr_html);
    jQuery(this).parents('.taper_row').remove();
  } else {
    jQuery(this).parents('.taper_row').remove();
  }
  if ($('.tapering-kit-table-body-added').find('.removetaperingrowbutton').length == 1){
    $('.tapering-kit-table-body-added').find('.removetaperingrowbutton').hide()
  }
  _add_button_at_last_taper_row()
  _renumber_id_after_remove('.tapering-kit-table-body-added')
  calculate_full_rows()
});

//to renumber rows and no
function _renumber_id_after_remove(removed) {
  var counter = 0
  jQuery(removed).find(".taper_row").each(function() {
    jQuery(this).find("input").each(function(index, element) {
      var nameattr, idattr;
      nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      jQuery(this).attr('name', nameattr);
      jQuery(this).attr('id', idattr);
    });
    jQuery(removed).find(".taper_row").each(() => {
      new_counter = counter + 1
      $(this).find('.number_of_rows').val(new_counter)
    });
    counter++;
  });
}

if ($('.tapering-kit-table-body-added').find('.removetaperingrowbutton').length == 1){
  $('.tapering-kit-table-body-added').find('.removetaperingrowbutton').hide()
}

//for adding close button on last row
function _add_button_at_last_taper_row() {
  $('#tapering_table').find('removetaperingrowbutton').addClass("hidden")
  $('#tapering_table').find('removetaperingrowbutton').last().removeClass("hidden")
}
_add_button_at_last_taper_row()

//function for calculating sart and end date on change of number of row
$(".medicineduration_row").on("change", function(){
  let sr_no = $(this).parents('.taper_row').find('.number_of_rows').val()
  sr_no = sr_no - 1;
  calculate_end_date(this)
  calculate_full_rows(sr_no)
});

//for calculating all rows end date and start date
function calculate_full_rows(){
  let end_date = jQuery(".tapering-kit-table-body-added").find('.end_date');
  for (let i = 0; i < end_date.length; i++) {
    if(i > 0){
      let end_date_prev = $(end_date[i-1]).val()
      end_date_prev = new Date(end_date_prev.split("/")[1] +'/'+ end_date_prev.split("/")[0] +'/'+  end_date_prev.split("/")[2]);
      end_date_prev = new Date(end_date_prev.toInputFormat());
      end_date_prev.setDate(end_date_prev.getDate() + 1);
      $(end_date[i]).parents('.taper_row').find('.start_date').val(end_date_prev.toInputFormat(1));
    }
    calculate_end_date(end_date[i]);
  }
}
calculate_full_rows()

//for calculating single row end date
function calculate_end_date(_this){
  let start_date = $(_this).parents('.taper_row').find('.start_date').val()
  start_date = new Date(start_date.split("/")[1] +'/'+ start_date.split("/")[0] +'/'+  start_date.split("/")[2]);
  let no_of_days = parseInt($(_this).parents('.taper_row').find('.medicineduration_row').val()) - 1;
  start_date.setDate(start_date.getDate() + no_of_days);
  $(_this).parents('.taper_row').find(".end_date").attr('value', start_date.toInputFormat(1));
}