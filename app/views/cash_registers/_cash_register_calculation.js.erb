jQuery("#total-cash-register-fields").on('keyup',"[id^=cash_register_cash_register_details_attributes_][id$=unit_price]",calculate_all_totals)
jQuery("#total-cash-register-fields").on('change',"[id^=cash_register_cash_register_details_attributes_][id$=total_units]",calculate_all_totals)
jQuery("#total-cash-register-fields").on('keyup',"[id^=cash_register_cash_register_details_attributes_][id$=total_units]",calculate_all_totals)
jQuery("#total-cash-register-fields").on('keyup',"[id^=cash_register_cash_register_details_attributes_][id$=label]",clear_cash_register_values)




//for creating new cash_register_template

jQuery("#total-cash-register-fields").on('click',"#add_cash_register_item",function(e){

  var total_rows = jQuery("#total_cash_register_row_count").val()

  var single_row_html = '<div class="row form-group">' +
      '<div class="col-sm-4">' +
      '<input class="form-control services-label-validation" id="cash_register_cash_register_details_attributes_row_count_label" name="cash_register[cash_register_details_attributes][row_count][label]" type="text">' +
      '<input name="cash_register[cash_register_details_attributes][row_count][service_id]" id="cash_register_cash_register_details_attributes_row_count_service_id" type="hidden" value="">' +
      '</div>' +
      '<div class="col-sm-2">' +
      '<input class="form-control services-unit-price-validation" id="cash_register_cash_register_details_attributes_row_count_unit_price" name="cash_register[cash_register_details_attributes][row_count][unit_price]" type="text">' +
      '</div>' +
      '<div class="col-sm-2"><input class="form-control services-total-units-validation" id="cash_register_cash_register_details_attributes_row_count_total_units" min="1" name="cash_register[cash_register_details_attributes][row_count][total_units]" type="number">' +
      '</div>' +
      '<div class="col-sm-2"><input class="form-control total" disabled="disabled" id="total_row_count" name="total_row_count" type="text" value="0">' +
      '</div>' +
      '<div class="col-sm-2"><span id="add_cash_register_item" class="btn btn-xs btn-primary btn-square glyphicon glyphicon-plus-sign mr5">' +
      '</span>' +
      '<span id="remove_cash_register_item_row_count" class="btn btn-xs btn-primary btn-danger glyphicon glyphicon-remove">' +
      '</span>' +
      '</div>' +
      '</div>'


  single_row_html = single_row_html.replace(/row_count/g,total_rows)
  jQuery("#total_cash_register_row_count").val(+total_rows+1)

  jQuery(single_row_html).appendTo("#total-cash-register-fields")
  autocomplete_bind()
})


function calculate_all_totals() {
  var total_cash_register_row_count = jQuery("#total_cash_register_row_count").val();
  var total_cash_register_price = 0
  for(var row_count=0;row_count<total_cash_register_row_count;row_count++) {
    if(jQuery("#cash_register_cash_register_details_attributes_"+row_count+"_total_units").length > 0) {
      var total_price = (jQuery("#cash_register_cash_register_details_attributes_"+row_count+"_total_units").val() * jQuery("#cash_register_cash_register_details_attributes_"+row_count+"_unit_price").val())
      jQuery("#total_"+row_count).val(total_price)
      total_cash_register_price += total_price
    }
  }



  jQuery("#cash_register_total").val(total_cash_register_price.toFixed(2))
}






//jQuery("body").on('click',"[id^=remove_cash_register_item_]",function(e){
//
//  var id = e.currentTarget.id
//  jQuery("#"+id).parent().parent().remove()
//})

jQuery("body").on('click',"[id^=remove_cash_register_item_]",function(e){
  var id = e.currentTarget.id
  var index = id.replace('remove_cash_register_item_', '');

  if (jQuery("input[name='cash_register[cash_register_details_attributes][" + index + "][id]']").length) {
    service_list = []
    if (jQuery("#cash_register_details_for_delete").val() != "") {
      service_list = jQuery("#cash_register_details_for_delete").val().split(',')
    }
    console.log(service_list.length)
    service_list.push(jQuery("input[name='cash_register[cash_register_details_attributes][" + index + "][id]']").val())
    jQuery("#cash_register_details_for_delete").val(service_list.join(","))
  }
  jQuery("#" + id).parent().parent().remove()
  calculate_all_totals()
})


jQuery(".cash_register_fields_group").on('change',"[id^=cash_register_template_template_details_attributes_][id$=unit_price]",calculate_total_cash_register_template)
jQuery(".cash_register_fields_group").on('change',"[id^=cash_register_template_template_details_attributes_][id$=total_units]",calculate_total_cash_register_template)

function calculate_total_cash_register_template(e){
  var id = e.currentTarget.id
  var row_count = id.replace("cash_register_template_template_details_attributes_","")
  row_count = row_count.replace("_unit_price","")
  row_count = row_count.replace("_total_units","")
  var total_price = (jQuery("#cash_register_template_template_details_attributes_"+row_count+"_total_units").val() * jQuery("#cash_register_template_template_details_attributes_"+row_count+"_unit_price").val())
  jQuery("#total_"+row_count).val(total_price)
}


var service_type = $("#patient-type").val()
console.log(service_type)
function autocomplete_bind(){
  jQuery("[id^=cash_register_cash_register_details_attributes_][id$=label]").autocomplete({
    minLength: 2,
      source: function(request, response) {
        jQuery.ajax({
            dataType: "json",
            type : 'get',
            url: '/services/findmatchingservice',
            //data: {searchpatient: params, remote: "true" },
          data: {q: request.term, patient_service_type: service_type, remote: "true"},
            success: function(data) {
              //jQuery('#searchpatientkeyword').removeClass('ui-autocomplete-loading')
              response( data)
            },
          error: function(data) {
              //jQuery('#searchpatientkeyword').removeClass('ui-autocomplete-loading');
          }
        })
      },
      select: function( event, ui ) {
          var params = { id: ui.item["id"] }
          //console.log(event.target.id)
          jQuery.ajax({
                  type: "GET",
                  dataType: "script",
                  url: "/services/populateservicedetails",
                  data: {populateservicedetails: params, remote: "true",target_id: event.target.id,prefix: "cash_register_cash_register_details_attributes_"}

          })
        console.log(params);
      },
      close: function() {

        if (jQuery("[id^=cash_register_cash_register_details_attributes_][id$=label]") == jQuery("[id^=cash_register_cash_register_details_attributes_][id$=label]").autocomplete("option", "appendTo", "#new_cash_register")) {

        }


      }


  })

}

function _split_underscore_from_id_attr(id, splitposition) {
    return id.split("_")[splitposition];
}

function clear_cash_register_values() {
  var row_count = _split_underscore_from_id_attr(jQuery(this).attr('id'), 6);
  jQuery("#cash_register_cash_register_details_attributes_" + row_count + "_service_id").val("")
  console.log(jQuery("#cash_register_cash_register_details_attributes_" + row_count + "_service_id").val());
  jQuery("#cash_register_cash_register_details_attributes_" + row_count + "_unit_price").val("")
  jQuery("#cash_register_cash_register_details_attributes_" + row_count + "_total_units").val("")
  jQuery("#cash_register_cash_register_details_attributes_" + row_count + "_total_units").change()
  //calculate_all_totals();
}


calculate_all_totals()
autocomplete_bind()


function invoice_page() {

  $("#new_cash_register").validate({

    errorElement: 'div',
    errorPlacement: function (error, element) {
      error.insertAfter(element);
    }
  });

  $("#edit_cash_register").validate({

    errorElement: 'div',
    errorPlacement: function (error, element) {
      error.insertAfter(element);
    }
  });

}
invoice_page()



//==== custom validation neccessary for nested attributes -anoop

// alias required to cRequired with new message
$.validator.addMethod("ItemRequired", $.validator.methods.required, "Item cannot be blank");
$.validator.addMethod("NameRequired", $.validator.methods.required, "Name cannot be blank");
$.validator.addMethod("UnitRequired", $.validator.methods.required, "Unit price cannot be blank");
$.validator.addMethod("QuantityRequired", $.validator.methods.required, "Quantity cannot be blank");
$.validator.addMethod("INumber", $.validator.methods.number, "Please enter a number");

$.validator.addClassRules("services-label-validation", { ItemRequired: true});
$.validator.addClassRules("cash-register-name-validation", { NameRequired: true});
$.validator.addClassRules("services-unit-price-validation", { UnitRequired: true, INumber: true });
$.validator.addClassRules("services-total-units-validation", { QuantityRequired: true, INumber: true });