const set_address_fields = () => {
  let country_id = $("#payer_master_facility_id").find('option:selected').attr('country-id')
  if (country_id == 'VN_254') {
    $('.vietnam_facility').show();
    $('.other_facility').hide();
    $('.cambodia_facility').hide();
  } else if(country_id == 'KH_039') {
    $('.cambodia_facility').show();
    $('.vietnam_facility').hide();
    $('.other_facility').hide();
  } else {
    $('.vietnam_facility').hide();
    $('.cambodia_facility').hide();
    $('.other_facility').show();
  }

  //Search For India and others starts//
  $('#search_state_other').autocomplete({
    minLength: 3,
    source: function(request, response) {
      //var country_id = $("#facility_country_id").val()
      $.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_state',
        data: {q: request.term, country_id: country_id, remote: "true" },
        success: function(data) {
          response(data);
        },
        error: function(data) {
        }
      });
    },
    select: function( event, ui ) {
      state = ui.item["state"]
      setTimeout(function() {
        $(".state").val(state)
        $('.state').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
        return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.state  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
      };
    }
  });

  $('#search_city_other').autocomplete({
    minLength: 3,
    source: function(request,response){
      //var country_id = $("#facility_country_id").val()
      var state = $('#search_state_other').val();
      $.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_city',
        data: {q: request.term, country_id: country_id, state: state, remote: "true"},
        success: function(data){
          response(data);
        },
        error: function(data){
        }
      });
    },
    select: function( event, ui ) {
      city  = ui.item["city"]
      state = ui.item["state"]
      setTimeout(function() {
        $(".facility-city").val(city)
        $(".state").val(state)
        $('.facility-city').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
        return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.city  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
      };
    }
  });

  $('#search_pincode_other').autocomplete({
    minLength: 3,
    source: function(request,response){
      //var country_id = $("#facility_country_id").val()
      var state = $('#search_state_other').val();
      var city = $('#search_city_other').val();
      $.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_pincode',
        data: {q: request.term, country_id: country_id, state: state, city: city, remote: "true"},
        success: function(data){
          response(data);
        },
        error: function(data){
        }
      });
    },
    select: function( event, ui ) {
      pincode = ui.item["pincode"]
      city  = ui.item["city"]
      state = ui.item["state"]
      setTimeout(function() {
        $(".pincode").prop('readonly',true).val(pincode)
        $(".state").prop('readonly', true).val(state)
        $(".facility-city").prop('readonly', true).val(city)
        $(".clear-pincode").show()
        $('.pincode').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
        .append('<a style=\"color:#000;text-shadow: 2px; text-align: center;\">' + item.pincode  + '&nbsp; &nbsp; &nbsp;' + '</a>')
        .appendTo(ul);
      };
    }
  });
  //Search For India and others ends//

  //Search For Vietnam starts//
  $('#search_district_vietnam').autocomplete({
    minLength: 2,
    source: function(request,response) {
      //var country_id = jQuery('#facility_country_id').val()
      var city = jQuery('#search_city_vietnam').val();
      jQuery.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_district',
        data: {q: request.term, city: city, country_id: country_id, remote: "true"},
        success: function(data){
          response(data);
        },
        error: function(data){
        }
      });
    },
    select: function( event, ui ) {
      district = ui.item["district"]
      city  = ui.item["city"]
      setTimeout(function() {
        jQuery(".district").val(district)
        jQuery(".facility-city").val(city)
        jQuery('.district').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
        return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.district  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
      };
    }
  });

  $('#search_city_vietnam').autocomplete({
    minLength: 3,
    source: function(request,response){
      //var country_id = $("#facility_country_id").val()
      $.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_city',
        data: {q: request.term, country_id: country_id, remote: "true"},
        success: function(data){
          response(data);
        },
        error: function(data){
        }
      });
    },
    select: function( event, ui ) {
      city  = ui.item["city"]
      setTimeout(function() {
        $(".facility-city").val(city)
        $('.facility-city').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
        return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.city  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
      };
    }
  });

  $('#search_commune_vietnam').autocomplete({
    minLength: 2,
    source: function(request,response) {
      //var country_id = jQuery('#facility_country_id').val()
      var city = jQuery('#search_city_vietnam').val();
      var district = jQuery('#search_district_vietnam').val();
      jQuery.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_commune',
        data: {q: request.term, city: city, district: district, country_id: country_id, remote: "true"},
        success: function(data){
          response(data);
        },
        error: function(data){

        }
      });
    },
    select: function( event, ui ) {
      commune = ui.item["commune"]
      district  = ui.item["district"]
      city = ui.item["city"]
      setTimeout(function() {
        jQuery(".commune").prop('readonly',true).val(commune)
        jQuery(".facility-city").prop('readonly', true).val(city)
        jQuery(".district").prop('readonly', true).val(district)
        jQuery(".clear-commune").show()
        jQuery('.commune').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
        return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px; text-align: center;\">' + item.commune + ' (' + item.district + ')' + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
      };
    }
  });
  //Search For Vietnam ends//

  //Search For Cambodia starts//
  $('#search_pincode_cambodia').autocomplete({
    minLength: 3,
    source: function(request,response){
      //var country_id = $("#facility_country_id").val()
      var state = $('#search_state_cambodia').val();
      var district = $('#search_district_cambodia').val();
      var commune = $('#search_commune_cambodia').val();
      $.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_pincode',
        data: {q: request.term, country_id: country_id, state: state, district: district, commune: commune, remote: "true"},
        success: function(data){
          response(data);
        },
        error: function(data){
        }
      });
    },
    select: function( event, ui ) {
      pincode = ui.item["pincode"]
      state = ui.item["state"]
      district = ui.item["district"]
      commune = ui.item["commune"]
      setTimeout(function() {
        $(".pincode").prop('readonly',true).val(pincode)
        $(".state").prop('readonly', true).val(state)
        $(".district").prop('readonly', true).val(district)
        $(".commune").prop('readonly', true).val(commune)
        $(".clear-pincode").show()
        $('.pincode').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
      return $('<li>')
        .append('<a style=\"color:#000;text-shadow: 2px; text-align: center;\">' + item.pincode  + '&nbsp; &nbsp; &nbsp;' + '</a>')
        .appendTo(ul);
      };
    }
  });

  $('#search_state_cambodia').autocomplete({
    minLength: 3,
    source: function(request, response) {
      //var country_id = $("#facility_country_id").val()
      $.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_state',
        data: {q: request.term, country_id: country_id, remote: "true" },
        success: function(data) {
          response(data);
        },
        error: function(data) {
        }
      });
    },
    select: function( event, ui ) {
      state = ui.item["state"]
      setTimeout(function() {
        $(".state").val(state)
        $('.state').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
        return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.state  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
      };
    }
  });

  $('#search_district_cambodia').autocomplete({
    minLength: 2,
    source: function(request,response) {
      //var country_id = jQuery('#facility_country_id').val()
      var state = jQuery('#search_state_cambodia').val();
      jQuery.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_district',
        data: {q: request.term, state: state, country_id: country_id, remote: "true"},
        success: function(data){
          response(data);
        },
        error: function(data){
        }
      });
    },
    select: function( event, ui ) {
      district = ui.item["district"]
      state  = ui.item["state"]
      setTimeout(function() {
        jQuery(".district").val(district)
        jQuery(".state").val(state)
        jQuery('.district').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
        return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px\">' + item.district  + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
      };
    }
  });

  $('#search_commune_cambodia').autocomplete({
    minLength: 2,
    source: function(request,response) {
      //var country_id = jQuery('#facility_country_id').val()
      var state = jQuery('#search_state_cambodia').val();
      var district = jQuery('#search_district_cambodia').val();
      jQuery.ajax({
        dataType: "json",
        type : 'get',
        url: '/locations/search_commune',
        data: {q: request.term, state: state, district: district, country_id: country_id, remote: "true"},
        success: function(data){
          response(data);
        },
        error: function(data){

        }
      });
    },
    select: function( event, ui ) {
      commune = ui.item["commune"]
      district  = ui.item["district"]
      state = ui.item["state"]
      setTimeout(function() {
        jQuery(".commune").prop('readonly',true).val(commune)
        jQuery(".state").prop('readonly', true).val(state)
        jQuery(".district").prop('readonly', true).val(district)
        jQuery(".clear-commune").show()
        jQuery('.commune').blur()
      }, 20);
    },
    create: function () {
      $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
        return $('<li>')
          .append('<a style=\"color:#000;text-shadow: 2px; text-align: center;\">' + item.commune + ' (' + item.district + ')' + '&nbsp; &nbsp; &nbsp;' + '</a>')
          .appendTo(ul);
      };
    }
  });
  //Search For Cambodia ends//

  // Clear pincode
  $(".clear-pincode").on('click', function(e){
    e.preventDefault()
    $(".pincode").prop('readonly',false).val("")
    $(".state").prop('readonly', false).val("")
    $(".facility-city").prop('readonly', false).val("")
    $(".district").prop('readonly',false).val("")
    $(".commune").prop('readonly', false).val("")
    $(".clear-pincode").hide()
  });

  // Clear pincode
  $(".clear-commune").on('click', function(e){
    e.preventDefault()
    $(".commune").prop('readonly',false).val("")
    $(".district").prop('readonly', false).val("")
    $(".facility-city").prop('readonly', false).val("")
    $(".state").prop('readonly', false).val("")
    $(".pincode").prop('readonly',false).val("")
    $(".clear-commune").hide()
  });

  // Clear address
  $(".clear-address").on('click', function (e) {
    e.preventDefault()
    $("#search_pincode").prop('readonly', false).val("")
    $("#search_state").prop('readonly', false).val("")
    $("#search_commune").prop('readonly', false).val("")
    $("#search_district").prop('readonly', false).val("")
    $("#search_city").prop('readonly', false).val("")
    $(".clear-address").hide()
  });
}
set_address_fields()

$('#payer_master_facility_id').on('change', function () {
  set_address_fields()
})

$(".payer_type_id_dropdown").select2()

$('.contact_group_id').on('change', function () {
  let contact_group_name = $(this).find('option:selected').html()
  $('.contact_group_name').val(contact_group_name)
  update_payer_type(contact_group_name)
  console.log(contact_group_name)
}).trigger('change')

function update_payer_type(contact_group_name){
  $.ajax({
    type: "GET",
    dataType: "json",
    url: "/payer_masters/get_payer_type_master",
    data: { contact_group_name: contact_group_name },
    success: function(response){
      $('.payer_type_id_dropdown').children().remove();

      if (response.length == 0){
        $('.payer_type_id_dropdown').append($("<option></option>").attr("value","").text("No Payer Type Master Available"));
        $('.payer_type_id_dropdown').trigger('change.select2');
      }else{
        $(".payer_type_id_dropdown").append($("<option></option>").attr("value", "").text("Select Payer Type"))
        $.each(response, function(key, value) {
          if(value[2] == undefined){
            text_value = value[0]
          } else {
            text_value = value[0] + " | " + value[2]
          }

          if(value[1] == '<%= @payer_master.try(:payer_type_id).to_s %>'){
            $('.payer_type_id_dropdown').append($("<option selected='selected'></option>").attr("value",value[1]).text(text_value))
          } else {
            $('.payer_type_id_dropdown').append($("<option></option>").attr("value",value[1]).text(text_value))
          }
          $(".payer_type_id_dropdown").trigger('change.select2');
          $('.payer_type_id_dropdown').trigger('change', true);

          //$('.payer_type_id_dropdown').append($("<option></option>").attr("value",value[1]).text(text_value)).trigger('change.select2');
        });
      }

      $('.payer_type_id_dropdown').siblings(".select2").children().children().css("background-color",'rgb(247, 232, 225)')
      setTimeout(function(argument) {
        $('.payer_type_id_dropdown').siblings(".select2").children().children().css("background-color",'')
        // $('.payer_type_id_dropdown').val('<%#= @payer_master.try(:payer_type_id).to_s %>').trigger('change')
      }, 300)
    }
  });
}

$(".copy-payer-type-to-display-name").on("click", function (e) {
  e.preventDefault()
  if ($(".payer_type_id_dropdown").val() != '') {
    var payer_type_text = $('.payer_type_id_dropdown').find('option:selected').html()
    $("#payer_master_display_name").val(payer_type_text)
  }
})


//Reverting the code for insurer
/**
$('.payer_type_id_dropdown').on('change', function() {

  let contact_group_name = $('.contact_group_name').val()

  $('.tpa_insurer_type_id_dropdown').val('')
  if (contact_group_name.toLowerCase() == 'tpa+insurance') {
    let payer_type_id = $(this).val()
    $('.tpa_insurer_type_master').show()
    update_tpa_insurer_type(payer_type_id)
  } else {
    $('.tpa_insurer_type_master').hide()
  }
})

function update_tpa_insurer_type(payer_type_id) {
  $.ajax({
    type: "GET",
    dataType: "json",
    url: "/payer_masters/get_tpa_insurer_type_master",
    data: { payer_type_id: payer_type_id },
    success: function(response){
      $('.tpa_insurer_type_id_dropdown').children().remove();

      if (response.length == 0){
        $('.tpa_insurer_type_id_dropdown').append($("<option></option>").attr("value","").text("No Tpa Insurer Available"));
        $('.tpa_insurer_type_id_dropdown').trigger('change.select2');
      }else{
        $.each(response, function(key, value) {
          if(value[2] == undefined){
            text_value = value[0]
          } else {
            text_value = value[0] + " | " + value[2]
          }
          $('.tpa_insurer_type_id_dropdown').append($("<option></option>").attr("value",value[1]).text(text_value)).trigger('change.select2');
        });
      }

      $('.tpa_insurer_type_id_dropdown').siblings(".select2").children().children().css("background-color",'rgb(247, 232, 225)')
      setTimeout(function(argument) {
        $('.tpa_insurer_type_id_dropdown').siblings(".select2").children().children().css("background-color",'')
        $('.tpa_insurer_type_id_dropdown').val('<%= @payer_master.try(:tpa_insurer_type_id).to_s %>')
      }, 300)
    }
  });
}
**/
let datepicker_options = {
  dateFormat: "dd/mm/yy"
}

$('.tariff_datepicker').datepicker(datepicker_options)


if("<%= params[:action] %>" == 'edit'){
  $('#payer_master_facility_id').attr('disabled', 'disabled')
  $('#payer_master_contact_group_id').attr('disabled', 'disabled')
  $('#payer_master_payer_type_id').attr('disabled', 'disabled')
}
