$(".add_more_adive_set_translation").prepend("<%= escape_javascript(render partial: 'new_language_subset_form', locals: { i: @counter }) %>")
$('.text_note_down').summernote(summernote_options);
$(".text_note_down").on("summernote.change", function (event) {});
$('.advice-set .note-editable').attr('id','advice-set-content-summernote')

$(".language_dropdown").select2();
jQuery(".options_for_sets").select2();

$.validator.addMethod("SelectedLanguage", $.validator.methods.required, "Language cannot be blank");
$.validator.addClassRules("selected_language", { SelectedLanguage: true});

function _renumber_id_after_remove(added, removed) {
  var counter = jQuery(added).find(".form-inputs").length - 1;
  jQuery(added).find(".form-inputs").each(function() {
    jQuery(this).find("input").each(function(index, element) {
      var nameattr, idattr;
      nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      jQuery(this).attr('name', nameattr);
      jQuery(this).attr('id', idattr);
    });
    jQuery(this).find("select").each(function(index, element) {
      var nameattr, idattr;
      nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      jQuery(this).attr('name', nameattr);
      jQuery(this).attr('id', idattr);
    });
    jQuery(this).find("a").each(function(index, element) {
      var idattr;
      idattr = element.id.replace(/[0-9]/g, counter);
      jQuery(this).attr('id', idattr);
    });
    counter--;
  });
  jQuery(removed).find(".form-inputs").each(function() {
    jQuery(this).find("input").each(function(index, element) {
      var nameattr, idattr;
      nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      jQuery(this).attr('name', nameattr);
      jQuery(this).attr('id', idattr);
    });
    jQuery(this).find("select").each(function(index, element) {
      var nameattr, idattr;
      nameattr = element.name.replace(/\[[0-9]+\]/g, '['+counter+']');
      idattr = element.id.replace(/\_[0-9]+\_/g, '_'+counter+'_');
      jQuery(this).attr('name', nameattr);
      jQuery(this).attr('id', idattr);
    });
    jQuery(this).find("a").each(function(index, element) {
      var idattr;
      idattr = element.id.replace(/[0-9]/g, counter);
      jQuery(this).attr('id', idattr);
    });
    counter--;
  });
}


jQuery('.add_more_adive_set_translation').on("click",".remove_sub_advice_set",function(e){
	e.preventDefault;
	var advice_remove_div;
	var fieldcounter;
	fieldcounter = jQuery(this).attr('id').slice(-1);
	var advice_set_arr = jQuery(this).parents('.form-inputs').find(".id");
	if (advice_set_arr.length>0){
		jQuery(this).parents('.form-inputs').find("input[name*='_destroy']").val("1");
		advice_remove_div = jQuery(this).parents('.form-inputs').wrap('<p/>').parent().html();
		jQuery(this).parents(".form-inputs").unwrap();
		jQuery(".advice-set-remove").append(advice_remove_div);
		jQuery(this).parents('.form-inputs').remove();
		_renumber_id_after_remove(".add_more_adive_set_translation",".advice-set-remove");
	}else{
		jQuery(this).parents('.form-inputs').remove();
		_renumber_id_after_remove(".add_more_adive_set_translation",".advice-set-remove");
	}
})

$(".language_dropdown").on("change",function(){
  var value = $(this).find(":selected").text()
  var id = $(".lcid_code").parent(".dropdown_area").children(".lcid_code").attr("id")
  $("#"+id).val(value)
})