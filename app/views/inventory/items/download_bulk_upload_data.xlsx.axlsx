wb = xlsx_package.workbook
hsn_required = current_organisation['inventory_hsn_code_required']
wb.add_worksheet(name: "Items") do |sheet|
  sheet.add_row ["Category*", "Description*", "HSN Code#{hsn_required ? '*' : ''}", "Brand/Company", "Manufacturer", "Model No.", "Price Range", "Tax Inclusive", "Tax*", "Unit level", "Expiry Present", "Prescription Mandatory", "Stockable", "Dispensing Unit", "Package Type", "#Sub-package/Package", "Sub-package/Package Type", "#Unit/sub-package", "Unit/sub-package Type", "Fixed Threshold", "Minimum Stock Units", "Minimum Stock%"]
  10.times.each do |i|
    sheet.add_row [@item.category, "", "", "", "", "", "", "Yes", @tax_groups.first.name, "No", "No", "No", "No", @item.dispensing_unit_name, "", "1", "", "1", "", "No", "0", "30%"]
  end

  categories = @inventory_categories.pluck(:name).map{|c| c.gsub(',', '')}.join(',')
  dispensing_unit_names = @dispensing_units.pluck(:name).map{|c| c.gsub(',', '')}.join(',')
  packages = @package_types.map{|c| c.gsub(',', '')}.join(',')
  sub_packages = @sub_package_types.map{|c| c.gsub(',', '')}.join(',')
  item_types = @item_types.map{|c| c.gsub(',', '')}.join(",")
  tax_groups = @tax_groups.pluck(:name).map{|c| c.gsub(',', '')}.uniq.join(',')
  
  sheet.add_data_validation('A2:A10000',
    type: :list,
    formula1: "\"#{categories}\"",
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Category',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: 'Select Category')
  
  sheet.add_data_validation('G2:G10000',
    type: :list,
    formula1: '"Low, High, Medium"',
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Price Range',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: 'Select Price Range')

  sheet.add_data_validation('H2:H10000',
    type: :list,
    formula1: '"Yes,No"',
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Tax Inclusive',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: '')

  sheet.add_data_validation('I2:I10000',
    type: :list,
    formula1: "\"#{tax_groups}\"",
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Tax Inclusive',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: '')

      sheet.add_data_validation('J2:J10000',
    type: :list,
    formula1: '"Yes,No"',
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Unit Level',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: '')

      sheet.add_data_validation('K2:K10000',
    type: :list,
    formula1: '"Yes,No"',
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Expiry Present',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: '')

      sheet.add_data_validation('L2:L10000',
    type: :list,
    formula1: '"Yes,No"',
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Prescription Mandatory',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: '')
    
    sheet.add_data_validation('M2:M10000',
    type: :list,
    formula1: '"Yes,No"',
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Stockable',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: '')

  sheet.add_data_validation('N2:N10000',
    type: :list,
    formula1: "\"#{dispensing_unit_names}\"",
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid dispensing unit name',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: 'Select Dispensing Unit')

  sheet.add_data_validation('O2:O10000',
    type: :list,
    formula1: "\"#{packages}\"",
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Package Type',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: 'Select Package Type')

      sheet.add_data_validation('Q2:Q10000',
    type: :list,
    formula1: "\"#{sub_packages}\"",
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Sub Package Type',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: 'Select Sub Package Type')

      sheet.add_data_validation('S2:S10000',
    type: :list,
    formula1: "\"#{item_types}\"",
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Item Type',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: 'Select Item Type')

    sheet.add_data_validation('T2:T10000',
    type: :list,
    formula1: '"Yes, No"',
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid Threshold',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: '')

      sheet.add_data_validation('V2:V10000',
    type: :list,
    formula1: '"10%, 20%, 30%"',
    showErrorMessage: true,
    errorTitle: '',
    error: 'Invalid min stock',
    errorStyle: :stop,
    showInputMessage: true,
    promptTitle: '',
    prompt: 'Select Min Stock%')
    
end