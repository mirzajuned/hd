jQuery(document).ready(function() {

  jQuery(".impingement-options").hide();
    jQuery(".cuff-options").hide();
    jQuery(".biceps-options").hide();
    jQuery(".instability-options").hide();
    jQuery(".distalneurovasculardeficit-options").hide();
    jQuery("input[name='opdrecord[impingement]']").on('change', function() {
        if (this.value == "Yes") {
          jQuery(".impingement-options").show();
        }
        else if (this.value == "No") {
            jQuery(".impingement-options").hide();
        }
    });
    jQuery("input[name='opdrecord[cuffsigns]']").on('change', function() {
        if (this.value == "Yes") {
            jQuery(".cuff-options").show();
        }
        else if (this.value == "No") {
            jQuery(".cuff-options").hide();
        }
    });
    jQuery("input[name='opdrecord[bicepsslapsigns]']").on('change', function() {
        if (this.value == "Yes") {
            jQuery(".biceps-options").show();
        }
        else if (this.value == "No") {
            jQuery(".biceps-options").hide();
        }
    });
    jQuery("input[name='opdrecord[instability]']").on('change', function() {
        if (this.value == "Yes") {
            jQuery(".instability-options").show();
        }
        else if (this.value == "No") {
            jQuery(".instability-options").hide();
        }
    });
    jQuery("input[name='opdrecord[distalneurovasculardeficit]']").on('change', function() {
        if (this.value == "Present") {
            jQuery(".distalneurovasculardeficit-options").show();
        }
        else if (this.value == "Absent") {
            jQuery(".distalneurovasculardeficit-options").hide();
        }
    });
    jQuery(".skincondition_buttons").on('click', function() {
        var clickedbutton = this;
        if (jQuery(clickedbutton).attr("input-value") === "Normal") {
            if (jQuery(clickedbutton).hasClass("btn-darkblue")) {
                jQuery(clickedbutton).removeClass("btn-darkblue");
                jQuery("#opdrecord_skincondition").val("");
            } else {
                jQuery(".skincondition_buttons").removeClass("btn-darkblue");
                jQuery("#opdrecord_skincondition").val("");
            }
        } else if (jQuery(clickedbutton).attr("input-value") !== "Normal") {
            jQuery.each(jQuery(".skincondition_buttons"), function(index, button) {
                if (jQuery(button).attr("input-value") === "Normal" && jQuery(button).hasClass("btn-darkblue")) {
                    jQuery(button).removeClass("btn-darkblue");
                    jQuery("#opdrecord_skincondition").val("");
                }
            });
        }
    });
    jQuery(".tenderness_buttons").on('click', function() {
        var clickedbutton = this;
        if (jQuery(clickedbutton).attr("input-value") === "None") {
            if (jQuery(clickedbutton).hasClass("btn-darkblue")) {
                jQuery(clickedbutton).removeClass("btn-darkblue");
                jQuery("#opdrecord_tenderness").val("");
            } else {
                jQuery(".tenderness_buttons").removeClass("btn-darkblue");
                jQuery("#opdrecord_tenderness").val("");
            }
        } else if (jQuery(clickedbutton).attr("input-value") !== "None") {
            jQuery.each(jQuery(".tenderness_buttons"), function(index, button) {
                if (jQuery(button).attr("input-value") === "None" && jQuery(button).hasClass("btn-darkblue")) {
                    jQuery(button).removeClass("btn-darkblue");
                    jQuery("#opdrecord_tenderness").val("");
                }
            });
        }
    });



    jQuery("#opdrecord_anthropometryheight, #opdrecord_anthropometryweight").on('change', function() {
        if ((jQuery("#opdrecord_anthropometryheight").val().length > 0) && (jQuery("#opdrecord_anthropometryweight").val().length > 0)) {
            var height = jQuery("#opdrecord_anthropometryheight").val() / 100;
            var weight = jQuery("#opdrecord_anthropometryweight").val();
            var bmi = "";
            bmi = weight / Math.pow(height, 2);
            jQuery("#opdrecord_anthropometrybmi").val(bmi.toFixed(1));
        }
    });


    <% @right_extension_flexion = Array.new %>
    <% @right_extension_flexion=@opdrecord.romsliderrangerightextensionflexion %>
    <% if @right_extension_flexion.nil? %>
        min = -60;
        max = 180;
    <%else%>
    <% @right_extension_flexion=@right_extension_flexion.split(":") %>
        min = <%= @right_extension_flexion[0] %>
        max = <%= @right_extension_flexion[1] %>
    <% end %>

    jQuery( "#rom-slider-range-right-extension-flexion" ).slider({
        range: true,
        min: -60,
        max: 180,
        values: [ min, max ],
        slide: function( event, ui ) {
            jQuery( "#opdrecord_romsliderrangerightextensionflexion" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
        }
    });

    <% @left_extension_flexion = Array.new %>
    <% @left_extension_flexion=@opdrecord.romsliderrangeleftextensionflexion %>
    <% if @left_extension_flexion.nil? %>
        min = -60;
        max = 180;
    <%else%>
    <% @left_extension_flexion=@left_extension_flexion.split(":") %>
        min = <%= @left_extension_flexion[0] %>
        max = <%= @left_extension_flexion[1] %>
    <% end %>

    jQuery( "#rom-slider-range-left-extension-flexion" ).slider({
        range: true,
        min: -60,
        max: 180,
        values: [ min, max ],
        slide: function( event, ui ) {
            jQuery( "#opdrecord_romsliderrangeleftextensionflexion" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
        }
    });


    <% @right_abduction = Array.new %>
    <% @right_abduction=@opdrecord.romsliderrangerightabduction %>
    <% if @right_abduction.nil? %>
        min = 0;
        max = 180;
    <%else%>
    <% @right_abduction=@right_abduction.split(":") %>
        min = <%= @right_abduction[0] %>
        max = <%= @right_abduction[1] %>
    <% end %>

    jQuery( "#rom-slider-range-right-abduction" ).slider({
        range: true,
        min: 0,
        max: 180,
        values: [ min, max ],
        slide: function( event, ui ) {
            jQuery( "#opdrecord_romsliderrangerightabduction" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
        }
    });


    <% @left_abduction = Array.new %>
    <% @left_abduction=@opdrecord.romsliderrangeleftabduction %>
    <% if @left_abduction.nil? %>
        min = 0;
        max = 180;
    <%else%>
    <% @left_abduction=@left_abduction.split(":") %>
        min = <%= @left_abduction[0] %>
        max = <%= @left_abduction[1] %>
    <% end %>


    jQuery( "#rom-slider-range-left-abduction" ).slider({
        range: true,
        min: 0,
        max: 180,
        values: [ min, max ],
        slide: function( event, ui ) {
            jQuery( "#opdrecord_romsliderrangeleftabduction" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
        }
    });

        <% @right_external_rotation = Array.new %>
    <% @right_external_rotation=@opdrecord.romsliderrangerightexternalrotation %>
    <% if @right_external_rotation.nil? %>
        min = 0;
        max = 90;
    <%else%>
    <% @right_external_rotation=@right_external_rotation.split(":") %>
        min = <%= @right_external_rotation[0] %>
        max = <%= @right_external_rotation[1] %>
    <% end %>


    jQuery( "#rom-slider-range-right-external-rotation" ).slider({
        range: true,
        min: 0,
        max: 90,
        values: [ min, max ],
        slide: function( event, ui ) {
            jQuery( "#opdrecord_romsliderrangerightexternalrotation" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
        }
    });


    <% @left_external_rotation = Array.new %>
    <% @left_external_rotation=@opdrecord.romsliderrangeleftexternalrotation %>
    <% if @left_external_rotation.nil? %>
        min = 0;
        max = 90;
    <%else%>
    <% @left_external_rotation=@left_external_rotation.split(":") %>
        min = <%= @left_external_rotation[0] %>
        max = <%= @left_external_rotation[1] %>
    <% end %>


    jQuery( "#rom-slider-range-left-external-rotation" ).slider({
        range: true,
        min: 0,
        max: 90,
        values: [ min, max ],
        slide: function( event, ui ) {
            jQuery( "#opdrecord_romsliderrangeleftexternalrotation" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
        }
    });

        <% @right_internal_rotation = Array.new %>
    <% @right_internal_rotation=@opdrecord.romsliderrangerightinternalrotation %>
    <% if @right_internal_rotation.nil? %>
        min = 0;
        max = 70;
    <%else%>
    <% @right_internal_rotation=@right_internal_rotation.split(":") %>
        min = <%= @right_internal_rotation[0] %>
        max = <%= @right_internal_rotation[1] %>
    <% end %>


    jQuery( "#rom-slider-range-right-internal-rotation" ).slider({
        range: true,
        min: 0,
        max: 70,
        values: [ min, max ],
        slide: function( event, ui ) {
            jQuery( "#opdrecord_romsliderrangerightinternalrotation" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
        }
    });

        <% @left_internal_rotation = Array.new %>
    <% @left_internal_rotation=@opdrecord.romsliderrangeleftinternalrotation %>
    <% if @left_internal_rotation.nil? %>
        min = 0;
        max = 70;
    <%else%>
    <% @left_internal_rotation=@left_internal_rotation.split(":") %>
        min = <%= @left_internal_rotation[0] %>
        max = <%= @left_internal_rotation[1] %>
    <% end %>



    jQuery( "#rom-slider-range-left-internal-rotation" ).slider({
        range: true,
        min: 0,
        max: 70,
        values: [ min, max ],
        slide: function( event, ui ) {
            jQuery( "#opdrecord_romsliderrangeleftinternalrotation" ).val( ui.values[ 0 ] + " : " + ui.values[ 1 ] );
        }
    });
    jQuery( "#opdrecord_romsliderrangerightextensionflexion" ).val( jQuery( "#rom-slider-range-right-extension-flexion" ).slider( "values", 0 ) +   " : " + jQuery( "#rom-slider-range-right-extension-flexion" ).slider( "values", 1 ) );
    jQuery( "#opdrecord_romsliderrangeleftextensionflexion" ).val( jQuery( "#rom-slider-range-left-extension-flexion" ).slider( "values", 0 ) +   " : " + jQuery( "#rom-slider-range-left-extension-flexion" ).slider( "values", 1 ) );
    jQuery( "#opdrecord_romsliderrangerightabduction" ).val( jQuery( "#rom-slider-range-right-abduction" ).slider( "values", 0 ) +   " : " + jQuery( "#rom-slider-range-right-abduction" ).slider( "values", 1 ) );
    jQuery( "#opdrecord_romsliderrangeleftabduction" ).val( jQuery( "#rom-slider-range-left-abduction" ).slider( "values", 0 ) +   " : " + jQuery( "#rom-slider-range-left-abduction" ).slider( "values", 1 ) );
    jQuery( "#opdrecord_romsliderrangerightexternalrotation" ).val( jQuery( "#rom-slider-range-right-external-rotation" ).slider( "values", 0 ) +   " : " + jQuery( "#rom-slider-range-right-external-rotation" ).slider( "values", 1 ) );
    jQuery( "#opdrecord_romsliderrangeleftexternalrotation" ).val( jQuery( "#rom-slider-range-left-external-rotation" ).slider( "values", 0 ) +   " : " + jQuery( "#rom-slider-range-left-external-rotation" ).slider( "values", 1 ) );
    jQuery( "#opdrecord_romsliderrangerightinternalrotation" ).val( jQuery( "#rom-slider-range-right-internal-rotation" ).slider( "values", 0 ) +   " : " + jQuery( "#rom-slider-range-right-internal-rotation" ).slider( "values", 1 ) );
    jQuery( "#opdrecord_romsliderrangeleftinternalrotation" ).val( jQuery( "#rom-slider-range-left-internal-rotation" ).slider( "values", 0 ) +   " : " + jQuery( "#rom-slider-range-left-internal-rotation" ).slider( "values", 1 ) );

});

function impingement(){
  if ($("input[name='opdrecord[impingement]']").val() == "Yes") {
    jQuery(".impingement-options").show();
  }
  else if ($("input[name='opdrecord[impingement]']").val() == "No") {
    jQuery(".impingement-options").hide();
  }
}

function cuffsigns(){
  if ($("input[name='opdrecord[cuffsigns]']").val() == "Yes") {
    jQuery(".cuff-options").show();
  }
  else if ($("input[name='opdrecord[cuffsigns]']").val() == "No") {
    jQuery(".cuff-options").hide();
  }
}

function bicepsslapsigns(){
  if ($("input[name='opdrecord[bicepsslapsigns]']").val() == "Yes") {
    jQuery(".biceps-options").show();
  }
  else if ($("input[name='opdrecord[bicepsslapsigns]']").val() == "No") {
    jQuery(".biceps-optionss").hide();
  }
}

function instability(){
  if ($("input[name='opdrecord[instability]']").val() == "Yes") {
    jQuery(".instability-options").show();
  }
  else if ($("input[name='opdrecord[instability]']").val() == "No") {
    jQuery(".instability-options").hide();
  }
}

function distalneurovasculardeficit(){
  if ($("input[name='opdrecord[distalneurovasculardeficit]']").val() == "Yes") {
    jQuery(".distalneurovasculardeficit-options").show();
  }
  else if ($("input[name='opdrecord[distalneurovasculardeficit]']").val() == "No") {
    jQuery(".distalneurovasculardeficit-options").hide();
  }
}

distalneurovasculardeficit();
instability();
bicepsslapsigns();
cuffsigns();
impingement();
