<!-- Note opdrecord.replace_blank is method to check blank in opd_record.rb -->
<% refraction_counter = 0 %>
<% right_left_counter = 0 %>

<% refractioncommoncomment = '' %>

<!-- common refraction comments -->
<% unless opdrecord.refractioncommoncomment.blank? %>
  <% if opdrecord.refractioncommoncomment.present? %>
    <% refractioncommoncomment = "Refraction Comments: #{opdrecord.read_attribute(:refractioncommoncomment).to_s}" %>
    <% refraction_counter += 1 %>
  <% end %>
<% end %>
<!-- common refraction comments -->

<!-- Counter Logic Dry Auto Refraction -->
<% dry_auto_refraction_counter = 0 %>
<% if opdrecord.r_autorefraction_dry_sph.present? || opdrecord.r_autorefraction_dry_cyl.present? || opdrecord.r_autorefraction_dry_axis.present? || opdrecord.r_autorefraction_dry1_sph.present? || opdrecord.r_autorefraction_dry1_cyl.present? || opdrecord.r_autorefraction_dry1_axis.present? || opdrecord.r_autorefraction_dry2_sph.present? || opdrecord.r_autorefraction_dry2_cyl.present? || opdrecord.r_autorefraction_dry2_axis.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% dry_auto_refraction_counter += 1 %>

  <% r_autorefraction_dry_sph = opdrecord.r_autorefraction_dry_sph %>
  <% r_autorefraction_dry_cyl = opdrecord.r_autorefraction_dry_cyl %>
  <% r_autorefraction_dry_axis = opdrecord.r_autorefraction_dry_axis %>
  <% r_autorefraction_dry1_sph = opdrecord.r_autorefraction_dry1_sph %>
  <% r_autorefraction_dry1_cyl = opdrecord.r_autorefraction_dry1_cyl %>
  <% r_autorefraction_dry1_axis = opdrecord.r_autorefraction_dry1_axis %>
  <% r_autorefraction_dry2_sph = opdrecord.r_autorefraction_dry2_sph %>
  <% r_autorefraction_dry2_cyl = opdrecord.r_autorefraction_dry2_cyl %>
  <% r_autorefraction_dry2_axis = opdrecord.r_autorefraction_dry2_axis %>
<% end %>

<% if opdrecord.l_autorefraction_dry_sph.present? || opdrecord.l_autorefraction_dry_cyl.present? || opdrecord.l_autorefraction_dry_axis.present? ||  opdrecord.l_autorefraction_dry1_sph.present? || opdrecord.l_autorefraction_dry1_cyl.present? || opdrecord.l_autorefraction_dry1_axis.present? ||  opdrecord.l_autorefraction_dry2_sph.present? || opdrecord.l_autorefraction_dry2_cyl.present? || opdrecord.l_autorefraction_dry2_axis.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% dry_auto_refraction_counter += 1 %>

  <% l_autorefraction_dry_sph = opdrecord.l_autorefraction_dry_sph %>
  <% l_autorefraction_dry_cyl = opdrecord.l_autorefraction_dry_cyl %>
  <% l_autorefraction_dry_axis = opdrecord.l_autorefraction_dry_axis %>
  <% l_autorefraction_dry1_sph = opdrecord.l_autorefraction_dry1_sph %>
  <% l_autorefraction_dry1_cyl = opdrecord.l_autorefraction_dry1_cyl %>
  <% l_autorefraction_dry1_axis = opdrecord.l_autorefraction_dry1_axis %>
  <% l_autorefraction_dry2_sph = opdrecord.l_autorefraction_dry2_sph %>
  <% l_autorefraction_dry2_cyl = opdrecord.l_autorefraction_dry2_cyl %>
  <% l_autorefraction_dry2_axis = opdrecord.l_autorefraction_dry2_axis %>
<% end %>
<!-- Counter Logic Dry Auto Refraction Ends -->

<!-- Counter Logic keratometry -->
<% keratometry_counter = 0 %>
<% if opdrecord.r_keratometry_distant_kh.present? || opdrecord.r_keratometry_distant_axis.present? || opdrecord.r_keratometry_near_kv.present? || opdrecord.r_keratometry_near_axis.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% keratometry_counter += 1 %>

  <% r_keratometry_distant_kh = opdrecord.r_keratometry_distant_kh %>
  <% r_keratometry_distant_axis = opdrecord.r_keratometry_distant_axis %>
  <% r_keratometry_near_kv = opdrecord.r_keratometry_near_kv %>
  <% r_keratometry_near_axis = opdrecord.r_keratometry_near_axis %>
<% end %>

<% if opdrecord.l_keratometry_distant_kh.present? || opdrecord.l_keratometry_distant_axis.present? || opdrecord.l_keratometry_near_kv.present? || opdrecord.l_keratometry_near_axis.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% keratometry_counter += 1 %>

  <% l_keratometry_distant_kh = opdrecord.l_keratometry_distant_kh %>
  <% l_keratometry_distant_axis = opdrecord.l_keratometry_distant_axis %>
  <% l_keratometry_near_kv = opdrecord.l_keratometry_near_kv %>
  <% l_keratometry_near_axis = opdrecord.l_keratometry_near_axis %>
<% end %>
<!-- Counter Logic keratometry Ends -->

<!-- Counter Logic Visual Acuity -->
<% r_visualacuity_counter = 0 %>
<% l_visualacuity_counter = 0 %>
<% if opdrecord.read_attribute(:r_visualacuity_unaided_p).present? %>
  <% r_visualacuity_unaided_p = "(#{opdrecord.read_attribute(:r_visualacuity_unaided_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_unaided_comments).to_s.length > 0 %>
  <% r_visualacuity_unaided_comments = " (#{opdrecord.read_attribute(:r_visualacuity_unaided_comments)})" %>
<% end %>
<% unless opdrecord.r_visualacuity_unaided.blank? %>
  <% r_visualacuity_unaided = "UCVA - #{OpdRecordsHelper.visualacuity_unaided(opdrecord.read_attribute(:r_visualacuity_unaided))}#{r_visualacuity_unaided_p}#{r_visualacuity_unaided_comments}" %>
  <% r_visualacuity_op = r_visualacuity_unaided.to_s %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>

<% if opdrecord.read_attribute(:r_visualacuity_pinhole_p).present? %>
  <% r_visualacuity_pinhole_p = "(#{opdrecord.read_attribute(:r_visualacuity_pinhole_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_pinhole_ni).present? %>
  <% r_visualacuity_pinhole_ni = "(#{opdrecord.read_attribute(:r_visualacuity_pinhole_ni)})" %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_ua_near_p).present? %>
  <% r_visualacuity_ua_near_p = "(#{opdrecord.read_attribute(:r_visualacuity_ua_near_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_ua_near_comments).to_s.length > 0 %>
  <% r_visualacuity_ua_near_comments = " (#{opdrecord.read_attribute(:r_visualacuity_ua_near_comments)})" %>
<% end %>
<% unless opdrecord.r_visualacuity_ua_near.blank? %>
  <% r_visualacuity_ua_near = "UCVA Near- #{opdrecord.read_attribute(:r_visualacuity_ua_near)}#{r_visualacuity_ua_near_p}#{r_visualacuity_ua_near_comments}" %>
  <% r_visualacuity_op = "#{r_visualacuity_op} #{r_visualacuity_ua_near}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>

<% if opdrecord.r_visualacuity_ua_s.present? %>
  <% r_visualacuity_ua_s = "S#{opdrecord.read_attribute(:r_visualacuity_ua_s)}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.r_visualacuity_ua_i.present? %>
  <% r_visualacuity_ua_i = "I#{opdrecord.read_attribute(:r_visualacuity_ua_i)}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.r_visualacuity_ua_n.present? %>
  <% r_visualacuity_ua_n = "N#{opdrecord.read_attribute(:r_visualacuity_ua_n)}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.r_visualacuity_ua_t.present? %>
  <% r_visualacuity_ua_t = "T#{opdrecord.read_attribute(:r_visualacuity_ua_t)}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_pinhole_comments).to_s.length > 0 %>
  <% r_visualacuity_pinhole_comments = " (#{opdrecord.read_attribute(:r_visualacuity_pinhole_comments)})" %>
<% end %>
<% unless opdrecord.r_visualacuity_pinhole.blank? %>
  <% r_visualacuity_pinhole = "PH- #{opdrecord.read_attribute(:r_visualacuity_pinhole)}#{r_visualacuity_pinhole_p}#{r_visualacuity_pinhole_ni}#{r_visualacuity_pinhole_comments}" %>
  <% r_visualacuity_op = "#{r_visualacuity_op} #{r_visualacuity_pinhole}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_glasses_p).present? %>
  <% r_visualacuity_glasses_p = "(#{opdrecord.read_attribute(:r_visualacuity_glasses_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_glasses_comments).to_s.length > 0 %>
  <% r_visualacuity_glasses_comments = " (#{opdrecord.read_attribute(:r_visualacuity_glasses_comments)})" %>
<% end %>
<% unless opdrecord.r_visualacuity_glasses.blank? %>
  <% r_visualacuity_glasses = "Glasses- #{opdrecord.read_attribute(:r_visualacuity_glasses)}#{r_visualacuity_glasses_p}#{r_visualacuity_glasses_comments}" %>
  <% r_visualacuity_op = "#{r_visualacuity_op} #{r_visualacuity_glasses}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_lens_p).present? %>
  <% r_visualacuity_lens_p = "(#{opdrecord.read_attribute(:r_visualacuity_lens_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_lens_comments).to_s.length > 0 %>
  <% r_visualacuity_lens_comments = " (#{opdrecord.read_attribute(:r_visualacuity_lens_comments)})" %>
<% end %>
<% unless opdrecord.r_visualacuity_lens.blank? %>
  <% r_visualacuity_lens = "Contact Lens- #{opdrecord.read_attribute(:r_visualacuity_lens)}#{r_visualacuity_lens_p}#{r_visualacuity_lens_comments}" %>
  <% r_visualacuity_op = "#{r_visualacuity_op} #{r_visualacuity_lens}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_near_p).present? %>
  <% r_visualacuity_near_p = "(#{opdrecord.read_attribute(:r_visualacuity_near_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:r_visualacuity_near_comments).to_s.length > 0 %>
  <% r_visualacuity_near_comments = " (#{opdrecord.read_attribute(:r_visualacuity_near_comments)})" %>
<% end %>
<% unless opdrecord.r_visualacuity_near.blank? %>
  <% r_visualacuity_near = "Glasses Near- #{opdrecord.read_attribute(:r_visualacuity_near)}#{r_visualacuity_near_p}#{r_visualacuity_near_comments}" %>
  <% r_visualacuity_op = "#{r_visualacuity_op} #{r_visualacuity_near}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% unless opdrecord.r_visualacuity_comments.blank? %>
  <% r_visualacuity_comments = " Comments- #{opdrecord.read_attribute(:r_visualacuity_comments)}" %>
  <% r_visualacuity_op = "#{r_visualacuity_op} #{r_visualacuity_comments}" %>
  <% r_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<!-- LEFT -->
<% if opdrecord.read_attribute(:l_visualacuity_unaided_p).present? %>
  <% l_visualacuity_unaided_p = "(#{opdrecord.read_attribute(:l_visualacuity_unaided_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_unaided_comments).to_s.length > 0 %>
  <% l_visualacuity_unaided_comments = " (#{opdrecord.read_attribute(:l_visualacuity_unaided_comments)})" %>
<% end %>
<% unless opdrecord.l_visualacuity_unaided.blank? %>
  <% l_visualacuity_unaided = "UCVA - #{OpdRecordsHelper.visualacuity_unaided(opdrecord.read_attribute(:l_visualacuity_unaided))}#{l_visualacuity_unaided_p}#{l_visualacuity_unaided_comments}" %>
  <% l_visualacuity_op = l_visualacuity_unaided.to_s %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>

<% if opdrecord.read_attribute(:l_visualacuity_pinhole_p).present? %>
  <% l_visualacuity_pinhole_p = "(#{opdrecord.read_attribute(:l_visualacuity_pinhole_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_pinhole_ni).present? %>
  <% l_visualacuity_pinhole_ni = "(#{opdrecord.read_attribute(:l_visualacuity_pinhole_ni)})" %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_ua_near_p).present? %>
  <% l_visualacuity_ua_near_p = "(#{opdrecord.read_attribute(:l_visualacuity_ua_near_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_ua_near_comments).to_s.length > 0 %>
  <% l_visualacuity_ua_near_comments = " (#{opdrecord.read_attribute(:l_visualacuity_ua_near_comments)})" %>
<% end %>
<% unless opdrecord.l_visualacuity_ua_near.blank? %>
  <% l_visualacuity_ua_near = "UCVA Near- #{opdrecord.read_attribute(:l_visualacuity_ua_near)}#{l_visualacuity_ua_near_p}#{l_visualacuity_ua_near_comments}" %>
  <% l_visualacuity_op = "#{l_visualacuity_op} #{l_visualacuity_ua_near}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>

<% if opdrecord.l_visualacuity_ua_s.present? %>
  <% l_visualacuity_ua_s = "S#{opdrecord.read_attribute(:l_visualacuity_ua_s)}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.l_visualacuity_ua_i.present? %>
  <% l_visualacuity_ua_i = "I#{opdrecord.read_attribute(:l_visualacuity_ua_i)}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.l_visualacuity_ua_n.present? %>
  <% l_visualacuity_ua_n = "N#{opdrecord.read_attribute(:l_visualacuity_ua_n)}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.l_visualacuity_ua_t.present? %>
  <% l_visualacuity_ua_t = "T#{opdrecord.read_attribute(:l_visualacuity_ua_t)}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_pinhole_comments).to_s.length > 0 %>
  <% l_visualacuity_pinhole_comments = " (#{opdrecord.read_attribute(:l_visualacuity_pinhole_comments)})" %>
<% end %>
<% unless opdrecord.l_visualacuity_pinhole.blank? %>
  <% l_visualacuity_pinhole = "PH- #{opdrecord.read_attribute(:l_visualacuity_pinhole)}#{l_visualacuity_pinhole_p}#{l_visualacuity_pinhole_ni}#{l_visualacuity_pinhole_comments}" %>
  <% l_visualacuity_op = "#{l_visualacuity_op} #{l_visualacuity_pinhole}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_glasses_p).present? %>
  <% l_visualacuity_glasses_p = "(#{opdrecord.read_attribute(:l_visualacuity_glasses_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_glasses_comments).to_s.length > 0 %>
  <% l_visualacuity_glasses_comments = " (#{opdrecord.read_attribute(:l_visualacuity_glasses_comments)})" %>
<% end %>
<% unless opdrecord.l_visualacuity_glasses.blank? %>
  <% l_visualacuity_glasses = "Glasses- #{opdrecord.read_attribute(:l_visualacuity_glasses)}#{l_visualacuity_glasses_p}#{l_visualacuity_glasses_comments}" %>
  <% l_visualacuity_op = "#{l_visualacuity_op} #{l_visualacuity_glasses}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_lens_p).present? %>
  <% l_visualacuity_lens_p = "(#{opdrecord.read_attribute(:l_visualacuity_lens_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_lens_comments).to_s.length > 0 %>
  <% l_visualacuity_lens_comments = " (#{opdrecord.read_attribute(:l_visualacuity_lens_comments)})" %>
<% end %>
<% unless opdrecord.l_visualacuity_lens.blank? %>
  <% l_visualacuity_lens = "Contact Lens- #{opdrecord.read_attribute(:l_visualacuity_lens)}#{l_visualacuity_lens_p}#{l_visualacuity_lens_comments}" %>
  <% l_visualacuity_op = "#{l_visualacuity_op} #{l_visualacuity_lens}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_near_p).present? %>
  <% l_visualacuity_near_p = "(#{opdrecord.read_attribute(:l_visualacuity_near_p)})" %>
<% end %>
<% if opdrecord.read_attribute(:l_visualacuity_near_comments).to_s.length > 0 %>
  <% l_visualacuity_near_comments = " (#{opdrecord.read_attribute(:l_visualacuity_near_comments)})" %>
<% end %>
<% unless opdrecord.l_visualacuity_near.blank? %>
  <% l_visualacuity_near = "Glasses Near- #{opdrecord.read_attribute(:l_visualacuity_near)}#{l_visualacuity_near_p}#{l_visualacuity_near_comments}" %>
  <% l_visualacuity_op = "#{l_visualacuity_op} #{l_visualacuity_near}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<% unless opdrecord.l_visualacuity_comments.blank? %>
  <% l_visualacuity_comments = " Comments- #{opdrecord.read_attribute(:l_visualacuity_comments)}" %>
  <% l_visualacuity_op = "#{l_visualacuity_op} #{l_visualacuity_comments}" %>
  <% l_visualacuity_counter += 1 %>
  <% refraction_counter += 1 %>
<% end %>
<!-- Counter Logic Visual Acuity Ends -->

<!-- Counter Logic PGP -->
<% pgp_counter = 0 %>
<% pgp_counter2 = 0 %>
<% pgp_counter3 = 0 %>
<% pgp_comments_counter = 0 %>
<% pgp_comments_counter2 = 0 %>
<% pgp_comments_counter3 = 0 %>


<% if opdrecord.r_pgp_distant_sph.present? || opdrecord.r_pgp_distant_cyl.present? || opdrecord.r_pgp_distant_axis.present? || opdrecord.r_pgp_distant_vision.present? || opdrecord.r_pgp_near_sph.present? || opdrecord.r_pgp_near_cyl.present? || opdrecord.r_pgp_near_axis.present? || opdrecord.r_pgp_near_vision.present? || opdrecord.r_pgp_typeoflens.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% pgp_counter += 1 %>

  <% r_pgp_distant_sph = opdrecord.r_pgp_distant_sph %>
  <% r_pgp_distant_cyl = opdrecord.r_pgp_distant_cyl %>
  <% r_pgp_distant_axis = opdrecord.r_pgp_distant_axis %>
  <% r_pgp_distant_vision = opdrecord.r_pgp_distant_vision %>
  <% r_pgp_near_sph = opdrecord.r_pgp_near_sph %>
  <% r_pgp_near_cyl = opdrecord.r_pgp_near_cyl %>
  <% r_pgp_near_axis = opdrecord.r_pgp_near_axis %>
  <% r_pgp_near_vision = opdrecord.r_pgp_near_vision %>
  <% r_pgp_typeoflens = opdrecord.r_pgp_typeoflens %>
  <% r_pgp_typeoflens = "Type of Lens : #{r_pgp_typeoflens}" if r_pgp_typeoflens.present? %>
<% end %>

<% if opdrecord.r_pgp_comments.present? %>
  <% r_pgp_comments = opdrecord.r_pgp_comments %>
  <% pgp_comments_counter = pgp_comments_counter + 1 %>
  <% r_pgp_comments = "#{opdrecord.read_attribute(:r_pgp_comments)}" if r_pgp_comments.present? %>
  <% refraction_counter = refraction_counter + 1 %>
  <% right_left_counter += 1 %>
<% end %>

<% if opdrecord.l_pgp_distant_sph.present? || opdrecord.l_pgp_distant_cyl.present? || opdrecord.l_pgp_distant_axis.present? || opdrecord.l_pgp_distant_vision.present? || opdrecord.l_pgp_near_sph.present? || opdrecord.l_pgp_near_cyl.present? || opdrecord.l_pgp_near_axis.present? || opdrecord.l_pgp_near_vision.present? || opdrecord.l_pgp_typeoflens.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% pgp_counter += 1 %>

  <% l_pgp_distant_sph = opdrecord.l_pgp_distant_sph %>
  <% l_pgp_distant_cyl = opdrecord.l_pgp_distant_cyl %>
  <% l_pgp_distant_axis = opdrecord.l_pgp_distant_axis %>
  <% l_pgp_distant_vision = opdrecord.l_pgp_distant_vision %>
  <% l_pgp_near_sph = opdrecord.l_pgp_near_sph %>
  <% l_pgp_near_cyl = opdrecord.l_pgp_near_cyl %>
  <% l_pgp_near_axis = opdrecord.l_pgp_near_axis %>
  <% l_pgp_near_vision = opdrecord.l_pgp_near_vision %>
  <% l_pgp_typeoflens = opdrecord.l_pgp_typeoflens %>
  <% l_pgp_typeoflens = "Type of Lens : #{l_pgp_typeoflens}" if l_pgp_typeoflens.present? %>
<% end %>

<% if opdrecord.l_pgp_comments.present? %>
  <% l_pgp_comments = opdrecord.l_pgp_comments %>
  <% pgp_comments_counter = pgp_comments_counter + 1 %>
  <% l_pgp_comments = "#{opdrecord.read_attribute(:l_pgp_comments)}" if l_pgp_comments.present? %>
  <% refraction_counter = refraction_counter + 1 %>
  <% right_left_counter += 1 %>
<% end %>

<% if opdrecord.r_pgp_distant_sph2.present? || opdrecord.r_pgp_distant_cyl2.present? || opdrecord.r_pgp_distant_axis2.present? || opdrecord.r_pgp_distant_vision2.present? || opdrecord.r_pgp_near_sph2.present? || opdrecord.r_pgp_near_cyl2.present? || opdrecord.r_pgp_near_axis2.present? || opdrecord.r_pgp_near_vision2.present? || opdrecord.r_pgp_typeoflens2.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% pgp_counter2 += 1 %>

  <% r_pgp_distant_sph2 = opdrecord.r_pgp_distant_sph2 %>
  <% r_pgp_distant_cyl2 = opdrecord.r_pgp_distant_cyl2 %>
  <% r_pgp_distant_axis2 = opdrecord.r_pgp_distant_axis2 %>
  <% r_pgp_distant_vision2 = opdrecord.r_pgp_distant_vision2 %>
  <% r_pgp_near_sph2 = opdrecord.r_pgp_near_sph2 %>
  <% r_pgp_near_cyl2 = opdrecord.r_pgp_near_cyl2 %>
  <% r_pgp_near_axis2 = opdrecord.r_pgp_near_axis2 %>
  <% r_pgp_near_vision2 = opdrecord.r_pgp_near_vision2 %>
  <% r_pgp_typeoflens2 = opdrecord.r_pgp_typeoflens2 %>
  <% r_pgp_typeoflens2 = "Type of Lens : #{r_pgp_typeoflens2}" if r_pgp_typeoflens2.present? %>
<% end %>

<% if opdrecord.r_pgp_comments2.present? %>
  <% r_pgp_comments2 = opdrecord.r_pgp_comments2 %>
  <% pgp_comments_counter2 = pgp_comments_counter2 + 1 %>
  <% r_pgp_comments2 = "#{opdrecord.read_attribute(:r_pgp_comments2)}" if r_pgp_comments2.present? %>
  <% refraction_counter = refraction_counter + 1 %>
  <% right_left_counter += 1 %>
<% end %>

<% if opdrecord.l_pgp_distant_sph2.present? || opdrecord.l_pgp_distant_cyl2.present? || opdrecord.l_pgp_distant_axis2.present? || opdrecord.l_pgp_distant_vision2.present? || opdrecord.l_pgp_near_sph2.present? || opdrecord.l_pgp_near_cyl2.present? || opdrecord.l_pgp_near_axis2.present? || opdrecord.l_pgp_near_vision2.present? || opdrecord.l_pgp_typeoflens2.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% pgp_counter2 += 1 %>

  <% l_pgp_distant_sph2 = opdrecord.l_pgp_distant_sph2 %>
  <% l_pgp_distant_cyl2 = opdrecord.l_pgp_distant_cyl2 %>
  <% l_pgp_distant_axis2 = opdrecord.l_pgp_distant_axis2 %>
  <% l_pgp_distant_vision2 = opdrecord.l_pgp_distant_vision2 %>
  <% l_pgp_near_sph2 = opdrecord.l_pgp_near_sph2 %>
  <% l_pgp_near_cyl2 = opdrecord.l_pgp_near_cyl2 %>
  <% l_pgp_near_axis2 = opdrecord.l_pgp_near_axis2 %>
  <% l_pgp_near_vision2 = opdrecord.l_pgp_near_vision2 %>
  <% l_pgp_typeoflens2 = opdrecord.l_pgp_typeoflens2 %>
  <% l_pgp_typeoflens2 = "Type of Lens : #{l_pgp_typeoflens2}" if l_pgp_typeoflens2.present? %>
<% end %>

<% if opdrecord.l_pgp_comments2.present? %>
  <% l_pgp_comments2 = opdrecord.l_pgp_comments2 %>
  <% pgp_comments_counter2 = pgp_comments_counter2 + 1 %>
  <% l_pgp_comments2 = "#{opdrecord.read_attribute(:l_pgp_comments2)}" if l_pgp_comments2.present? %>
  <% refraction_counter = refraction_counter + 1 %>
  <% right_left_counter += 1 %>
<% end %>

<% if opdrecord.r_pgp_distant_sph3.present? || opdrecord.r_pgp_distant_cyl3.present? || opdrecord.r_pgp_distant_axis3.present? || opdrecord.r_pgp_distant_vision3.present? || opdrecord.r_pgp_near_sph3.present? || opdrecord.r_pgp_near_cyl3.present? || opdrecord.r_pgp_near_axis3.present? || opdrecord.r_pgp_near_vision3.present? || opdrecord.r_pgp_typeoflens3.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% pgp_counter3 += 1 %>

  <% r_pgp_distant_sph3 = opdrecord.r_pgp_distant_sph3 %>
  <% r_pgp_distant_cyl3 = opdrecord.r_pgp_distant_cyl3 %>
  <% r_pgp_distant_axis3 = opdrecord.r_pgp_distant_axis3 %>
  <% r_pgp_distant_vision3 = opdrecord.r_pgp_distant_vision3 %>
  <% r_pgp_near_sph3 = opdrecord.r_pgp_near_sph3 %>
  <% r_pgp_near_cyl3 = opdrecord.r_pgp_near_cyl3 %>
  <% r_pgp_near_axis3 = opdrecord.r_pgp_near_axis3 %>
  <% r_pgp_near_vision3 = opdrecord.r_pgp_near_vision3 %>
  <% r_pgp_typeoflens3 = opdrecord.r_pgp_typeoflens3 %>
  <% r_pgp_typeoflens3 = "Type of Lens : #{r_pgp_typeoflens3}" if r_pgp_typeoflens3.present? %>
<% end %>

<% if opdrecord.r_pgp_comments3.present? %>
  <% r_pgp_comments3 = opdrecord.r_pgp_comments3 %>
  <% pgp_comments_counter3 = pgp_comments_counter3 + 1 %>
  <% r_pgp_comments3 = "#{opdrecord.read_attribute(:r_pgp_comments3)}" if r_pgp_comments3.present? %>
  <% refraction_counter = refraction_counter + 1 %>
  <% right_left_counter += 1 %>
<% end %>

<% if opdrecord.l_pgp_distant_sph3.present? || opdrecord.l_pgp_distant_cyl3.present? || opdrecord.l_pgp_distant_axis3.present? || opdrecord.l_pgp_distant_vision3.present? || opdrecord.l_pgp_near_sph3.present? || opdrecord.l_pgp_near_cyl3.present? || opdrecord.l_pgp_near_axis3.present? || opdrecord.l_pgp_near_vision3.present? || opdrecord.l_pgp_typeoflens3.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% pgp_counter3 += 1 %>

  <% l_pgp_distant_sph3 = opdrecord.l_pgp_distant_sph3 %>
  <% l_pgp_distant_cyl3 = opdrecord.l_pgp_distant_cyl3 %>
  <% l_pgp_distant_axis3 = opdrecord.l_pgp_distant_axis3 %>
  <% l_pgp_distant_vision3 = opdrecord.l_pgp_distant_vision3 %>
  <% l_pgp_near_sph3 = opdrecord.l_pgp_near_sph3 %>
  <% l_pgp_near_cyl3 = opdrecord.l_pgp_near_cyl3 %>
  <% l_pgp_near_axis3 = opdrecord.l_pgp_near_axis3 %>
  <% l_pgp_near_vision3 = opdrecord.l_pgp_near_vision3 %>
  <% l_pgp_typeoflens3 = opdrecord.l_pgp_typeoflens3 %>
  <% l_pgp_typeoflens3 = "Type of Lens : #{l_pgp_typeoflens3}" if l_pgp_typeoflens3.present? %>
<% end %>
<% if opdrecord.l_pgp_comments3.present? %>
  <% l_pgp_comments3 = opdrecord.l_pgp_comments3 %>
  <% pgp_comments_counter3 = pgp_comments_counter3 + 1 %>
  <% l_pgp_comments3 = "#{opdrecord.read_attribute(:l_pgp_comments3)}" if l_pgp_comments3.present? %>
  <% refraction_counter = refraction_counter + 1 %>
  <% right_left_counter += 1 %>
<% end %>

<% pgp_counter_near = 0 %>
<% if opdrecord.r_near_pgp_distant_sph.present? || opdrecord.r_near_pgp_distant_cyl.present? || opdrecord.r_near_pgp_distant_axis.present? || opdrecord.r_near_pgp_distant_vision.present? || opdrecord.r_near_pgp_near_sph.present? || opdrecord.r_near_pgp_near_cyl.present? || opdrecord.r_near_pgp_near_axis.present? || opdrecord.r_near_pgp_near_vision.present? || opdrecord.r_near_pgp_typeoflens.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% pgp_counter_near += 1 %>

  <% r_near_pgp_distant_sph = opdrecord.r_near_pgp_distant_sph %>
  <% r_near_pgp_distant_cyl = opdrecord.r_near_pgp_distant_cyl %>
  <% r_near_pgp_distant_axis = opdrecord.r_near_pgp_distant_axis %>
  <% r_near_pgp_distant_vision = opdrecord.r_near_pgp_distant_vision %>
  <% r_near_pgp_near_sph = opdrecord.r_near_pgp_near_sph %>
  <% r_near_pgp_near_cyl = opdrecord.r_near_pgp_near_cyl %>
  <% r_near_pgp_near_axis = opdrecord.r_near_pgp_near_axis %>
  <% r_near_pgp_near_vision = opdrecord.r_near_pgp_near_vision %>
  <% r_near_pgp_typeoflens = opdrecord.r_near_pgp_typeoflens %>
  <% r_near_pgp_typeoflens = "Type of Lens : #{r_near_pgp_typeoflens}" if r_near_pgp_typeoflens.present? %>
<% end %>

<% if opdrecord.l_near_pgp_distant_sph.present? || opdrecord.l_near_pgp_distant_cyl.present? || opdrecord.l_near_pgp_distant_axis.present? || opdrecord.l_near_pgp_distant_vision.present? || opdrecord.l_near_pgp_near_sph.present? || opdrecord.l_near_pgp_near_cyl.present? || opdrecord.l_near_pgp_near_axis.present? || opdrecord.l_near_pgp_near_vision.present? || opdrecord.l_near_pgp_typeoflens.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% pgp_counter_near += 1 %>

  <% l_near_pgp_distant_sph = opdrecord.l_near_pgp_distant_sph %>
  <% l_near_pgp_distant_cyl = opdrecord.l_near_pgp_distant_cyl %>
  <% l_near_pgp_distant_axis = opdrecord.l_near_pgp_distant_axis %>
  <% l_near_pgp_distant_vision = opdrecord.l_near_pgp_distant_vision %>
  <% l_near_pgp_near_sph = opdrecord.l_near_pgp_near_sph %>
  <% l_near_pgp_near_cyl = opdrecord.l_near_pgp_near_cyl %>
  <% l_near_pgp_near_axis = opdrecord.l_near_pgp_near_axis %>
  <% l_near_pgp_near_vision = opdrecord.l_near_pgp_near_vision %>
  <% l_near_pgp_typeoflens = opdrecord.l_near_pgp_typeoflens %>
  <% l_near_pgp_typeoflens = "Type of Lens : #{l_near_pgp_typeoflens}" if l_near_pgp_typeoflens.present? %>
<% end %>

<!-- Counter Logic Spectacles Condition -->
<% spectacles_counter = 0 %>
<% if opdrecord.pgp_duration.present? || opdrecord.pgp_duration_option.present? || opdrecord.pgp_frame_condition.present? || opdrecord.pgp_glasses.present? || opdrecord.pgp_dboc.present? || opdrecord.pgp_lens_condition.present? || opdrecord.pgp_frame_material.present? || opdrecord.pgp_lens_material.present? %>
  <% refraction_counter += 1 %>
  <% spectacles_counter += 1 %>

  <% pgp_duration = opdrecord.pgp_duration %>
  <% pgp_duration_option = opdrecord.pgp_duration_option %>
  <% pgp_frame_condition = opdrecord.pgp_frame_condition %>
  <% pgp_glasses = opdrecord.pgp_glasses %>
  <% pgp_dboc = opdrecord.pgp_dboc %>
  <% pgp_lens_condition = opdrecord.pgp_lens_condition %>
  <% pgp_frame_material = opdrecord.pgp_frame_material %>
  <% pgp_lens_material = opdrecord.pgp_lens_material %>
<% end %>

<!-- Counter Logic Spectacles Condition Ends -->

<!-- Counter Logic Dry Net Retinoscopy -->
<% dry_retinoscopy_counter = 0 %>
<% if opdrecord.r_retinoscopy_sph.present? || opdrecord.r_retinoscopy_cyl.present? || opdrecord.r_retinoscopy_axis.present? || opdrecord.r_retinoscopy_reflex.present? || opdrecord.r_retinoscopy_distance.present? || opdrecord.r_retinoscopy_drug_used.present? || opdrecord.r_retinoscopy_comments.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% dry_retinoscopy_counter += 1 %>

  <% r_retinoscopy_sph = opdrecord.r_retinoscopy_sph %>
  <% r_retinoscopy_cyl = opdrecord.r_retinoscopy_cyl %>
  <% r_retinoscopy_axis = opdrecord.r_retinoscopy_axis %>
  <% r_retinoscopy_reflex = opdrecord.r_retinoscopy_reflex %>
  <% r_retinoscopy_distance = opdrecord.r_retinoscopy_distance %>
  <% r_retinoscopy_drug_used = opdrecord.r_retinoscopy_drug_used %>
  <% r_retinoscopy_comments = opdrecord.r_retinoscopy_comments %>
<% end %>

<% if opdrecord.l_retinoscopy_sph.present? || opdrecord.l_retinoscopy_cyl.present? || opdrecord.l_retinoscopy_axis.present? || opdrecord.l_retinoscopy_reflex.present? || opdrecord.l_retinoscopy_distance.present? || opdrecord.l_retinoscopy_drug_used.present? || opdrecord.l_retinoscopy_comments.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% dry_retinoscopy_counter += 1 %>

  <% l_retinoscopy_sph = opdrecord.l_retinoscopy_sph %>
  <% l_retinoscopy_cyl = opdrecord.l_retinoscopy_cyl %>
  <% l_retinoscopy_axis = opdrecord.l_retinoscopy_axis %>
  <% l_retinoscopy_reflex = opdrecord.l_retinoscopy_reflex %>
  <% l_retinoscopy_distance = opdrecord.l_retinoscopy_distance %>
  <% l_retinoscopy_drug_used = opdrecord.l_retinoscopy_drug_used %>
  <% l_retinoscopy_comments = opdrecord.l_retinoscopy_comments %>
<% end %>
<!-- Counter Logic Dry Net Retinoscopy Ends -->

<!-- Counter Logic Dry Refraction -->
<% dry_refraction_counter = 0 %>
<% if opdrecord.r_refraction_distant_ucva.present? || opdrecord.r_refraction_distant_sph.present? || opdrecord.r_refraction_distant_cyl.present? || opdrecord.r_refraction_distant_axis.present? || opdrecord.r_refraction_distant_vision.present? || opdrecord.r_refraction_distant_va_ph.present? || opdrecord.r_refraction_add_ucva.present? || opdrecord.r_refraction_add_sph.present? || opdrecord.r_refraction_add_cyl.present? || opdrecord.r_refraction_add_axis.present? || opdrecord.r_refraction_add_vision.present? || opdrecord.r_refraction_add_va_ph.present? || opdrecord.r_refraction_near_ucva.present? || opdrecord.r_refraction_near_sph.present? || opdrecord.r_refraction_near_cyl.present? || opdrecord.r_refraction_near_axis.present? || opdrecord.r_refraction_near_vision.present? || opdrecord.r_refraction_near_va_ph.present? || opdrecord.r_refraction_comments.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% dry_refraction_counter += 1 %>

  <% r_refraction_distant_ucva = opdrecord.r_refraction_distant_ucva %>
  <% r_refraction_distant_sph = opdrecord.r_refraction_distant_sph %>
  <% r_refraction_distant_cyl = opdrecord.r_refraction_distant_cyl %>
  <% r_refraction_distant_axis = opdrecord.r_refraction_distant_axis %>
  <% r_refraction_distant_vision = opdrecord.r_refraction_distant_vision %>
  <% r_refraction_distant_va_ph = opdrecord.r_refraction_distant_va_ph %>
  <% r_refraction_near_ucva = opdrecord.r_refraction_near_ucva %>
  <% r_refraction_near_sph = opdrecord.r_refraction_near_sph %>
  <% r_refraction_near_cyl = opdrecord.r_refraction_near_cyl %>
  <% r_refraction_near_axis = opdrecord.r_refraction_near_axis %>
  <% r_refraction_near_vision = opdrecord.r_refraction_near_vision %>
  <% r_refraction_near_va_ph = opdrecord.r_refraction_near_va_ph %>
  <% r_refraction_comments = opdrecord.r_refraction_comments %>
  <% dry_refraction_advice = opdrecord.dry_refraction_advice %>
<% end %>

<% if opdrecord.l_refraction_distant_ucva.present? || opdrecord.l_refraction_distant_sph.present? || opdrecord.l_refraction_distant_cyl.present? || opdrecord.l_refraction_distant_axis.present? || opdrecord.l_refraction_distant_vision.present? || opdrecord.l_refraction_distant_va_ph.present? || opdrecord.l_refraction_add_ucva.present? || opdrecord.l_refraction_add_sph.present? || opdrecord.l_refraction_add_cyl.present? || opdrecord.l_refraction_add_axis.present? || opdrecord.l_refraction_add_vision.present? || opdrecord.l_refraction_add_va_ph.present? || opdrecord.l_refraction_near_ucva.present? || opdrecord.l_refraction_near_sph.present? || opdrecord.l_refraction_near_cyl.present? || opdrecord.l_refraction_near_axis.present? || opdrecord.l_refraction_near_vision.present? || opdrecord.l_refraction_near_va_ph.present? || opdrecord.l_refraction_comments.present? %>
  <% refraction_counter += 1 %>
  <% right_left_counter += 1 %>
  <% dry_refraction_counter += 1 %>

  <% l_refraction_distant_ucva = opdrecord.l_refraction_distant_ucva %>
  <% l_refraction_distant_sph = opdrecord.l_refraction_distant_sph %>
  <% l_refraction_distant_cyl = opdrecord.l_refraction_distant_cyl %>
  <% l_refraction_distant_axis = opdrecord.l_refraction_distant_axis %>
  <% l_refraction_distant_vision = opdrecord.l_refraction_distant_vision %>
  <% l_refraction_distant_va_ph = opdrecord.l_refraction_distant_va_ph %>
  <% l_refraction_near_ucva = opdrecord.l_refraction_near_ucva %>
  <% l_refraction_near_sph = opdrecord.l_refraction_near_sph %>
  <% l_refraction_near_cyl = opdrecord.l_refraction_near_cyl %>
  <% l_refraction_near_axis = opdrecord.l_refraction_near_axis %>
  <% l_refraction_near_vision = opdrecord.l_refraction_near_vision %>
  <% l_refraction_near_va_ph = opdrecord.l_refraction_near_va_ph %>
  <% l_refraction_comments = opdrecord.l_refraction_comments %>
  <% dry_refraction_advice = opdrecord.dry_refraction_advice %>
<% end %>
<!-- Counter Logic Dry Refraction Ends -->

<!-- Counter Logic Dry Refraction -->
<% duochrome_jcc_counter = 0 %>
<% if opdrecord.duochrome.present? || opdrecord.jcc.present? %>
  <% refraction_counter += 1 %>
  <% duochrome_jcc_counter += 1 %>

  <% duochrome = opdrecord.duochrome ? 'Yes' : 'No' %>
  <% jcc = opdrecord.jcc ? 'Yes' : 'No' %>
<% end %>
<!-- Counter Logic Dry Refraction Ends -->

<% if opdrecord.chiefcomplaint_comments.present? && opdrecord.templatetype == "refraction" %>
  <div id="chief-complaints-summary" class="chief-complaints-summary mt10">
    <b>Chief Complaints:</b> <span style="white-space: pre-line"><%= opdrecord.chiefcomplaint_comments %></span>
  </div>
<% end %>

<% if refraction_counter > 0 %>
  <div id="dry-refraction-summary" class="dry-refraction-summary <%= 'print_text_font_size' if  @print_setting %>" style="<%= heading_font_size %>">
    <div class="row mb5">
      <strong>REFRACTION</strong>
      <div class="summary-line-border"></div>
    </div>
    <% if refractioncommoncomment.present? %>
      <div class="col-md-12 col-sm-12">
        <span style="white-space: pre-line"><%=refractioncommoncomment%></span>
      </div>
    <% end %>
    <% if right_left_counter > 0 %>
      <div class="row">
        <div class="col-md-6 col-sm-6">
          <div class="text-center" style="background-color:#ddd;">R/OD</div>
        </div>
        <div class="col-md-6 col-sm-6">
          <div class="text-center" style="background-color:#ddd;">L/OS</div>
        </div>
      </div>
    <% end %>
    <% if dry_auto_refraction_counter > 0 %>
      <div class="row dry-auto-refraction-block">
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Dry Auto Refraction:</strong>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="25%" class="table-css"></th>
                <th width="25%" class="table-css">Sph</th>
                <th width="25%" class="table-css">Cyl</th>
                <th width="25%" class="table-css">Axis</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Dry</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_autorefraction_dry_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_autorefraction_dry_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_autorefraction_dry_axis) %></td>
              </tr>
              <tr>
                <td class="table-css"></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_autorefraction_dry1_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_autorefraction_dry1_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_autorefraction_dry1_axis) %></td>
              </tr>
              <tr>
                <td class="table-css"></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_autorefraction_dry2_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_autorefraction_dry2_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_autorefraction_dry2_axis) %></td>
              </tr>
            </tbody>
          </table>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Dry Auto Refraction:</strong>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="25%" class="table-css"></th>
                <th width="25%" class="table-css">Sph</th>
                <th width="25%" class="table-css">Cyl</th>
                <th width="25%" class="table-css">Axis</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Dry</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_autorefraction_dry_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_autorefraction_dry_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_autorefraction_dry_axis) %></td>
              </tr>
              <tr>
                <td class="table-css"></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_autorefraction_dry1_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_autorefraction_dry1_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_autorefraction_dry1_axis) %></td>
              </tr>
              <tr>
                <td class="table-css"></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_autorefraction_dry2_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_autorefraction_dry2_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_autorefraction_dry2_axis) %></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    <% end %>
    <% if r_visualacuity_counter > 0 || l_visualacuity_counter > 0 %>
      <div class="row dry-visual-acuity-block">
        <div class="col-md-6 col-xs-6">
          <% if r_visualacuity_counter > 0 %>
            <strong class="head-title">VA:</strong>
            <span class="text-font">
              <%= r_visualacuity_op %>
              <% if r_visualacuity_ua_s.present? || r_visualacuity_ua_i.present? || r_visualacuity_ua_n.present? || r_visualacuity_ua_t.present? %>
                  PR(UCVA): <%= r_visualacuity_ua_s %> <%= r_visualacuity_ua_i %> <%= r_visualacuity_ua_n %> <%= r_visualacuity_ua_t %>
              <% end %>
            </span>
          <% end %>
        </div>
        <div class="col-md-6 col-xs-6">
          <% if l_visualacuity_counter > 0 %>
            <strong class="head-title">VA:</strong>
            <span class="text-font">
              <%= l_visualacuity_op %>
              <% if l_visualacuity_ua_s.present? || l_visualacuity_ua_i.present? || l_visualacuity_ua_n.present? || l_visualacuity_ua_t.present? %>
                  PR(UCVA): <%= l_visualacuity_ua_s %> <%= l_visualacuity_ua_i %> <%= l_visualacuity_ua_n %> <%= l_visualacuity_ua_t %>
              <% end %>
            </span>
          <% end %>
        </div>
      </div>
    <% end %>

    <% if keratometry_counter > 0 %>
      <div class="row dry-auto-refraction-block">
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Keratometry:</strong>
          <table class="table table-bordered mb10" width="100%">
            <tbody>
              <tr>
                <th width="40%" style="padding:1px;font-size:11px;text-align:center;"></th>
                <th width="30%" style="padding:1px;font-size:11px;text-align:center;"></th>
                <th width="30%" style="padding:1px;font-size:11px;text-align:center;">Axis</th>
              </tr>
            </tbody>
            <tbody>
              <tr>
                <td style="padding:1px;font-size:11px;text-align:center;">Kh</td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_keratometry_distant_kh %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_keratometry_distant_axis %></td>
              </tr>
              <tr>
                <td style="padding:1px;font-size:11px;text-align:center;">Kv</td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_keratometry_near_kv %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_keratometry_near_axis %></td>
              </tr>
            </tbody>
          </table>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Keratometry:</strong>
          <table class="table table-bordered mb10" width="100%">
            <tbody>
              <tr>
                <th width="40%" style="padding:1px;font-size:11px;text-align:center;"></th>
                <th width="30%" style="padding:1px;font-size:11px;text-align:center;"></th>
                <th width="30%" style="padding:1px;font-size:11px;text-align:center;">Axis</th>
              </tr>
            </tbody>
            <tbody>
              <tr>
                <td style="padding:1px;font-size:11px;text-align:center;">Kh</td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= l_keratometry_distant_kh %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= l_keratometry_distant_axis %></td>
              </tr>
              <tr>
                <td style="padding:1px;font-size:11px;text-align:center;">Kv</td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= l_keratometry_near_kv %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= l_keratometry_near_axis %></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    <% end %>

    <% if [pgp_counter + pgp_comments_counter, pgp_counter2 + pgp_comments_counter2, pgp_counter3 + pgp_comments_counter3].reject { |pgp| pgp == 0 }.count > 1 %>
      <% show_pgp_counter = true %>
    <% end %>
    <% show_pgp_no = 1 %>
    <% if pgp_counter > 0  %>
      <div class="row pgp-block">
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>&nbsp;<%= r_pgp_typeoflens %>
          <table class="table table-bordered mb10" width="100%">
            <tbody>
              <tr>
                <th width="40%" style="padding:1px;font-size:11px;text-align:center;"></th>
                <th width="15%" style="padding:1px;font-size:11px;text-align:center;">Sph</th>
                <th width="15%" style="padding:1px;font-size:11px;text-align:center;">Cyl</th>
                <th width="15%" style="padding:1px;font-size:11px;text-align:center;">Axis</th>
                <th width="15%" style="padding:1px;font-size:11px;text-align:center;">Vision</th>
              </tr>
            </tbody>
            <tbody>
              <tr>
                <td style="padding:1px;font-size:11px;text-align:center;">Distant</td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_pgp_distant_sph %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_pgp_distant_cyl %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_pgp_distant_axis %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_pgp_distant_vision %></td>
              </tr>
              <tr>
                <td style="padding:1px;font-size:11px;text-align:center;">Near</td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_pgp_near_sph %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_pgp_near_cyl %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_pgp_near_axis %></td>
                <td style="padding:1px;font-size:11px;text-align:center;"><%= r_pgp_near_vision %></td>
              </tr>
            </tbody>
          </table>
          <% if pgp_comments_counter > 0 %>
            <div class="col-md-12 col-xs-12" style="font-size: 12px;">
              <strong>Comment :</strong>
              <span><%= r_pgp_comments %></span>
            </div>
          <% end %>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>&nbsp;<%= l_pgp_typeoflens %>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="20%" class="table-css"></th>
                <th width="20%" class="table-css">Sph</th>
                <th width="20%" class="table-css">Cyl</th>
                <th width="20%" class="table-css">Axis</th>
                <th width="20%" class="table-css">Vision</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_vision) %></td>
              </tr>
              <tr>
                <td class="table-css">Near</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_vision) %></td>
              </tr>
            </tbody>
          </table>
          <% if pgp_comments_counter > 0  %>
            <div class="col-md-12 col-xs-12" style="font-size: 12px;">
              <strong>Comment :</strong>
              <span><%= l_pgp_comments %></span>
            </div>
          <% end %>
        </div>
      </div>
      <% show_pgp_no += 1 %>
    <% elsif pgp_comments_counter > 0 && pgp_counter == 0 %>
      <div class="row pgp-block">
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>
          <div class="col-md-12 col-xs-12" style="font-size: 12px;">
            <strong>Comment :</strong>
            <span><%= r_pgp_comments %></span>
          </div>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>
          <div class="col-md-12 col-xs-12" style="font-size: 12px;">
            <strong>Comment :</strong>
            <span><%= l_pgp_comments %></span>
          </div>
        </div>
      </div>
      <% show_pgp_no += 1 %>
    <% end %>
    <% if pgp_counter2 > 0  %>
      <div class="row pgp-block">
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>&nbsp;<%= r_pgp_typeoflens2 %>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="20%" class="table-css"></th>
                <th width="20%" class="table-css">Sph</th>
                <th width="20%" class="table-css">Cyl</th>
                <th width="20%" class="table-css">Axis</th>
                <th width="20%" class="table-css">Vision</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_distant_sph2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_distant_cyl2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_distant_axis2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_distant_vision2) %></td>
              </tr>
              <tr>
                <td class="table-css">Near</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_near_sph2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_near_cyl2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_near_axis2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_near_vision2) %></td>
              </tr>
            </tbody>
          </table>
          <% if pgp_comments_counter2 > 0  %>
            <div class="col-md-12 col-xs-12" style="font-size: 12px;">
              <strong>Comment :</strong>
              <span><%= r_pgp_comments2 %></span>
            </div>
          <% end %>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>&nbsp;<%= l_pgp_typeoflens2 %>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="20%" class="table-css"></th>
                <th width="20%" class="table-css">Sph</th>
                <th width="20%" class="table-css">Cyl</th>
                <th width="20%" class="table-css">Axis</th>
                <th width="20%" class="table-css">Vision</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_sph2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_cyl2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_axis2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_vision2) %></td>
              </tr>
              <tr>
                <td class="table-css">Near</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_sph2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_cyl2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_axis2) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_vision2) %></td>
              </tr>
            </tbody>
          </table>
          <% if pgp_comments_counter2 > 0  %>
            <div class="col-md-12 col-xs-12" style="font-size: 12px;">
              <strong>Comment :</strong>
              <span><%= l_pgp_comments2 %></span>
            </div>
          <% end %>
        </div>
      </div>
      <% show_pgp_no += 1 %>
    <% elsif pgp_comments_counter2 > 0 && pgp_counter2 == 0 %>
      <div class="row pgp-block">
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>
          <div class="col-md-12 col-xs-12" style="font-size: 12px;">
            <strong>Comment :</strong>
            <span><%= r_pgp_comments2 %></span>
          </div>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>
          <div class="col-md-12 col-xs-12" style="font-size: 12px;">
            <strong>Comment :</strong>
            <span><%= l_pgp_comments2 %></span>
          </div>
        </div>
      </div>
      <% show_pgp_no += 1 %>
    <% end %>
    <% if pgp_counter3 > 0  %>
      <div class="row pgp-block">
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>&nbsp;<%= r_pgp_typeoflens3 %>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="20%" class="table-css"></th>
                <th width="20%" class="table-css">Sph</th>
                <th width="20%" class="table-css">Cyl</th>
                <th width="20%" class="table-css">Axis</th>
                <th width="20%" class="table-css">Vision</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_distant_sph3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_distant_cyl3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_distant_axis3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_distant_vision3) %></td>
              </tr>
              <tr>
                <td class="table-css">Near</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_near_sph3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_near_cyl3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_near_axis3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_pgp_near_vision3) %></td>
              </tr>
            </tbody>
          </table>
          <% if pgp_comments_counter3 > 0  %>
          <div class="col-md-12 col-xs-12" style="font-size: 12px;">
            <strong>Comment :</strong>
            <span><%= r_pgp_comments3 %></span>
          </div>
          <% end %>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>&nbsp;<%= l_pgp_typeoflens3 %>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="20%" class="table-css"></th>
                <th width="20%" class="table-css">Sph</th>
                <th width="20%" class="table-css">Cyl</th>
                <th width="20%" class="table-css">Axis</th>
                <th width="20%" class="table-css">Vision</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_sph3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_cyl3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_axis3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_distant_vision3) %></td>
              </tr>
              <tr>
                <td class="table-css">Near</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_sph3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_cyl3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_axis3) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_pgp_near_vision3) %></td>
              </tr>
            </tbody>
          </table>
          <% if pgp_comments_counter3 > 0  %>
            <div class="col-md-12 col-xs-12" style="font-size: 12px;">
              <strong>Comment :</strong>
              <span><%= l_pgp_comments3 %></span>
            </div>
          <% end %>
        </div>
      </div>
    <% elsif pgp_comments_counter3 > 0 && pgp_counter3 == 0 %>
      <div class="row pgp-block">
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>
          <div class="col-md-12 col-xs-12" style="font-size: 12px;">
            <strong>Comment :</strong>
            <span><%= r_pgp_comments3 %></span>
          </div>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong>PGP <%= show_pgp_no if show_pgp_counter %>:</strong>
          <div class="col-md-12 col-xs-12" style="font-size: 12px;">
            <strong>Comment :</strong>
            <span><%= l_pgp_comments3 %></span>
          </div>
        </div>
      </div>
    <% end %>


    <% if pgp_counter_near > 0 %>
      <div class="row pgp-block-near">
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Near PGP 1:</strong>&emsp;<span style="font-size: 10px;"><%= r_near_pgp_typeoflens %></span>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="20%" class="table-css"></th>
                <th width="20%" class="table-css">Sph</th>
                <th width="20%" class="table-css">Cyl</th>
                <th width="20%" class="table-css">Axis</th>
                <th width="20%" class="table-css">Vision</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_near_pgp_distant_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_near_pgp_distant_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_near_pgp_distant_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_near_pgp_distant_vision) %></td>
              </tr>
              <tr>
                <td class="table-css">Near</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_near_pgp_near_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_near_pgp_near_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_near_pgp_near_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_near_pgp_near_vision) %></td>
              </tr>
            </tbody>
          </table>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Near PGP 1:</strong>&emsp;<span style="font-size: 10px;"><%= l_near_pgp_typeoflens %></span>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="20%" class="table-css"></th>
                <th width="20%" class="table-css">Sph</th>
                <th width="20%" class="table-css">Cyl</th>
                <th width="20%" class="table-css">Axis</th>
                <th width="20%" class="table-css">Vision</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_near_pgp_distant_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_near_pgp_distant_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_near_pgp_distant_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_near_pgp_distant_vision) %></td>
              </tr>
              <tr>
                <td class="table-css">Near</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_near_pgp_near_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_near_pgp_near_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_near_pgp_near_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_near_pgp_near_vision) %></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    <% end %>

    <% if spectacles_counter > 0 %>
      <div class="row spectacles-condition-block">
        <div class="col-md-12">
          <strong class="head-title">Spectacles Condition:</strong>
          <div class="col-md-12">
            <div class="row text-font">
              <% if pgp_duration.present? || pgp_duration_option.present? %>
                <div class="col-md-4 col-xs-4">
                  <strong>Duration :</strong>
                  <span><%= "#{pgp_duration} #{pgp_duration_option}" %></span>
                </div>
              <% end %>
              <% if pgp_frame_condition.present? %>
                <div class="col-md-4 col-xs-4">
                  <strong>Condition of Frame :</strong>
                  <span><%= pgp_frame_condition %></span>
                </div>
              <% end %>
              <% if pgp_glasses.present? %>
                <div class="col-md-4 col-xs-4">
                  <strong>Type of Glasses :</strong>
                  <span><%= pgp_glasses %></span>
                </div>
              <% end %>
              <% if pgp_dboc.present? %>
                <div class="col-md-4 col-xs-4">
                  <strong>DBOC :</strong>
                  <span><%= "#{pgp_dboc} mm" %></span>
                </div>
              <% end %>
              <% if pgp_lens_condition.present? %>
                <div class="col-md-4 col-xs-4">
                  <strong>Condition of Lens :</strong>
                  <span><%= pgp_lens_condition %></span>
                </div>
              <% end %>
              <% if pgp_frame_material.present? %>
                <div class="col-md-4 col-xs-4">
                  <strong>Frame Material :</strong>
                  <span><%= pgp_frame_material %></span>
                </div>
              <% end %>
              <% if pgp_lens_material.present? %>
                <div class="col-md-4 col-xs-4">
                  <strong>Lens Material :</strong>
                  <span><%= pgp_lens_material %></span>
                </div>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    <% end %>

    <% if dry_retinoscopy_counter > 0 %>
      <div class="row retinoscopy-block">
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Dry Net Retinoscopy:</strong>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="18%" class="table-css"></th>
                <th width="18%" class="table-css">Sph</th>
                <th width="18%" class="table-css">Cyl</th>
                <th width="18%" class="table-css">Axis</th>
                <th width="28%" class="table-css">Reflex Type</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_retinoscopy_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_retinoscopy_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_retinoscopy_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_retinoscopy_reflex) %></td>
              </tr>
            </tbody>
          </table>
          <div class="col-md-12">
            <div class="row text-font">
              <% if r_retinoscopy_distance.present? %>
                <div class="col-md-6 col-xs-6">
                  <strong>At Distance :</strong>
                  <span><%= "#{r_retinoscopy_distance} Mt/cm" %></span>
                </div>
              <% end %>
              <% if r_retinoscopy_drug_used.present? %>
                <div class="col-md-6 col-xs-6">
                  <strong>Drug Used :</strong>
                  <span><%= r_retinoscopy_drug_used %></span>
                </div>
              <% end %>
              <% if r_retinoscopy_comments.present? %>
                <div class="col-md-12 col-xs-12">
                  <strong>Comment :</strong>
                  <span><%= r_retinoscopy_comments %></span>
                </div>
              <% end %>
            </div>
          </div>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Dry Net Retinoscopy:</strong>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="18%" class="table-css"></th>
                <th width="18%" class="table-css">Sph</th>
                <th width="18%" class="table-css">Cyl</th>
                <th width="18%" class="table-css">Axis</th>
                <th width="28%" class="table-css">Reflex Type</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_retinoscopy_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_retinoscopy_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_retinoscopy_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_retinoscopy_reflex) %></td>
              </tr>
            </tbody>
          </table>
          <div class="col-md-12">
            <div class="row text-font">
              <% if l_retinoscopy_distance.present? %>
                <div class="col-md-6 col-xs-6">
                  <strong>At Distance :</strong>
                  <span><%= "#{l_retinoscopy_distance} Mt/cm" %></span>
                </div>
              <% end %>
              <% if l_retinoscopy_drug_used.present? %>
                <div class="col-md-6 col-xs-6">
                  <strong>Drug Used :</strong>
                  <span><%= l_retinoscopy_drug_used %></span>
                </div>
              <% end %>
              <% if l_retinoscopy_comments.present? %>
                <div class="col-md-12 col-xs-12">
                  <strong>Comment :</strong>
                  <span><%= l_retinoscopy_comments %></span>
                </div>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    <% end %>
    <% if dry_refraction_counter > 0 %>
      <div class="row dry-refraction-block">
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Dry Refraction:</strong>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="14%" class="table-css"></th>
                <th width="14%" class="table-css">UCVA</th>
                <th width="14%" class="table-css">Sph</th>
                <th width="14%" class="table-css">Cyl</th>
                <th width="14%" class="table-css">Axis</th>
                <th width="14%" class="table-css">Vision</th>
                <th width="14%" class="table-css">VA(PH)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_distant_ucva) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_distant_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_distant_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_distant_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_distant_vision) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_distant_va_ph) %></td>
              </tr>
              <tr>
                <td class="table-css">Near</td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_near_ucva) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_near_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_near_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_near_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_near_vision) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(r_refraction_near_va_ph) %></td>
              </tr>
            </tbody>
          </table>
          <div class="col-md-12">
            <div class="row text-font">
              <% if r_refraction_comments.present? %>
                <div class="col-md-12 col-xs-12">
                  <strong>Comment :</strong>
                  <span><%= r_refraction_comments %></span>
                </div>
              <% end %>
              <% if dry_refraction_advice.present? %>
                <div class="col-md-12 col-xs-12">
                  <strong>Advice :</strong>
                  <span><%= dry_refraction_advice %></span>
                </div>
              <% end %>
            </div>
          </div>
        </div>
        <div class="col-md-6 col-xs-6">
          <strong class="head-title">Dry Refraction:</strong>
          <table class="table table-bordered mb10" width="100%">
            <thead>
              <tr>
                <th width="14%" class="table-css"></th>
                <th width="14%" class="table-css">UCVA</th>
                <th width="14%" class="table-css">Sph</th>
                <th width="14%" class="table-css">Cyl</th>
                <th width="14%" class="table-css">Axis</th>
                <th width="14%" class="table-css">Vision</th>
                <th width="14%" class="table-css">VA(PH)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="table-css">Distant</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_distant_ucva) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_distant_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_distant_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_distant_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_distant_vision) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_distant_va_ph) %></td>
              </tr>
              <tr>
                <td class="table-css">Near</td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_near_ucva) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_near_sph) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_near_cyl) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_near_axis) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_near_vision) %></td>
                <td class="table-css"><%= opdrecord.replace_blank(l_refraction_near_va_ph) %></td>
              </tr>
            </tbody>
          </table>
          <div class="col-md-12">
            <div class="row text-font">
              <% if l_refraction_comments.present? %>
                <div class="col-md-12 col-xs-12">
                  <strong>Comment :</strong>
                  <span><%= l_refraction_comments %></span>
                </div>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    <% end %>
    <% if duochrome_jcc_counter > 0 %>
      <div class="row duchrome-jcc-block">
        <div class="col-md-12">
          <div class="col-md-12">
            <div class="row text-font">
              <% if duochrome.present? %>
                <div class="col-md-4 col-xs-4">
                  <strong>Duochrome :</strong>
                  <span><%= duochrome %></span>
                </div>
              <% end %>
              <% if jcc.present? %>
                <div class="col-md-4 col-xs-4">
                  <strong>JCC :</strong>
                  <span><%= jcc %></span>
                </div>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    <% end %>
  </div>
<% end %>

<% if mail_job == true || params[:action] == "print_opd_record" %>
  <style type="text/css">
    .table-css {
      padding: 1px !important;
      font-size: 8px !important;
      text-align: center !important;
    }

    .text-font {
      font-size: 8px !important;
    }

    .head-title {
     font-size: 10px !important;
    }

    #dry-refraction-summary table tr {
      page-break-inside: avoid;
    }
  </style>
<% else %>
  <style type="text/css">
    .table-css {
      padding: 1px !important;
      font-size: 12px !important;
      text-align: center !important;
    }

    .text-font {
      font-size: 12px !important;
    }
  </style>
<% end %>
